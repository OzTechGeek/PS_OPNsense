{
    "MinimumVersion": "18.7",
    "MaximumVersion": "19.1",
    "AcmeClient": {
        "Account": {
            "objectname": "AcmeClient Account",
            "mountpoint": "\\\\OPNsense\\AcmeClient\\accounts\\account",
            "remove": {
                "returntype": "OPNsense.AcmeClient.Account",
                "command": {
                    "module": "acmeclient",
                    "controller": "accounts",
                    "command": "del/<uuid>"
                }
            },
            "get": {
                "returntype": "OPNsense.AcmeClient.Account",
                "command": {
                    "module": "acmeclient",
                    "controller": "accounts",
                    "command": "get/<uuid>",
                    "property": "account"
                }
            },
            "search": {
                "command": {
                    "module": "acmeclient",
                    "controller": "accounts",
                    "command": "search",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.AcmeClient.Account",
                "command": {
                    "module": "acmeclient",
                    "controller": "accounts",
                    "command": "toggle/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.AcmeClient.Account",
                "command": {
                    "module": "acmeclient",
                    "controller": "accounts",
                    "command": "add"
                }
            },
            "set": {
                "returntype": "OPNsense.AcmeClient.Account",
                "command": {
                    "module": "acmeclient",
                    "controller": "accounts",
                    "command": "set/<uuid>"
                }
            }
        },
        "Action": {
            "objectname": "AcmeClient Action",
            "mountpoint": "\\\\OPNsense\\AcmeClient\\actions\\action",
            "remove": {
                "returntype": "OPNsense.AcmeClient.Action",
                "command": {
                    "module": "acmeclient",
                    "controller": "actions",
                    "command": "del/<uuid>"
                }
            },
            "get": {
                "returntype": "OPNsense.AcmeClient.Action",
                "command": {
                    "module": "acmeclient",
                    "controller": "actions",
                    "command": "get/<uuid>",
                    "property": "action"
                }
            },
            "search": {
                "command": {
                    "module": "acmeclient",
                    "controller": "actions",
                    "command": "search",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.AcmeClient.Action",
                "command": {
                    "module": "acmeclient",
                    "controller": "actions",
                    "command": "toggle/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.AcmeClient.Action",
                "command": {
                    "module": "acmeclient",
                    "controller": "actions",
                    "command": "add"
                }
            },
            "set": {
                "returntype": "OPNsense.AcmeClient.Action",
                "command": {
                    "module": "acmeclient",
                    "controller": "actions",
                    "command": "set/<uuid>"
                }
            }
        },
        "Certificate": {
            "objectname": "AcmeClient Certificate",
            "mountpoint": "\\\\OPNsense\\AcmeClient\\certificates\\certificate",
            "remove": {
                "returntype": "OPNsense.AcmeClient.Certificate",
                "command": {
                    "module": "acmeclient",
                    "controller": "certificates",
                    "command": "del/<uuid>"
                }
            },
            "get": {
                "returntype": "OPNsense.AcmeClient.Certificate",
                "command": {
                    "module": "acmeclient",
                    "controller": "certificates",
                    "command": "get/<uuid>",
                    "property": "certificate"
                }
            },
            "search": {
                "command": {
                    "module": "acmeclient",
                    "controller": "certificates",
                    "command": "search",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.AcmeClient.Certificate",
                "command": {
                    "module": "acmeclient",
                    "controller": "certificates",
                    "command": "toggle/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.AcmeClient.Certificate",
                "command": {
                    "module": "acmeclient",
                    "controller": "certificates",
                    "command": "add"
                }
            },
            "set": {
                "returntype": "OPNsense.AcmeClient.Certificate",
                "command": {
                    "module": "acmeclient",
                    "controller": "certificates",
                    "command": "set/<uuid>"
                }
            }
        },
        "Validation": {
            "objectname": "AcmeClient Validation",
            "mountpoint": "\\\\OPNsense\\AcmeClient\\validations\\validation",
            "remove": {
                "returntype": "OPNsense.AcmeClient.Validation",
                "command": {
                    "module": "acmeclient",
                    "controller": "validations",
                    "command": "del/<uuid>"
                }
            },
            "get": {
                "returntype": "OPNsense.AcmeClient.Validation",
                "command": {
                    "module": "acmeclient",
                    "controller": "validations",
                    "command": "get/<uuid>",
                    "property": "validation"
                }
            },
            "search": {
                "command": {
                    "module": "acmeclient",
                    "controller": "validations",
                    "command": "search",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.AcmeClient.Validation",
                "command": {
                    "module": "acmeclient",
                    "controller": "validations",
                    "command": "toggle/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.AcmeClient.Validation",
                "command": {
                    "module": "acmeclient",
                    "controller": "validations",
                    "command": "add"
                }
            },
            "set": {
                "returntype": "OPNsense.AcmeClient.Validation",
                "command": {
                    "module": "acmeclient",
                    "controller": "validations",
                    "command": "set/<uuid>"
                }
            }
        }
    },
    "Bind": {
        "Acl": {
            "objectname": "Bind ACL",
            "mountpoint": "\\\\OPNsense\\bind\\acl\\acls\\acl",
            "remove": {
                "returntype": "OPNsense.Bind.Acl",
                "command": {
                    "module": "bind",
                    "controller": "acl",
                    "command": "delacl/<uuid>"
                }
            },
            "get": {
                "returntype": "OPNsense.Bind.Acl",
                "command": {
                    "module": "bind",
                    "controller": "acl",
                    "command": "getacl/<uuid>",
                    "property": "acl"
                }
            },
            "search": {
                "command": {
                    "module": "bind",
                    "controller": "acl",
                    "command": "searchacl",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Bind.Acl",
                "command": {
                    "module": "bind",
                    "controller": "acl",
                    "command": "toggleacl/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Bind.Acl",
                "command": {
                    "module": "bind",
                    "controller": "acl",
                    "command": "addacl"
                }
            },
            "set": {
                "returntype": "OPNsense.Bind.Acl",
                "command": {
                    "module": "bind",
                    "controller": "acl",
                    "command": "setacl/<uuid>"
                }
            }
        }
    },
    "CaptivePortal": {
        "Template": {
            "objectname": "CaptivePortal Template",
            "mountpoint": "\\\\OPNsense\\captiveportal\\templates\\template",
            "remove": {
                "returntype": "OPNsense.CaptivePortal.Template",
                "command": {
                    "module": "captiveportal",
                    "controller": "service",
                    "command": "deltemplate/<uuid>",
                    "Form": "remove"
                }
            },
            "download": {
                "command": {
                    "module": "captiveportal",
                    "controller": "service",
                    "command": "gettemplate/<fileid>"
                }
            },
            "get": {
                "returntype": "OPNsense.CaptivePortal.Template",
                "command": {
                    "module": "captiveportal",
                    "controller": "service",
                    "command": "searchtemplates/<uuid>",
                    "property": "rows"
                }
            },
            "search": {
                "command": {
                    "module": "captiveportal",
                    "controller": "service",
                    "command": "searchtemplates",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.CaptivePortal.Template",
                "command": {
                    "module": "captiveportal",
                    "controller": "service",
                    "command": "addtemplate"
                }
            },
            "set": {
                "returntype": "OPNsense.CaptivePortal.Template",
                "command": {
                    "module": "captiveportal",
                    "controller": "service",
                    "command": "settemplate/<uuid>"
                }
            }
        },
        "Zone": {
            "objectname": "CaptivePortal Zone",
            "mountpoint": "\\\\OPNsense\\captiveportal\\zones\\zone",
            "remove": {
                "returntype": "OPNsense.CaptivePortal.Zone",
                "command": {
                    "module": "captiveportal",
                    "controller": "settings",
                    "command": "delzone/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.CaptivePortal.Zone",
                "command": {
                    "module": "captiveportal",
                    "controller": "settings",
                    "command": "getzone/<uuid>",
                    "property": "zone"
                }
            },
            "search": {
                "command": {
                    "module": "captiveportal",
                    "controller": "settings",
                    "command": "searchzones",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.CaptivePortal.Zone",
                "command": {
                    "module": "captiveportal",
                    "controller": "settings",
                    "command": "togglezone/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.CaptivePortal.Zone",
                "command": {
                    "module": "captiveportal",
                    "controller": "settings",
                    "command": "addzone"
                }
            },
            "set": {
                "returntype": "OPNsense.CaptivePortal.Zone",
                "command": {
                    "module": "captiveportal",
                    "controller": "settings",
                    "command": "setzone/<uuid>"
                }
            }
        }
    },
    "Cron": {
        "Job": {
            "objectname": "CronJob",
            "mountpoint": "\\\\OPNsense\\cron\\jobs\\job",
            "remove": {
                "returntype": "OPNsense.Cron.Job",
                "command": {
                    "module": "cron",
                    "controller": "settings",
                    "command": "deljob/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Cron.Job",
                "command": {
                    "module": "cron",
                    "controller": "settings",
                    "command": "getjob/<uuid>",
                    "property": "job"
                }
            },
            "search": {
                "command": {
                    "module": "cron",
                    "controller": "settings",
                    "command": "searchjobs",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Cron.Job",
                "command": {
                    "module": "cron",
                    "controller": "settings",
                    "command": "togglejob/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Cron.Job",
                "command": {
                    "module": "cron",
                    "controller": "settings",
                    "command": "addjob"
                }
            },
            "set": {
                "returntype": "OPNsense.Cron.Job",
                "command": {
                    "module": "cron",
                    "controller": "settings",
                    "command": "setjob/<uuid>"
                }
            }
        }
    },
    "Firewall": {
        "Alias": {
            "objectname": "Firewall Alias",
            "mountpoint": "\\\\OPNsense\\Firewall\\Alias\\aliases\\alias",
            "remove": {
                "returntype": "OPNsense.Firewall.Alias",
                "command": {
                    "module": "firewall",
                    "controller": "alias",
                    "command": "delitem/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Firewall.Alias",
                "command": {
                    "module": "firewall",
                    "controller": "alias",
                    "command": "getitem/<uuid>",
                    "property": "alias"
                }
            },
            "search": {
                "command": {
                    "module": "firewall",
                    "controller": "alias",
                    "command": "searchitem",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Firewall.Alias",
                "command": {
                    "module": "firewall",
                    "controller": "alias",
                    "command": "toggleitem/<uuid>/<disabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Firewall.Alias",
                "command": {
                    "module": "firewall",
                    "controller": "alias",
                    "command": "additem"
                }
            },
            "set": {
                "returntype": "OPNsense.Firewall.Alias",
                "command": {
                    "module": "firewall",
                    "controller": "alias",
                    "command": "setitem/<uuid>"
                }
            }
        }
    },
    "FreeRadius": {
        "Client": {
            "objectname": "FreeRadius Client",
            "mountpoint": "\\\\OPNsense\\freeradius\\client\\clients\\client",
            "remove": {
                "returntype": "OPNsense.FreeRadius.Client",
                "command": {
                    "module": "freeradius",
                    "controller": "client",
                    "command": "delclient/<uuid>"
                }
            },
            "get": {
                "returntype": "OPNsense.FreeRadius.Client",
                "command": {
                    "module": "freeradius",
                    "controller": "client",
                    "command": "getclient/<uuid>",
                    "property": "client"
                }
            },
            "search": {
                "command": {
                    "module": "freeradius",
                    "controller": "client",
                    "command": "searchclient",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.FreeRadius.Client",
                "command": {
                    "module": "freeradius",
                    "controller": "client",
                    "command": "toggleclient/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.FreeRadius.Client",
                "command": {
                    "module": "freeradius",
                    "controller": "client",
                    "command": "addclient"
                }
            },
            "set": {
                "returntype": "OPNsense.FreeRadius.Client",
                "command": {
                    "module": "freeradius",
                    "controller": "client",
                    "command": "setclient/<uuid>"
                }
            }
        },
        "User": {
            "objectname": "FreeRadius User",
            "mountpoint": "\\\\OPNsense\\freeradius\\user\\users\\user",
            "remove": {
                "returntype": "OPNsense.FreeRadius.User",
                "command": {
                    "module": "freeradius",
                    "controller": "user",
                    "command": "deluser/<uuid>"
                }
            },
            "get": {
                "returntype": "OPNsense.FreeRadius.User",
                "command": {
                    "module": "freeradius",
                    "controller": "user",
                    "command": "getuser/<uuid>",
                    "property": "user"
                }
            },
            "search": {
                "command": {
                    "module": "freeradius",
                    "controller": "user",
                    "command": "searchuser",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.FreeRadius.User",
                "command": {
                    "module": "freeradius",
                    "controller": "user",
                    "command": "toggleuser/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.FreeRadius.User",
                "command": {
                    "module": "freeradius",
                    "controller": "user",
                    "command": "adduser"
                }
            },
            "set": {
                "returntype": "OPNsense.FreeRadius.User",
                "command": {
                    "module": "freeradius",
                    "controller": "user",
                    "command": "setuser/<uuid>"
                }
            }
        }
    },
    "FTPProxy": {
        "Proxy": {
            "objectname": "FTP Proxy",
            "mountpoint": "\\\\OPNsense\\ftpproxies\\ftpproxy",
            "remove": {
                "returntype": "OPNsense.Ftpproxy.Proxy",
                "command": {
                    "module": "ftpproxy",
                    "controller": "settings",
                    "command": "delproxy/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Ftpproxy.Proxy",
                "command": {
                    "module": "ftpproxy",
                    "controller": "settings",
                    "command": "getproxy/<uuid>",
                    "property": "ftpproxy"
                }
            },
            "search": {
                "command": {
                    "module": "ftpproxy",
                    "controller": "settings",
                    "command": "searchproxy",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Ftpproxy.Proxy",
                "command": {
                    "module": "ftpproxy",
                    "controller": "settings",
                    "command": "toggleproxy/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Ftpproxy.Proxy",
                "command": {
                    "module": "ftpproxy",
                    "controller": "settings",
                    "command": "addproxy"
                }
            },
            "set": {
                "returntype": "OPNsense.Ftpproxy.Proxy",
                "command": {
                    "module": "ftpproxy",
                    "controller": "settings",
                    "command": "setproxy/<uuid>"
                }
            }
        }
    },
    "HAProxy": {
        "Acl": {
            "objectname": "HAProxy Acl",
            "mountpoint": "\\\\OPNsense\\HAProxy\\acls\\acl",
            "remove": {
                "returntype": "OPNsense.HAProxy.Acl",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "delacl/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.HAProxy.Acl",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "getacl/<uuid>",
                    "property": "acl"
                }
            },
            "search": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "searchacls",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.HAProxy.Acl",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "addacl"
                }
            },
            "set": {
                "returntype": "OPNsense.HAProxy.Acl",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "setacl/<uuid>"
                }
            }
        },
        "Action": {
            "objectname": "HAProxy Action",
            "mountpoint": "\\\\OPNsense\\HAProxy\\actions\\action",
            "remove": {
                "returntype": "OPNsense.HAProxy.Action",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "delaction/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.HAProxy.Action",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "getaction/<uuid>",
                    "property": "action"
                }
            },
            "search": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "searchactions",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.HAProxy.Action",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "addaction"
                }
            },
            "set": {
                "returntype": "OPNsense.HAProxy.Action",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "setaction/<uuid>"
                }
            }
        },
        "Backend": {
            "objectname": "HAProxy Backend",
            "mountpoint": "\\\\OPNsense\\HAProxy\\backends\\backend",
            "remove": {
                "returntype": "OPNsense.HAProxy.Backend",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "delbackend/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.HAProxy.Backend",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "getbackend/<uuid>",
                    "property": "backend"
                }
            },
            "search": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "searchbackends",
                    "property": "rows"
                }
            },
            "toggle": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "togglebackend/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.HAProxy.Backend",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "addbackend"
                }
            },
            "set": {
                "returntype": "OPNsense.HAProxy.Backend",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "setbackend/<uuid>"
                }
            }
        },
        "ErrorFile": {
            "objectname": "HAProxy ErrorFile",
            "mountpoint": "\\\\OPNsense\\HAProxy\\errorfiles\\errorfile",
            "remove": {
                "returntype": "OPNsense.HAProxy.ErrorFile",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "delerrorfile/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.HAProxy.ErrorFile",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "geterrorfile/<uuid>",
                    "property": "errorfile"
                }
            },
            "search": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "searcherrorfiles",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.HAProxy.ErrorFile",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "adderrorfile"
                }
            },
            "set": {
                "returntype": "OPNsense.HAProxy.ErrorFile",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "seterrorfile/<uuid>"
                }
            }
        },
        "Frontend": {
            "objectname": "HAProxy Frontend",
            "mountpoint": "\\\\OPNsense\\HAProxy\\frontends\\frontend",
            "remove": {
                "returntype": "OPNsense.HAProxy.Frontend",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "delfrontend/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.HAProxy.Frontend",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "getfrontend/<uuid>",
                    "property": "frontend"
                }
            },
            "search": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "searchfrontends",
                    "property": "rows"
                }
            },
            "toggle": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "togglefrontend/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.HAProxy.Frontend",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "addfrontend"
                }
            },
            "set": {
                "returntype": "OPNsense.HAProxy.Frontend",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "setfrontend/<uuid>"
                }
            }
        },
        "Healthcheck": {
            "objectname": "HAProxy Healthcheck",
            "mountpoint": "\\\\OPNsense\\HAProxy\\healthchecks\\healthcheck",
            "remove": {
                "returntype": "OPNsense.HAProxy.Healthcheck",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "delhealthcheck/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.HAProxy.Healthcheck",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "gethealthcheck/<uuid>",
                    "property": "healthcheck"
                }
            },
            "search": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "searchhealthchecks",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.HAProxy.Healthcheck",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "addhealthcheck"
                }
            },
            "set": {
                "returntype": "OPNsense.HAProxy.Healthcheck",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "sethealthcheck/<uuid>"
                }
            }
        },
        "LuaScript": {
            "objectname": "HAProxy LuaScript",
            "mountpoint": "\\\\OPNsense\\HAProxy\\mapfiles\\mapfile",
            "remove": {
                "returntype": "OPNsense.HAProxy.Lua",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "dellua/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.HAProxy.Lua",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "getlua/<uuid>",
                    "property": "lua"
                }
            },
            "search": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "searchluas",
                    "property": "rows"
                }
            },
            "toggle": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "togglelua/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.HAProxy.Lua",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "addlua"
                }
            },
            "set": {
                "returntype": "OPNsense.HAProxy.Lua",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "setlua/<uuid>"
                }
            }
        },
        "MapFile": {
            "objectname": "HAProxy MapFile",
            "mountpoint": "\\\\OPNsense\\HAProxy\\luas\\lua",
            "remove": {
                "returntype": "OPNsense.HAProxy.MapFile",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "delmapfile/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.HAProxy.MapFile",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "getmapfile/<uuid>",
                    "property": "mapfile"
                }
            },
            "search": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "searchmapfiles",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.HAProxy.MapFile",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "addmapfile"
                }
            },
            "set": {
                "returntype": "OPNsense.HAProxy.MapFile",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "setmapfile/<uuid>"
                }
            }
        },
        "Server": {
            "objectname": "HAProxy Server",
            "mountpoint": "\\\\OPNsense\\HAProxy\\servers\\server",
            "remove": {
                "returntype": "OPNsense.HAProxy.Server",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "delserver/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.HAProxy.Server",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "getserver/<uuid>",
                    "property": "server"
                }
            },
            "search": {
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "searchservers",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.HAProxy.Server",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "addserver"
                }
            },
            "set": {
                "returntype": "OPNsense.HAProxy.Server",
                "command": {
                    "module": "haproxy",
                    "controller": "settings",
                    "command": "setserver/<uuid>"
                }
            }
        }
    },
    "IDS": {
        "InstalledRule": {
            "objectname": "IDS InstalledRule",
            "search": {
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "searchinstalledrules",
                    "property": "rows"
                }
            }
        },
        "Rule": {
            "objectname": "IDS Rule",
            "mountpoint": "\\\\OPNsense\\IDS\\rules\\rule",
            "toggle": {
                "returntype": "OPNsense.IDS.Rule",
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "togglerule/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "set": {
                "returntype": "OPNsense.IDS.Rule",
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "setrule/<uuid>"
                }
            }
        },
        "RuleSet": {
            "objectname": "IDS RuleSet",
            "get": {
                "returntype": "OPNsense.IDS.RuleSet",
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "getruleset/<uuid>"
                }
            },
            "toggle": {
                "returntype": "OPNsense.IDS.RuleSet",
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "toggleruleset/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "set": {
                "returntype": "OPNsense.IDS.RuleSet",
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "setruleset/<uuid>"
                }
            }
        },
        "UserRule": {
            "objectname": "IDS UserRule",
            "mountpoint": "\\\\OPNsense\\IDS\\userDefinedRules\\rule",
            "remove": {
                "returntype": "OPNsense.IDS.UserRule",
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "deluserrule/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.IDS.UserRule",
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "getuserrule/<uuid>",
                    "property": "rule"
                }
            },
            "search": {
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "searchuserrule",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.IDS.UserRule",
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "toggleuserrule/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.IDS.UserRule",
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "adduserrule"
                }
            },
            "set": {
                "returntype": "OPNsense.IDS.UserRule",
                "command": {
                    "module": "ids",
                    "controller": "settings",
                    "command": "setuserrule/<uuid>"
                }
            }
        }
    },
    "Monit": {
        "Alert": {
            "objectname": "Monit Alert",
            "mountpoint": "\\\\OPNsense\\monit\\alert",
            "remove": {
                "returntype": "OPNsense.Monit.Alert",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "del/alert/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Monit.Alert",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "get/alert/<uuid>",
                    "property": [
                        "monit",
                        "alert"
                    ]
                }
            },
            "search": {
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "search/alert",
                    "property": "rows",
                    "Form": "search"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Monit.Alert",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "toggle/alert/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Monit.Alert",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "add/alert"
                }
            },
            "set": {
                "returntype": "OPNsense.Monit.Alert",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "set/alert/<uuid>"
                }
            }
        },
        "Service": {
            "objectname": "Monit Service",
            "mountpoint": "\\\\OPNsense\\monit\\service",
            "remove": {
                "returntype": "OPNsense.Monit.Service",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "del/service/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Monit.Service",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "get/service/<uuid>",
                    "property": [
                        "monit",
                        "service"
                    ]
                }
            },
            "search": {
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "search/service",
                    "property": "rows",
                    "Form": "search"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Monit.Service",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "toggle/service/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Monit.Service",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "add/service"
                }
            },
            "set": {
                "returntype": "OPNsense.Monit.Service",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "set/service/<uuid>"
                }
            }
        },
        "Test": {
            "objectname": "Monit Test",
            "mountpoint": "\\\\OPNsense\\monit\\test",
            "remove": {
                "returntype": "OPNsense.Monit.Test",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "del/test/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Monit.Test",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "get/test/<uuid>",
                    "property": [
                        "monit",
                        "test"
                    ]
                }
            },
            "search": {
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "search/test",
                    "property": "rows",
                    "Form": "search"
                }
            },
            "add": {
                "returntype": "OPNsense.Monit.Test",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "add/test"
                }
            },
            "set": {
                "returntype": "OPNsense.Monit.Test",
                "command": {
                    "module": "monit",
                    "controller": "settings",
                    "command": "set/test/<uuid>"
                }
            }
        }
    },
    "NetSNMP": {
        "User": {
            "objectname": "SNMP User",
            "mountpoint": "\\\\OPNsense\\netsnmp\\user\\users\\user",
            "remove": {
                "returntype": "OPNsense.NetSnmp.User",
                "command": {
                    "module": "netsnmp",
                    "controller": "user",
                    "command": "deluser/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.NetSnmp.User",
                "command": {
                    "module": "netsnmp",
                    "controller": "user",
                    "command": "getuser/<uuid>",
                    "property": "user"
                }
            },
            "search": {
                "command": {
                    "module": "netsnmp",
                    "controller": "user",
                    "command": "searchuser",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.NetSnmp.User",
                "command": {
                    "module": "netsnmp",
                    "controller": "user",
                    "command": "toggleuser/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.NetSnmp.User",
                "command": {
                    "module": "netsnmp",
                    "controller": "user",
                    "command": "adduser"
                }
            },
            "set": {
                "returntype": "OPNsense.NetSnmp.User",
                "command": {
                    "module": "netsnmp",
                    "controller": "user",
                    "command": "setuser/<uuid>"
                }
            }
        }
    },
    "Nginx": {
        "Credential": {
            "objectname": "Nginx Credential",
            "mountpoint": "\\\\OPNsense\\Nginx\\credential",
            "remove": {
                "returntype": "OPNsense.Nginx.Credential",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "delcredential/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.Credential",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "getcredential/<uuid>",
                    "property": "credential"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchcredential/",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.Nginx.Credential",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "addcredential"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.Credential",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "setcredential/<uuid>",
                    "json": {}
                }
            }
        },
        "CustomPolicy": {
            "objectname": "Nginx CustomPolicy",
            "mountpoint": "\\\\OPNsense\\Nginx\\custom_policy",
            "remove": {
                "returntype": "OPNsense.Nginx.CustomPolicy",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "delcustompolicy/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.CustomPolicy",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "getcustompolicy/<uuid>",
                    "property": "custompolicy"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchcustompolicy/",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.Nginx.CustomPolicy",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "addcustompolicy"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.CustomPolicy",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "setcustompolicy/<uuid>",
                    "json": {}
                }
            }
        },
        "HttpRewrite": {
            "objectname": "Nginx HttpRewrite",
            "mountpoint": "\\\\OPNsense\\Nginx\\http_rewrite",
            "remove": {
                "returntype": "OPNsense.Nginx.HttpRewrite",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "delhttprewrite/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.HttpRewrite",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "gethttprewrite/<uuid>",
                    "property": "httprewrite"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchhttprewrite/",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.Nginx.HttpRewrite",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "addhttprewrite"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.HttpRewrite",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "sethttprewrite/<uuid>",
                    "json": {}
                }
            }
        },
        "HttpServer": {
            "objectname": "Nginx HttpServer",
            "mountpoint": "\\\\OPNsense\\Nginx\\http_server",
            "remove": {
                "returntype": "OPNsense.Nginx.HttpServer",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "delhttpserver/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.HttpServer",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "gethttpserver/<uuid>",
                    "property": "httpserver"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchhttpserver/",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.Nginx.HttpServer",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "addhttpserver"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.HttpServer",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "sethttpserver/<uuid>",
                    "json": {}
                }
            }
        },
        "LimitRequestConnection": {
            "objectname": "Nginx LimitRequestConnection",
            "mountpoint": "\\\\OPNsense\\Nginx\\limit_request_connection",
            "remove": {
                "returntype": "OPNsense.Nginx.LimitRequestConnection",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "dellimit_request_connection/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.LimitRequestConnection",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "getlimit_request_connection/<uuid>",
                    "property": "limit_request_connection"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchlimit_request_connection/",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.Nginx.LimitRequestConnection",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "addlimit_request_connection"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.LimitRequestConnection",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "setlimit_request_connection/<uuid>",
                    "json": {}
                }
            }
        },
        "LimitZone": {
            "objectname": "Nginx LimitZone",
            "mountpoint": "\\\\OPNsense\\Nginx\\limit_zone",
            "remove": {
                "returntype": "OPNsense.Nginx.LimitZone",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "dellimit_zone/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.LimitZone",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "getlimit_zone/<uuid>",
                    "property": "limit_zone"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchlimit_zone/",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.Nginx.LimitZone",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "addlimit_zone"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.LimitZone",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "setlimit_zone/<uuid>",
                    "json": {}
                }
            }
        },
        "Location": {
            "objectname": "Nginx Location",
            "mountpoint": "\\\\OPNsense\\Nginx\\location",
            "remove": {
                "returntype": "OPNsense.Nginx.Location",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "dellocation/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.Location",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "getlocation/<uuid>",
                    "property": "location"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchlocation/",
                    "property": "rows"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.Location",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "setlocation/<uuid>",
                    "json": {}
                }
            }
        },
        "NaxsiRule": {
            "objectname": "Nginx NaxsiRule",
            "mountpoint": "\\\\OPNsense\\Nginx\\naxsi_rule",
            "remove": {
                "returntype": "OPNsense.Nginx.NaxsiRule",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "delnaxsirule/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.NaxsiRule",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "getnaxsirule/<uuid>",
                    "property": "naxsirule"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchnaxsirule/",
                    "property": "rows"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.NaxsiRule",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "setnaxsirule/<uuid>",
                    "json": {}
                }
            }
        },
        "SecurityHeader": {
            "objectname": "Nginx SecurityHeader",
            "mountpoint": "\\\\OPNsense\\Nginx\\security_header",
            "remove": {
                "returntype": "OPNsense.Nginx.SecurityHeader",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "delsecurity_header/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.SecurityHeader",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "getsecurity_header/<uuid>",
                    "property": "security_header"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchsecurity_header/",
                    "property": "rows"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.SecurityHeader",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "setsecurity_header/<uuid>",
                    "json": {}
                }
            }
        },
        "Upstream": {
            "objectname": "Nginx Upstream",
            "mountpoint": "\\\\OPNsense\\Nginx\\upstream",
            "remove": {
                "returntype": "OPNsense.Nginx.Upstream",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "delupstream/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.Upstream",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "getupstream/<uuid>",
                    "property": "upstream"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchupstream/",
                    "property": "rows"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.Upstream",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "setupstream/<uuid>",
                    "json": {}
                }
            }
        },
        "UpstreamServer": {
            "objectname": "Nginx UpstreamServer",
            "mountpoint": "\\\\OPNsense\\Nginx\\upstreamserver",
            "remove": {
                "returntype": "OPNsense.Nginx.UpstreamServer",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "delupstreamserver/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.UpstreamServer",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "getupstreamserver/<uuid>",
                    "property": "upstream_server"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchupstreamserver/",
                    "property": "rows"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.UpstreamServer",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "setupstreamserver/<uuid>",
                    "json": {}
                }
            }
        },
        "UserList": {
            "objectname": "Nginx UserList",
            "mountpoint": "\\\\OPNsense\\Nginx\\userlist",
            "remove": {
                "returntype": "OPNsense.Nginx.UserList",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "deluserlist/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Nginx.UserList",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "getuserlist/<uuid>",
                    "property": "userlist"
                }
            },
            "search": {
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "searchuserlist/",
                    "property": "rows"
                }
            },
            "set": {
                "returntype": "OPNsense.Nginx.UserList",
                "command": {
                    "module": "nginx",
                    "controller": "settings",
                    "command": "setupuserlist/<uuid>",
                    "json": {}
                }
            }
        }
    },
    "Postfix": {
        "Domain": {
            "objectname": "Postfix Domain",
            "mountpoint": "\\\\OPNsense\\postfix\\domain\\domains\\domain",
            "remove": {
                "returntype": "OPNsense.Postfix.Domain",
                "command": {
                    "module": "postfix",
                    "controller": "domain",
                    "command": "deldomain/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Postfix.Domain",
                "command": {
                    "module": "postfix",
                    "controller": "domain",
                    "command": "getdomain/<uuid>",
                    "property": "domain"
                }
            },
            "search": {
                "command": {
                    "module": "postfix",
                    "controller": "domain",
                    "command": "searchdomain",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Postfix.Domain",
                "command": {
                    "module": "postfix",
                    "controller": "domain",
                    "command": "toggledomain/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Postfix.Domain",
                "command": {
                    "module": "postfix",
                    "controller": "domain",
                    "command": "adddomain"
                }
            },
            "set": {
                "returntype": "OPNsense.Postfix.Domain",
                "command": {
                    "module": "postfix",
                    "controller": "domain",
                    "command": "setdomain/<uuid>"
                }
            }
        },
        "Recipient": {
            "objectname": "Postfix Recipient",
            "mountpoint": "\\\\OPNsense\\postfix\\recipient\\recipients\\recipient",
            "remove": {
                "returntype": "OPNsense.Postfix.Recipient",
                "command": {
                    "module": "postfix",
                    "controller": "recipient",
                    "command": "delrecipient/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Postfix.Recipient",
                "command": {
                    "module": "postfix",
                    "controller": "recipient",
                    "command": "getrecipient/<uuid>",
                    "property": "recipient"
                }
            },
            "search": {
                "command": {
                    "module": "postfix",
                    "controller": "recipient",
                    "command": "searchrecipient",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Postfix.Recipient",
                "command": {
                    "module": "postfix",
                    "controller": "recipient",
                    "command": "togglerecipient/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Postfix.Recipient",
                "command": {
                    "module": "postfix",
                    "controller": "recipient",
                    "command": "addrecipient"
                }
            },
            "set": {
                "returntype": "OPNsense.Postfix.Recipient",
                "command": {
                    "module": "postfix",
                    "controller": "recipient",
                    "command": "setrecipient/<uuid>"
                }
            }
        },
        "Sender": {
            "objectname": "Postfix Sender",
            "mountpoint": "\\\\OPNsense\\postfix\\sender\\senders\\sender",
            "remove": {
                "returntype": "OPNsense.Postfix.Sender",
                "command": {
                    "module": "postfix",
                    "controller": "sender",
                    "command": "delsender/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Postfix.Sender",
                "command": {
                    "module": "postfix",
                    "controller": "sender",
                    "command": "getsender/<uuid>",
                    "property": "sender"
                }
            },
            "search": {
                "command": {
                    "module": "postfix",
                    "controller": "sender",
                    "command": "searchsender",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Postfix.Sender",
                "command": {
                    "module": "postfix",
                    "controller": "sender",
                    "command": "togglesender/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Postfix.Sender",
                "command": {
                    "module": "postfix",
                    "controller": "sender",
                    "command": "addsender"
                }
            },
            "set": {
                "returntype": "OPNsense.Postfix.Sender",
                "command": {
                    "module": "postfix",
                    "controller": "sender",
                    "command": "setsender/<uuid>"
                }
            }
        }
    },
    "Proxy": {
        "PacMatch": {
            "objectname": "Proxy PAC Match",
            "mountpoint": "\\\\OPNsense\\proxy\\pac\\match",
            "remove": {
                "returntype": "OPNsense.Proxy.PacMatch",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "delpacmatch/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Proxy.PacMatch",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "getpacmatch/<uuid>",
                    "property": "pacmatch"
                }
            },
            "search": {
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "searchpacmatch",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Proxy.PacMatch",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "togglepacmatch/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Proxy.PacMatch",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "addpacmatch"
                }
            },
            "set": {
                "returntype": "OPNsense.Proxy.PacMatch",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "setpacmatch/<uuid>"
                }
            }
        },
        "PacProxy": {
            "objectname": "Proxy PAC Proxy",
            "mountpoint": "\\\\OPNsense\\proxy\\pac\\proxy",
            "remove": {
                "returntype": "OPNsense.Proxy.PacProxy",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "delpacproxy/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Proxy.PacProxy",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "getpacproxy/<uuid>",
                    "property": "pacproxy"
                }
            },
            "search": {
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "searchpacproxy",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Proxy.PacProxy",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "togglepacproxy/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Proxy.PacProxy",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "addpacproxy"
                }
            },
            "set": {
                "returntype": "OPNsense.Proxy.PacProxy",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "setpacproxy/<uuid>"
                }
            }
        },
        "PacRule": {
            "objectname": "Proxy PAC Rule",
            "mountpoint": "\\\\OPNsense\\proxy\\pac\\rule",
            "remove": {
                "returntype": "OPNsense.Proxy.PacRule",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "delpacrule/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Proxy.PacRule",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "getpacrule/<uuid>",
                    "property": "pacrule"
                }
            },
            "search": {
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "searchpacrule",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Proxy.PacRule",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "togglepacrule/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Proxy.PacRule",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "addpacrule"
                }
            },
            "set": {
                "returntype": "OPNsense.Proxy.PacRule",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "setpacrule/<uuid>"
                }
            }
        },
        "RemoteBlacklist": {
            "objectname": "Proxy RemoteBlacklist",
            "mountpoint": "\\\\OPNsense\\proxy\\forward\\acl\\remoteACLs\\blacklists\\blacklist",
            "remove": {
                "returntype": "OPNsense.Proxy.RemoteBlacklist",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "delremoteblacklist/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Proxy.RemoteBlacklist",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "getremoteblacklist/<uuid>",
                    "property": "blacklist"
                }
            },
            "search": {
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "searchremoteblacklists",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Proxy.RemoteBlacklist",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "toggleremoteblacklist/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Proxy.RemoteBlacklist",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "addremoteblacklist"
                }
            },
            "set": {
                "returntype": "OPNsense.Proxy.RemoteBlacklist",
                "command": {
                    "module": "proxy",
                    "controller": "settings",
                    "command": "setremoteblacklist/<uuid>"
                }
            }
        }
    },
    "ProxyUserACL": {
        "UserACL": {
            "objectname": "ProxyUserACL UserACL",
            "mountpoint": "\\\\OPNsense\\ProxyUserACL\\general\\ACLs\\ACL",
            "remove": {
                "returntype": "OPNsense.ProxyUserACL.UserACL",
                "command": {
                    "module": "proxyuseracl",
                    "controller": "settings",
                    "command": "delacl/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.ProxyUserACL.UserACL",
                "command": {
                    "module": "proxyuseracl",
                    "controller": "settings",
                    "command": "getacl/<uuid>",
                    "property": "acl"
                }
            },
            "search": {
                "command": {
                    "module": "proxyuseracl",
                    "controller": "settings",
                    "command": "searchacl",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.ProxyUserACL.UserACL",
                "command": {
                    "module": "proxyuseracl",
                    "controller": "settings",
                    "command": "toggleacl/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.ProxyUserACL.UserACL",
                "command": {
                    "module": "proxyuseracl",
                    "controller": "settings",
                    "command": "addacl"
                }
            },
            "set": {
                "returntype": "OPNsense.ProxyUserACL.UserACL",
                "command": {
                    "module": "proxyuseracl",
                    "controller": "settings",
                    "command": "setacl/<uuid>"
                }
            }
        }
    },
    "Quagga": {
        "BGPAspath": {
            "objectname": "BGP AsPath",
            "mountpoint": "\\\\OPNsense\\quagga\\bgp\\aspaths\\aspath",
            "remove": {
                "returntype": "OPNsense.Quagga.BGP.AsPath",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "delaspath/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Quagga.BGP.AsPath",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "getaspath/<uuid>",
                    "property": "aspath"
                }
            },
            "search": {
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "searchaspath",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Quagga.BGP.AsPath",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "toggleaspath/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Quagga.BGP.AsPath",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "addaspath"
                }
            },
            "set": {
                "returntype": "OPNsense.Quagga.BGP.AsPath",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "setaspath/<uuid>"
                }
            }
        },
        "BGPNeighbor": {
            "objectname": "BGP Neighbor",
            "mountpoint": "\\\\OPNsense\\quagga\\bgp\\neighbors\\neighbor",
            "remove": {
                "returntype": "OPNsense.Quagga.BGP.Neighbor",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "delneighbor/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Quagga.BGP.Neighbor",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "getneighbor/<uuid>",
                    "property": "neighbor"
                }
            },
            "search": {
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "searchneighbor",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Quagga.BGP.Neighbor",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "toggleneighbor/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Quagga.BGP.Neighbor",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "addneighbor"
                }
            },
            "set": {
                "returntype": "OPNsense.Quagga.BGP.Neighbor",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "setneighbor/<uuid>"
                }
            }
        },
        "BGPPrefixlist": {
            "objectname": "BGP Prefixlist",
            "mountpoint": "\\\\OPNsense\\quagga\\bgp\\prefixlists\\prefixlist",
            "remove": {
                "returntype": "OPNsense.Quagga.BGP.Prefixlist",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "delprefixlist/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Quagga.BGP.Prefixlist",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "getprefixlist/<uuid>",
                    "property": "prefixlist"
                }
            },
            "search": {
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "searchprefixlist",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Quagga.BGP.Prefixlist",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "toggleprefixlist/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Quagga.BGP.Prefixlist",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "addprefixlist"
                }
            },
            "set": {
                "returntype": "OPNsense.Quagga.BGP.Prefixlist",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "setprefixlist/<uuid>"
                }
            }
        },
        "BGPRoutemap": {
            "objectname": "BGP Routemap",
            "mountpoint": "\\\\OPNsense\\quagga\\bgp\\routemaps\\routemap",
            "remove": {
                "returntype": "OPNsense.Quagga.BGP.Routemap",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "delroutemap/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Quagga.BGP.Routemap",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "getroutemap/<uuid>",
                    "property": "routemap"
                }
            },
            "search": {
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "searchroutemap",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Quagga.BGP.Routemap",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "toggleroutemap/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Quagga.BGP.Routemap",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "addroutemap"
                }
            },
            "set": {
                "returntype": "OPNsense.Quagga.BGP.Routemap",
                "command": {
                    "module": "quagga",
                    "controller": "bgp",
                    "command": "setroutemap/<uuid>"
                }
            }
        },
        "Ospf6Interface": {
            "objectname": "Ospf6 Interface",
            "mountpoint": "\\\\OPNsense\\quagga\\ospf6\\interfaces\\interface",
            "remove": {
                "returntype": "OPNsense.Quagga.Ospf6.Interface",
                "command": {
                    "module": "quagga",
                    "controller": "ospf6settings",
                    "command": "delinterface/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Quagga.Ospf6.Interface",
                "command": {
                    "module": "quagga",
                    "controller": "ospf6settings",
                    "command": "getinterface/<uuid>",
                    "property": "interface"
                }
            },
            "search": {
                "command": {
                    "module": "quagga",
                    "controller": "ospf6settings",
                    "command": "searchinterface",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Quagga.Ospf6.Interface",
                "command": {
                    "module": "quagga",
                    "controller": "ospf6settings",
                    "command": "toggleinterface/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Quagga.Ospf6.Interface",
                "command": {
                    "module": "quagga",
                    "controller": "ospf6settings",
                    "command": "addinterface"
                }
            },
            "set": {
                "returntype": "OPNsense.Quagga.Ospf6.Interface",
                "command": {
                    "module": "quagga",
                    "controller": "ospf6settings",
                    "command": "setinterface/<uuid>"
                }
            }
        },
        "OspfInterface": {
            "objectname": "Ospf Interface",
            "mountpoint": "\\\\OPNsense\\quagga\\ospf\\interfaces\\interface",
            "remove": {
                "returntype": "OPNsense.Quagga.Ospf.Interface",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "delinterface/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Quagga.Ospf.Interface",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "getinterface/<uuid>",
                    "property": "interface"
                }
            },
            "search": {
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "searchinterface",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Quagga.Ospf.Interface",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "toggleinterface/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Quagga.Ospf.Interface",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "addinterface"
                }
            },
            "set": {
                "returntype": "OPNsense.Quagga.Ospf.Interface",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "setinterface/<uuid>"
                }
            }
        },
        "OspfNetwork": {
            "objectname": "Ospf Network",
            "mountpoint": "\\\\OPNsense\\quagga\\ospf\\networks\\network",
            "remove": {
                "returntype": "OPNsense.Quagga.Ospf.Network",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "delnetwork/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Quagga.Ospf.Network",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "getnetwork/<uuid>",
                    "property": "network"
                }
            },
            "search": {
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "searchnetwork",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Quagga.Ospf.Network",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "togglenetwork/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Quagga.Ospf.Network",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "addnetwork"
                }
            },
            "set": {
                "returntype": "OPNsense.Quagga.Ospf.Network",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "setnetwork/<uuid>"
                }
            }
        },
        "OspfPrefixlist": {
            "objectname": "Ospf Prefixlist",
            "mountpoint": "\\\\OPNsense\\quagga\\ospf\\prefixlists\\prefixlist",
            "remove": {
                "returntype": "OPNsense.Quagga.Ospf.Prefixlist",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "delprefixlist/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Quagga.Ospf.Prefixlist",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "getprefixlist/<uuid>",
                    "property": "prefixlist"
                }
            },
            "search": {
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "searchprefixlist",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Quagga.Ospf.Prefixlist",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "toggleprefixlist/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Quagga.Ospf.Prefixlist",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "addprefixlist"
                }
            },
            "set": {
                "returntype": "OPNsense.Quagga.Ospf.Prefixlist",
                "command": {
                    "module": "quagga",
                    "controller": "ospfsettings",
                    "command": "setprefixlist/<uuid>"
                }
            }
        }
    },
    "Relayd": {
        "Host": {
            "objectname": "Relayd Host",
            "mountpoint": "\\\\OPNsense\\relayd\\host",
            "remove": {
                "returntype": "OPNsense.Rlayd.Host",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "del/host/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Rlayd.Host",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "get/host/<uuid>",
                    "property": "host"
                }
            },
            "search": {
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "search/host/",
                    "property": "rows"
                }
            },
            "set": {
                "returntype": "OPNsense.Rlayd.Host",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "set/host/<uuid>",
                    "json": {}
                }
            }
        },
        "TableCheck": {
            "objectname": "Relayd TableCheck",
            "mountpoint": "\\\\OPNsense\\relayd\\tablecheck",
            "remove": {
                "returntype": "OPNsense.Rlayd.TableCheck",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "del/tablecheck/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Rlayd.TableCheck",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "get/tablecheck/<uuid>",
                    "property": [
                        "relayd",
                        "tablecheck"
                    ]
                }
            },
            "search": {
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "search/tablecheck/",
                    "property": "rows"
                }
            },
            "set": {
                "returntype": "OPNsense.Rlayd.TableCheck",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "set/tablecheck/<uuid>",
                    "json": {}
                }
            }
        },
        "Table": {
            "objectname": "Relayd Table",
            "mountpoint": "\\\\OPNsense\\relayd\\table",
            "remove": {
                "returntype": "OPNsense.Rlayd.Table",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "del/table/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Rlayd.Table",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "get/table/<uuid>",
                    "property": "table"
                }
            },
            "search": {
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "search/table/",
                    "property": "rows"
                }
            },
            "set": {
                "returntype": "OPNsense.Rlayd.Table",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "set/table/<uuid>",
                    "json": {}
                }
            }
        },
        "Protocol": {
            "objectname": "Relayd Protocol",
            "mountpoint": "\\\\OPNsense\\relayd\\protocol",
            "remove": {
                "returntype": "OPNsense.Rlayd.Protocol",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "del/protocol/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Rlayd.Protocol",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "get/protocol/<uuid>",
                    "property": "protocol"
                }
            },
            "search": {
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "search/protocol/",
                    "property": "rows"
                }
            },
            "set": {
                "returntype": "OPNsense.Rlayd.Protocol",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "set/protocol/<uuid>",
                    "json": {}
                }
            }
        },
        "VirtualServer": {
            "objectname": "Relayd VirtualServer",
            "mountpoint": "\\\\OPNsense\\relayd\\virtualserver",
            "remove": {
                "returntype": "OPNsense.Rlayd.VirtualServer",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "del/virtualserver/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Rlayd.VirtualServer",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "get/virtualserver/<uuid>",
                    "property": "virtualserver"
                }
            },
            "search": {
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "search/virtualserver/",
                    "property": "rows"
                }
            },
            "set": {
                "returntype": "OPNsense.Rlayd.VirtualServer",
                "command": {
                    "module": "relayd",
                    "controller": "settings",
                    "command": "set/virtualserver/<uuid>",
                    "json": {}
                }
            }
        }
    },
    "Routes": {
        "Route": {
            "objectname": "Routes Route",
            "mountpoint": "\\\\staticroutes\\route",
            "remove": {
                "returntype": "OPNsense.Routes.Route",
                "command": {
                    "module": "routes",
                    "controller": "routes",
                    "command": "delroute/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Routes.Route",
                "command": {
                    "module": "routes",
                    "controller": "routes",
                    "command": "getroute/<uuid>",
                    "property": "route"
                }
            },
            "search": {
                "command": {
                    "module": "routes",
                    "controller": "routes",
                    "command": "searchroute",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Routes.Route",
                "command": {
                    "module": "routes",
                    "controller": "routes",
                    "command": "toggleroute/<uuid>/<disabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Routes.Route",
                "command": {
                    "module": "routes",
                    "controller": "routes",
                    "command": "addroute"
                }
            },
            "set": {
                "returntype": "OPNsense.Routes.Route",
                "command": {
                    "module": "routes",
                    "controller": "routes",
                    "command": "setroute/<uuid>"
                }
            }
        }
    },
    "Siproxd": {
        "Domain": {
            "objectname": "Siproxd Domain",
            "mountpoint": "\\\\OPNsense\\siproxd\\domain\\domains\\domain",
            "remove": {
                "returntype": "OPNsense.Siproxd.Domain",
                "command": {
                    "module": "siproxd",
                    "controller": "domain",
                    "command": "deldomain/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Siproxd.Domain",
                "command": {
                    "module": "siproxd",
                    "controller": "domain",
                    "command": "getdomain/<uuid>",
                    "property": "domain"
                }
            },
            "search": {
                "command": {
                    "module": "siproxd",
                    "controller": "domain",
                    "command": "searchdomain",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Siproxd.Domain",
                "command": {
                    "module": "siproxd",
                    "controller": "domain",
                    "command": "toggledomain/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Siproxd.Domain",
                "command": {
                    "module": "siproxd",
                    "controller": "domain",
                    "command": "adddomain"
                }
            },
            "set": {
                "returntype": "OPNsense.Siproxd.Domain",
                "command": {
                    "module": "siproxd",
                    "controller": "domain",
                    "command": "setdomain/<uuid>"
                }
            }
        },
        "User": {
            "objectname": "Siproxd User",
            "mountpoint": "\\\\OPNsense\\siproxd\\user\\users\\user",
            "remove": {
                "returntype": "OPNsense.Siproxd.User",
                "command": {
                    "module": "siproxd",
                    "controller": "user",
                    "command": "deluser/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Siproxd.User",
                "command": {
                    "module": "siproxd",
                    "controller": "user",
                    "command": "getuser/<uuid>",
                    "property": "user"
                }
            },
            "search": {
                "command": {
                    "module": "siproxd",
                    "controller": "user",
                    "command": "searchuser",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Siproxd.User",
                "command": {
                    "module": "siproxd",
                    "controller": "user",
                    "command": "toggleuser/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Siproxd.User",
                "command": {
                    "module": "siproxd",
                    "controller": "user",
                    "command": "adduser"
                }
            },
            "set": {
                "returntype": "OPNsense.Siproxd.User",
                "command": {
                    "module": "siproxd",
                    "controller": "user",
                    "command": "setuser/<uuid>"
                }
            }
        }
    },
    "Telegraf": {
        "Key": {
            "objectname": "Telegraf Key",
            "mountpoint": "\\\\OPNsense\\telegraf\\key\\keys\\key",
            "remove": {
                "returntype": "OPNsense.Telegraf.Key",
                "command": {
                    "module": "telegraf",
                    "controller": "key",
                    "command": "delkey/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Telegraf.Key",
                "command": {
                    "module": "telegraf",
                    "controller": "key",
                    "command": "getkey/<uuid>",
                    "property": "host"
                }
            },
            "search": {
                "command": {
                    "module": "telegraf",
                    "controller": "key",
                    "command": "searchkey",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Telegraf.Key",
                "command": {
                    "module": "telegraf",
                    "controller": "key",
                    "command": "togglekey/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Telegraf.Key",
                "command": {
                    "module": "telegraf",
                    "controller": "key",
                    "command": "addkey"
                }
            },
            "set": {
                "returntype": "OPNsense.Telegraf.Key",
                "command": {
                    "module": "telegraf",
                    "controller": "key",
                    "command": "setkey/<uuid>"
                }
            }
        }
    },
    "Tinc": {
        "Host": {
            "objectname": "Tinc Host",
            "mountpoint": "\\\\OPNsense\\Tinc\\hosts\\host",
            "remove": {
                "returntype": "OPNsense.Tinc.Host",
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "delhost/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Tinc.Host",
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "gethost/<uuid>",
                    "property": "host"
                }
            },
            "search": {
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "searchhost",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Tinc.Host",
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "togglehost/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Tinc.Host",
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "sethost"
                }
            },
            "set": {
                "returntype": "OPNsense.Tinc.Host",
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "sethost/<uuid>"
                }
            }
        },
        "Network": {
            "objectname": "Tinc Network",
            "mountpoint": "\\\\OPNsense\\Tinc\\networks\\network",
            "remove": {
                "returntype": "OPNsense.Tinc.Network",
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "delnetwork/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Tinc.Network",
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "getnetwork/<uuid>",
                    "property": "network"
                }
            },
            "search": {
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "searchnetwork",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Tinc.Network",
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "togglenetwork/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Tinc.Network",
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "setnetwork"
                }
            },
            "set": {
                "returntype": "OPNsense.Tinc.Network",
                "command": {
                    "module": "tinc",
                    "controller": "settings",
                    "command": "setnetwork/<uuid>"
                }
            }
        }
    },
    "Tor": {
        "Exitacl": {
            "objectname": "Tor Exitacl",
            "mountpoint": "\\\\OPNsense\\tor\\exitpolicy\\policy",
            "remove": {
                "returntype": "OPNsense.Tor.Exitacl",
                "command": {
                    "module": "tor",
                    "controller": "exitacl",
                    "command": "delacl/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Tor.Exitacl",
                "command": {
                    "module": "tor",
                    "controller": "exitacl",
                    "command": "getacl/<uuid>",
                    "property": "exitpolicy"
                }
            },
            "search": {
                "command": {
                    "module": "tor",
                    "controller": "exitacl",
                    "command": "searchacl",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Tor.Exitacl",
                "command": {
                    "module": "tor",
                    "controller": "exitacl",
                    "command": "toggleacl/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Tor.Exitacl",
                "command": {
                    "module": "tor",
                    "controller": "exitacl",
                    "command": "addacl"
                }
            },
            "set": {
                "returntype": "OPNsense.Tor.Exitacl",
                "command": {
                    "module": "tor",
                    "controller": "exitacl",
                    "command": "setacl/<uuid>"
                }
            }
        },
        "HiddenServiceAuth": {
            "objectname": "Tor HiddenServiceAuth",
            "mountpoint": "\\\\OPNsense\\tor\\general\\client_authentications\\client_auth",
            "remove": {
                "returntype": "OPNsense.Tor.HiddenServiceAuth",
                "command": {
                    "module": "tor",
                    "controller": "general",
                    "command": "delhidservauth/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Tor.HiddenServiceAuth",
                "command": {
                    "module": "tor",
                    "controller": "general",
                    "command": "gethidservauth/<uuid>",
                    "property": "client_auth"
                }
            },
            "search": {
                "command": {
                    "module": "tor",
                    "controller": "general",
                    "command": "searchhidservauth",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Tor.HiddenServiceAuth",
                "command": {
                    "module": "tor",
                    "controller": "general",
                    "command": "togglehidservauth/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Tor.HiddenServiceAuth",
                "command": {
                    "module": "tor",
                    "controller": "general",
                    "command": "addhidservauth"
                }
            },
            "set": {
                "returntype": "OPNsense.Tor.HiddenServiceAuth",
                "command": {
                    "module": "tor",
                    "controller": "general",
                    "command": "sethidservauth/<uuid>"
                }
            }
        },
        "HiddenService": {
            "objectname": "Tor HiddenService",
            "mountpoint": "\\\\OPNsense\\tor\\hiddenservice\\service",
            "remove": {
                "returntype": "OPNsense.Tor.HiddenService",
                "command": {
                    "module": "tor",
                    "controller": "hiddenservice",
                    "command": "delservice/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Tor.HiddenService",
                "command": {
                    "module": "tor",
                    "controller": "hiddenservice",
                    "command": "getservice/<uuid>",
                    "property": "hiddenservice"
                }
            },
            "search": {
                "command": {
                    "module": "tor",
                    "controller": "hiddenservice",
                    "command": "searchservice",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Tor.HiddenService",
                "command": {
                    "module": "tor",
                    "controller": "hiddenservice",
                    "command": "toggleservice/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Tor.HiddenService",
                "command": {
                    "module": "tor",
                    "controller": "hiddenservice",
                    "command": "addservice"
                }
            },
            "set": {
                "returntype": "OPNsense.Tor.HiddenService",
                "command": {
                    "module": "tor",
                    "controller": "hiddenservice",
                    "command": "setservice/<uuid>"
                }
            }
        },
        "HiddenServiceACL": {
            "objectname": "Tor HiddenServiceACL",
            "mountpoint": "\\\\OPNsense\\tor\\hiddenserviceacl\\hiddenserviceacl",
            "remove": {
                "returntype": "OPNsense.Tor.HiddenServiceACL",
                "command": {
                    "module": "tor",
                    "controller": "hiddenserviceacl",
                    "command": "delacl/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Tor.HiddenServiceACL",
                "command": {
                    "module": "tor",
                    "controller": "hiddenserviceacl",
                    "command": "getacl/<uuid>",
                    "property": "hiddenserviceacl"
                }
            },
            "search": {
                "command": {
                    "module": "tor",
                    "controller": "hiddenserviceacl",
                    "command": "searchacl",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Tor.HiddenServiceACL",
                "command": {
                    "module": "tor",
                    "controller": "hiddenserviceacl",
                    "command": "toggleacl/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Tor.HiddenServiceACL",
                "command": {
                    "module": "tor",
                    "controller": "hiddenserviceacl",
                    "command": "addacl"
                }
            },
            "set": {
                "returntype": "OPNsense.Tor.HiddenServiceACL",
                "command": {
                    "module": "tor",
                    "controller": "hiddenserviceacl",
                    "command": "setacl/<uuid>"
                }
            }
        },
        "SocksACL": {
            "objectname": "Tor SocksACL",
            "mountpoint": "\\\\OPNsense\\tor\\aclsockspolicy\\policy",
            "remove": {
                "returntype": "OPNsense.Tor.SocksACL",
                "command": {
                    "module": "tor",
                    "controller": "socksacl",
                    "command": "delacl/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Tor.SocksACL",
                "command": {
                    "module": "tor",
                    "controller": "socksacl",
                    "command": "getacl/<uuid>",
                    "property": "policy"
                }
            },
            "search": {
                "command": {
                    "module": "tor",
                    "controller": "socksacl",
                    "command": "searchacl",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Tor.SocksACL",
                "command": {
                    "module": "tor",
                    "controller": "socksacl",
                    "command": "toggleacl/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Tor.SocksACL",
                "command": {
                    "module": "tor",
                    "controller": "socksacl",
                    "command": "addacl"
                }
            },
            "set": {
                "returntype": "OPNsense.Tor.SocksACL",
                "command": {
                    "module": "tor",
                    "controller": "socksacl",
                    "command": "setacl/<uuid>"
                }
            }
        }
    },
    "TrafficShaper": {
        "Pipe": {
            "objectname": "TrafficShaper Pipe",
            "mountpoint": "\\\\OPNsense\\TrafficShaper\\pipes\\pipe",
            "remove": {
                "returntype": "OPNsense.TrafficShaper.Pipe",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "delpipe/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.TrafficShaper.Pipe",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "getpipe/<uuid>",
                    "property": "pipe"
                }
            },
            "search": {
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "searchpipes",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.TrafficShaper.Pipe",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "togglepipe/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.TrafficShaper.Pipe",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "addpipe"
                }
            },
            "set": {
                "returntype": "OPNsense.TrafficShaper.Pipe",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "setpipe/<uuid>"
                }
            }
        },
        "Queue": {
            "objectname": "TrafficShaper Queue",
            "mountpoint": "\\\\OPNsense\\TrafficShaper\\queues\\queue",
            "remove": {
                "returntype": "OPNsense.TrafficShaper.Queue",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "delqueue/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.TrafficShaper.Queue",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "getqueue/<uuid>",
                    "property": "queue"
                }
            },
            "search": {
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "searchqueues",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.TrafficShaper.Queue",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "togglequeue/<uuid>/<enabled>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.TrafficShaper.Queue",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "addqueue"
                }
            },
            "set": {
                "returntype": "OPNsense.TrafficShaper.Queue",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "setqueue/<uuid>"
                }
            }
        },
        "Rule": {
            "objectname": "TrafficShaper Rule",
            "mountpoint": "\\\\OPNsense\\TrafficShaper\\rules\\rule",
            "remove": {
                "returntype": "OPNsense.TrafficShaper.Rule",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "delrule/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.TrafficShaper.Rule",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "getrule/<uuid>",
                    "property": "rule"
                }
            },
            "search": {
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "searchrules",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.TrafficShaper.Rule",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "addrule"
                }
            },
            "set": {
                "returntype": "OPNsense.TrafficShaper.Rule",
                "command": {
                    "module": "trafficshaper",
                    "controller": "settings",
                    "command": "setrule/<uuid>"
                }
            }
        }
    },
    "Wireguard": {
        "Client": {
            "objectname": "Wireguard Client",
            "mountpoint": "\\\\OPNsense\\wireguard\\client\\clients\\client",
            "remove": {
                "returntype": "OPNsense.Wireguard.Client",
                "command": {
                    "module": "wireguard",
                    "controller": "client",
                    "command": "delclient/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Wireguard.Client",
                "command": {
                    "module": "wireguard",
                    "controller": "client",
                    "command": "getclient/<uuid>",
                    "property": "pipe"
                }
            },
            "search": {
                "command": {
                    "module": "wireguard",
                    "controller": "client",
                    "command": "searchclient",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Wireguard.Client",
                "command": {
                    "module": "wireguard",
                    "controller": "client",
                    "command": "toggleclient/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Wireguard.Client",
                "command": {
                    "module": "wireguard",
                    "controller": "client",
                    "command": "addclient"
                }
            },
            "set": {
                "returntype": "OPNsense.Wireguard.Client",
                "command": {
                    "module": "wireguard",
                    "controller": "client",
                    "command": "setclient/<uuid>"
                }
            }
        },
        "Server": {
            "objectname": "Wireguard Server",
            "mountpoint": "\\\\OPNsense\\wireguard\\server\\servers\\server",
            "remove": {
                "returntype": "OPNsense.Wireguard.Server",
                "command": {
                    "module": "wireguard",
                    "controller": "server",
                    "command": "delserver/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Wireguard.Server",
                "command": {
                    "module": "wireguard",
                    "controller": "server",
                    "command": "getserver/<uuid>",
                    "property": "queue"
                }
            },
            "search": {
                "command": {
                    "module": "wireguard",
                    "controller": "server",
                    "command": "searchserver",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Wireguard.Server",
                "command": {
                    "module": "wireguard",
                    "controller": "server",
                    "command": "toggleserver/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Wireguard.Server",
                "command": {
                    "module": "wireguard",
                    "controller": "server",
                    "command": "addserver"
                }
            },
            "set": {
                "returntype": "OPNsense.Wireguard.Server",
                "command": {
                    "module": "wireguard",
                    "controller": "server",
                    "command": "setserver/<uuid>"
                }
            }
        }
    },
    "Wol": {
        "Host": {
            "objectname": "WOL Host",
            "mountpoint": "\\\\wol\\wolentry",
            "remove": {
                "returntype": "OPNsense.Wol.Host",
                "command": {
                    "module": "wol",
                    "controller": "wol",
                    "command": "delhost/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Wol.Host",
                "command": {
                    "module": "wol",
                    "controller": "wol",
                    "command": "gethost/<uuid>",
                    "property": "host"
                }
            },
            "search": {
                "command": {
                    "module": "wol",
                    "controller": "wol",
                    "command": "searchhost",
                    "property": "rows"
                }
            },
            "add": {
                "returntype": "OPNsense.Wol.Host",
                "command": {
                    "module": "wol",
                    "controller": "wol",
                    "command": "addhost"
                }
            },
            "set": {
                "returntype": "OPNsense.Wol.Host",
                "command": {
                    "module": "wol",
                    "controller": "wol",
                    "command": "sethost/<uuid>"
                }
            }
        }
    },
    "Zerotier": {
        "Network": {
            "objectname": "Zerotier Network",
            "mountpoint": "\\\\OPNsense\\zerotier\\networks\\network",
            "remove": {
                "returntype": "OPNsense.Zerotier.Network",
                "command": {
                    "module": "zerotier",
                    "controller": "network",
                    "command": "del/<uuid>",
                    "Form": "remove"
                }
            },
            "get": {
                "returntype": "OPNsense.Zerotier.Network",
                "command": {
                    "module": "zerotier",
                    "controller": "network",
                    "command": "get/<uuid>",
                    "property": "network"
                }
            },
            "search": {
                "command": {
                    "module": "zerotier",
                    "controller": "network",
                    "command": "search",
                    "property": "rows"
                }
            },
            "toggle": {
                "returntype": "OPNsense.Zerotier.Network",
                "command": {
                    "module": "zerotier",
                    "controller": "network",
                    "command": "toggle/<uuid>",
                    "Form": "toggle"
                }
            },
            "add": {
                "returntype": "OPNsense.Zerotier.Network",
                "command": {
                    "module": "zerotier",
                    "controller": "network",
                    "command": "add"
                }
            },
            "set": {
                "returntype": "OPNsense.Zerotier.Network",
                "command": {
                    "module": "zerotier",
                    "controller": "network",
                    "command": "set/<uuid>"
                }
            }
        }
    }
}