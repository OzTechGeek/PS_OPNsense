{
    "openapi": "3.0.1",
    "info": {
        "version": "0.0.1",
        "title": "OPNsense REST API",
        "description": "This file describes the endpoints of the OPNsense REST API.",
        "termsOfService": "https://opnsense.org/about/legal-notices/",
        "contact": {
            "name": "OPNsense Community",
            "url": "https://opnsense.org"
        },
        "license": {
            "name": "Simplified BSD License",
            "url": "https://opensource.org/licenses/bsd-license.php"
        }
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/core/firmware/{action}/{package}": {
            "post": {
                "operationId": "doFirmwarePackage",
                "summary": "Performs an action on an OPNsense package",
                "tags": [
                    "Firmware"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/packageaction"
                    },
                    {
                        "$ref": "#/components/parameters/packagename"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/accounts/add": {
            "description": "Account",
            "summary": "Create AcmeClient Account items",
            "post": {
                "operationId": "addAcmeClientAccount",
                "summary": "Add a new Account",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "account": {
                                        "$ref": "#/components/schemas/OPNsense.AcmeClient.accounts.account"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/accounts/search": {
            "post": {
                "operationId": "searchAcmeClientAccount",
                "summary": "Search a Account",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/accounts/get/{uuid}": {
            "get": {
                "operationId": "getAcmeClientAccount",
                "summary": "Returns a Account",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "account": {
                                            "$ref": "#/components/schemas/OPNsense.AcmeClient.accounts.account"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/accounts/set/{uuid}": {
            "post": {
                "operationId": "setAcmeClientAccount",
                "summary": "Updates a Account",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "account": {
                                        "$ref": "#/components/schemas/OPNsense.AcmeClient.accounts.account"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/accounts/del/{uuid}": {
            "post": {
                "operationId": "deleteAcmeClientAccount",
                "summary": "Removes a Account",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/accounts/toggle/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleAcmeClientAccount",
                "summary": "Toggle a Account",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/acmeclient/actions/add": {
            "description": "Action",
            "summary": "Create AcmeClient Action items",
            "post": {
                "operationId": "addAcmeClientAction",
                "summary": "Add a new Action",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "action": {
                                        "$ref": "#/components/schemas/OPNsense.AcmeClient.actions.action"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/actions/search": {
            "post": {
                "operationId": "searchAcmeClientAction",
                "summary": "Search a Action",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/actions/get/{uuid}": {
            "get": {
                "operationId": "getAcmeClientAction",
                "summary": "Returns a Action",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "action": {
                                            "$ref": "#/components/schemas/OPNsense.AcmeClient.actions.action"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/actions/set/{uuid}": {
            "post": {
                "operationId": "setAcmeClientAction",
                "summary": "Updates a Action",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "action": {
                                        "$ref": "#/components/schemas/OPNsense.AcmeClient.actions.action"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/actions/del/{uuid}": {
            "post": {
                "operationId": "deleteAcmeClientAction",
                "summary": "Removes a Action",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/actions/toggle/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleAcmeClientAction",
                "summary": "Toggle a Action",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/acmeclient/certificates/add": {
            "description": "Certificate",
            "summary": "Create AcmeClient Certificate items",
            "post": {
                "operationId": "addAcmeClientCertificate",
                "summary": "Add a new Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "certificate": {
                                        "$ref": "#/components/schemas/OPNsense.AcmeClient.certificates.certificate"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/certificates/search": {
            "post": {
                "operationId": "searchAcmeClientCertificate",
                "summary": "Search a Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/certificates/get/{uuid}": {
            "get": {
                "operationId": "getAcmeClientCertificate",
                "summary": "Returns a Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "certificate": {
                                            "$ref": "#/components/schemas/OPNsense.AcmeClient.certificates.certificate"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/certificates/set/{uuid}": {
            "post": {
                "operationId": "setAcmeClientCertificate",
                "summary": "Updates a Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "certificate": {
                                        "$ref": "#/components/schemas/OPNsense.AcmeClient.certificates.certificate"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/certificates/del/{uuid}": {
            "post": {
                "operationId": "deleteAcmeClientCertificate",
                "summary": "Removes a Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/certificates/toggle/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleAcmeClientCertificate",
                "summary": "Toggle a Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/acmeclient/validations/add": {
            "description": "Validation",
            "summary": "Create AcmeClient Validation items",
            "post": {
                "operationId": "addAcmeClientValidation",
                "summary": "Add a new Validation",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "validation": {
                                        "$ref": "#/components/schemas/OPNsense.AcmeClient.validations.validation"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/validations/search": {
            "post": {
                "operationId": "searchAcmeClientValidation",
                "summary": "Search a Validation",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/validations/get/{uuid}": {
            "get": {
                "operationId": "getAcmeClientValidation",
                "summary": "Returns a Validation",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "validation": {
                                            "$ref": "#/components/schemas/OPNsense.AcmeClient.validations.validation"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/validations/set/{uuid}": {
            "post": {
                "operationId": "setAcmeClientValidation",
                "summary": "Updates a Validation",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "validation": {
                                        "$ref": "#/components/schemas/OPNsense.AcmeClient.validations.validation"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/validations/del/{uuid}": {
            "post": {
                "operationId": "deleteAcmeClientValidation",
                "summary": "Removes a Validation",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/validations/toggle/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleAcmeClientValidation",
                "summary": "Toggle a Validation",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/bind/acl/addacl": {
            "description": "Acl",
            "summary": "Create Bind Acl items",
            "post": {
                "operationId": "addBindAcl",
                "summary": "Add a new Acl",
                "tags": [
                    "Bind"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "acl": {
                                        "$ref": "#/components/schemas/OPNsense.bind.acl.acls.acl"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bind/acl/searchacl": {
            "post": {
                "operationId": "searchBindAcl",
                "summary": "Search a Acl",
                "tags": [
                    "Bind"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/bind/acl/getacl/{uuid}": {
            "get": {
                "operationId": "getBindAcl",
                "summary": "Returns a Acl",
                "tags": [
                    "Bind"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "acl": {
                                            "$ref": "#/components/schemas/OPNsense.bind.acl.acls.acl"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bind/acl/setacl/{uuid}": {
            "post": {
                "operationId": "setBindAcl",
                "summary": "Updates a Acl",
                "tags": [
                    "Bind"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "acl": {
                                        "$ref": "#/components/schemas/OPNsense.bind.acl.acls.acl"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bind/acl/delacl/{uuid}": {
            "post": {
                "operationId": "deleteBindAcl",
                "summary": "Removes a Acl",
                "tags": [
                    "Bind"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bind/acl/toggleacl/{uuid}": {
            "post": {
                "operationId": "toggleBindAcl",
                "summary": "Toggle a Acl",
                "tags": [
                    "Bind"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/captiveportal/service/addtemplate": {
            "description": "Template",
            "summary": "Create CaptivePortal Template items",
            "post": {
                "operationId": "addCaptivePortalTemplate",
                "summary": "Add a new Template",
                "tags": [
                    "CaptivePortal"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "template": {
                                        "$ref": "#/components/schemas/OPNsense.captiveportal.templates.template"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/captiveportal/service/searchtemplates": {
            "post": {
                "operationId": "searchCaptivePortalTemplate",
                "summary": "Search a Template",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/captiveportal/service/searchtemplates/{uuid}": {
            "get": {
                "operationId": "getCaptivePortalTemplate",
                "summary": "Returns a Template",
                "tags": [
                    "CaptivePortal"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "rows": {
                                            "$ref": "#/components/schemas/OPNsense.captiveportal.templates.template"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/captiveportal/service/settemplate/{uuid}": {
            "post": {
                "operationId": "setCaptivePortalTemplate",
                "summary": "Updates a Template",
                "tags": [
                    "CaptivePortal"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "template": {
                                        "$ref": "#/components/schemas/OPNsense.captiveportal.templates.template"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/captiveportal/service/deltemplate/{uuid}": {
            "post": {
                "operationId": "deleteCaptivePortalTemplate",
                "summary": "Removes a Template",
                "tags": [
                    "CaptivePortal"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/captiveportal/settings/addzone": {
            "description": "Zone",
            "summary": "Create CaptivePortal Zone items",
            "post": {
                "operationId": "addCaptivePortalZone",
                "summary": "Add a new Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "zone": {
                                        "$ref": "#/components/schemas/OPNsense.captiveportal.zones.zone"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/captiveportal/settings/searchzones": {
            "post": {
                "operationId": "searchCaptivePortalZone",
                "summary": "Search a Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/captiveportal/settings/getzone/{uuid}": {
            "get": {
                "operationId": "getCaptivePortalZone",
                "summary": "Returns a Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "zone": {
                                            "$ref": "#/components/schemas/OPNsense.captiveportal.zones.zone"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/captiveportal/settings/setzone/{uuid}": {
            "post": {
                "operationId": "setCaptivePortalZone",
                "summary": "Updates a Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "zone": {
                                        "$ref": "#/components/schemas/OPNsense.captiveportal.zones.zone"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/captiveportal/settings/delzone/{uuid}": {
            "post": {
                "operationId": "deleteCaptivePortalZone",
                "summary": "Removes a Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/captiveportal/settings/togglezone/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleCaptivePortalZone",
                "summary": "Toggle a Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/captiveportal/vouchers/listProviders": {
            "get": {
                "operationId": "listCaptivePortalProvider",
                "summary": "Return voucher providers",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/captiveportal/vouchers/listVoucherGroups/{provider}": {
            "get": {
                "operationId": "listCaptivePortalVoucherGroup",
                "summary": "Return voucher groups for a provider",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    }
                ]
            }
        },
        "/captiveportal/vouchers/dropVoucherGroup/{provider}/{group}": {
            "get": {
                "operationId": "deleteCaptivePortalVoucherGroup",
                "summary": "Delete voucher group and its vouchers.",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    },
                    {
                        "$ref": "#/components/parameters/vouchergroup"
                    }
                ]
            }
        },
        "/captiveportal/vouchers/dropExpiredVouchers/{provider}/{group}": {
            "get": {
                "operationId": "deleteCaptivePortalExpiredVoucher",
                "summary": "Delete expired vouchers from a group.",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    },
                    {
                        "$ref": "#/components/parameters/vouchergroup"
                    }
                ]
            }
        },
        "/captiveportal/vouchers/listVouchers/{provider}/{group}": {
            "get": {
                "operationId": "listCaptivePortalVoucher",
                "summary": "Return voucher groups for a provider",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    },
                    {
                        "$ref": "#/components/parameters/vouchergroup"
                    }
                ]
            }
        },
        "/captiveportal/vouchers/expireVoucher/{provider}": {
            "post": {
                "operationId": "expireCaptivePortalVoucher",
                "summary": "Expires a voucher and prevents it from being used.",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    }
                ]
            }
        },
        "/captiveportal/vouchers/generateVouchers/{provider}": {
            "post": {
                "operationId": "addCaptivePortalVoucher",
                "summary": "Creates vouchers within a group of a provider.",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    }
                ]
            }
        },
        "/cron/settings/addjob": {
            "description": "Job",
            "summary": "Create Cron Job items",
            "post": {
                "operationId": "addCronJob",
                "summary": "Add a new Job",
                "tags": [
                    "Cron"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "job": {
                                        "$ref": "#/components/schemas/OPNsense.cron.jobs.job"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cron/settings/searchjobs": {
            "post": {
                "operationId": "searchCronJob",
                "summary": "Search a Job",
                "tags": [
                    "Cron"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/cron/settings/getjob/{uuid}": {
            "get": {
                "operationId": "getCronJob",
                "summary": "Returns a Job",
                "tags": [
                    "Cron"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "job": {
                                            "$ref": "#/components/schemas/OPNsense.cron.jobs.job"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cron/settings/setjob/{uuid}": {
            "post": {
                "operationId": "setCronJob",
                "summary": "Updates a Job",
                "tags": [
                    "Cron"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "job": {
                                        "$ref": "#/components/schemas/OPNsense.cron.jobs.job"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cron/settings/deljob/{uuid}": {
            "post": {
                "operationId": "deleteCronJob",
                "summary": "Removes a Job",
                "tags": [
                    "Cron"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cron/settings/togglejob/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleCronJob",
                "summary": "Toggle a Job",
                "tags": [
                    "Cron"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/firewall/alias/additem": {
            "description": "Alias",
            "summary": "Create Firewall Alias items",
            "post": {
                "operationId": "addFirewallAlias",
                "summary": "Add a new Alias",
                "tags": [
                    "Firewall"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "alias": {
                                        "$ref": "#/components/schemas/OPNsense.Firewall.Alias.aliases.alias"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/firewall/alias/searchitem": {
            "post": {
                "operationId": "searchFirewallAlias",
                "summary": "Search a Alias",
                "tags": [
                    "Firewall"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/firewall/alias/getitem/{uuid}": {
            "get": {
                "operationId": "getFirewallAlias",
                "summary": "Returns a Alias",
                "tags": [
                    "Firewall"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "alias": {
                                            "$ref": "#/components/schemas/OPNsense.Firewall.Alias.aliases.alias"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/firewall/alias/setitem/{uuid}": {
            "post": {
                "operationId": "setFirewallAlias",
                "summary": "Updates a Alias",
                "tags": [
                    "Firewall"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "alias": {
                                        "$ref": "#/components/schemas/OPNsense.Firewall.Alias.aliases.alias"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/firewall/alias/delitem/{uuid}": {
            "post": {
                "operationId": "deleteFirewallAlias",
                "summary": "Removes a Alias",
                "tags": [
                    "Firewall"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/firewall/alias/toggleitem/{uuid}/{disabled}": {
            "post": {
                "operationId": "toggleFirewallAlias",
                "summary": "Toggle a Alias",
                "tags": [
                    "Firewall"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/freeradius/client/addclient": {
            "description": "Client",
            "summary": "Create FreeRadius Client items",
            "post": {
                "operationId": "addFreeRadiusClient",
                "summary": "Add a new Client",
                "tags": [
                    "FreeRadius"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client": {
                                        "$ref": "#/components/schemas/OPNsense.freeradius.client.clients.client"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/freeradius/client/searchclient": {
            "post": {
                "operationId": "searchFreeRadiusClient",
                "summary": "Search a Client",
                "tags": [
                    "FreeRadius"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/freeradius/client/getclient/{uuid}": {
            "get": {
                "operationId": "getFreeRadiusClient",
                "summary": "Returns a Client",
                "tags": [
                    "FreeRadius"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "client": {
                                            "$ref": "#/components/schemas/OPNsense.freeradius.client.clients.client"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/freeradius/client/setclient/{uuid}": {
            "post": {
                "operationId": "setFreeRadiusClient",
                "summary": "Updates a Client",
                "tags": [
                    "FreeRadius"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client": {
                                        "$ref": "#/components/schemas/OPNsense.freeradius.client.clients.client"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/freeradius/client/delclient/{uuid}": {
            "post": {
                "operationId": "deleteFreeRadiusClient",
                "summary": "Removes a Client",
                "tags": [
                    "FreeRadius"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/freeradius/client/toggleclient/{uuid}": {
            "post": {
                "operationId": "toggleFreeRadiusClient",
                "summary": "Toggle a Client",
                "tags": [
                    "FreeRadius"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/freeradius/user/adduser": {
            "description": "User",
            "summary": "Create FreeRadius User items",
            "post": {
                "operationId": "addFreeRadiusUser",
                "summary": "Add a new User",
                "tags": [
                    "FreeRadius"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user": {
                                        "$ref": "#/components/schemas/OPNsense.freeradius.user.users.user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/freeradius/user/searchuser": {
            "post": {
                "operationId": "searchFreeRadiusUser",
                "summary": "Search a User",
                "tags": [
                    "FreeRadius"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/freeradius/user/getuser/{uuid}": {
            "get": {
                "operationId": "getFreeRadiusUser",
                "summary": "Returns a User",
                "tags": [
                    "FreeRadius"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/OPNsense.freeradius.user.users.user"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/freeradius/user/setuser/{uuid}": {
            "post": {
                "operationId": "setFreeRadiusUser",
                "summary": "Updates a User",
                "tags": [
                    "FreeRadius"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user": {
                                        "$ref": "#/components/schemas/OPNsense.freeradius.user.users.user"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/freeradius/user/deluser/{uuid}": {
            "post": {
                "operationId": "deleteFreeRadiusUser",
                "summary": "Removes a User",
                "tags": [
                    "FreeRadius"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/freeradius/user/toggleuser/{uuid}": {
            "post": {
                "operationId": "toggleFreeRadiusUser",
                "summary": "Toggle a User",
                "tags": [
                    "FreeRadius"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/ftpproxy/settings/addproxy": {
            "description": "Proxy",
            "summary": "Create FTPProxy Proxy items",
            "post": {
                "operationId": "addFTPProxyProxy",
                "summary": "Add a new Proxy",
                "tags": [
                    "FTPProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "proxy": {
                                        "$ref": "#/components/schemas/OPNsense.ftpproxies.ftpproxy"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ftpproxy/settings/searchproxy": {
            "post": {
                "operationId": "searchFTPProxyProxy",
                "summary": "Search a Proxy",
                "tags": [
                    "FTPProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ftpproxy/settings/getproxy/{uuid}": {
            "get": {
                "operationId": "getFTPProxyProxy",
                "summary": "Returns a Proxy",
                "tags": [
                    "FTPProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ftpproxy": {
                                            "$ref": "#/components/schemas/OPNsense.ftpproxies.ftpproxy"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ftpproxy/settings/setproxy/{uuid}": {
            "post": {
                "operationId": "setFTPProxyProxy",
                "summary": "Updates a Proxy",
                "tags": [
                    "FTPProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "proxy": {
                                        "$ref": "#/components/schemas/OPNsense.ftpproxies.ftpproxy"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ftpproxy/settings/delproxy/{uuid}": {
            "post": {
                "operationId": "deleteFTPProxyProxy",
                "summary": "Removes a Proxy",
                "tags": [
                    "FTPProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ftpproxy/settings/toggleproxy/{uuid}": {
            "post": {
                "operationId": "toggleFTPProxyProxy",
                "summary": "Toggle a Proxy",
                "tags": [
                    "FTPProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/haproxy/settings/addacl": {
            "description": "Acl",
            "summary": "Create HAProxy Acl items",
            "post": {
                "operationId": "addHAProxyAcl",
                "summary": "Add a new Acl",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "acl": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.acls.acl"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/searchacls": {
            "post": {
                "operationId": "searchHAProxyAcl",
                "summary": "Search a Acl",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getacl/{uuid}": {
            "get": {
                "operationId": "getHAProxyAcl",
                "summary": "Returns a Acl",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "acl": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.acls.acl"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setacl/{uuid}": {
            "post": {
                "operationId": "setHAProxyAcl",
                "summary": "Updates a Acl",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "acl": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.acls.acl"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/delacl/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyAcl",
                "summary": "Removes a Acl",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/addaction": {
            "description": "Action",
            "summary": "Create HAProxy Action items",
            "post": {
                "operationId": "addHAProxyAction",
                "summary": "Add a new Action",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "action": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.actions.action"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/searchactions": {
            "post": {
                "operationId": "searchHAProxyAction",
                "summary": "Search a Action",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getaction/{uuid}": {
            "get": {
                "operationId": "getHAProxyAction",
                "summary": "Returns a Action",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "action": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.actions.action"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setaction/{uuid}": {
            "post": {
                "operationId": "setHAProxyAction",
                "summary": "Updates a Action",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "action": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.actions.action"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/delaction/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyAction",
                "summary": "Removes a Action",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/addbackend": {
            "description": "Backend",
            "summary": "Create HAProxy Backend items",
            "post": {
                "operationId": "addHAProxyBackend",
                "summary": "Add a new Backend",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "backend": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.backends.backend"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/searchbackends": {
            "post": {
                "operationId": "searchHAProxyBackend",
                "summary": "Search a Backend",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getbackend/{uuid}": {
            "get": {
                "operationId": "getHAProxyBackend",
                "summary": "Returns a Backend",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "backend": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.backends.backend"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setbackend/{uuid}": {
            "post": {
                "operationId": "setHAProxyBackend",
                "summary": "Updates a Backend",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "backend": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.backends.backend"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/delbackend/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyBackend",
                "summary": "Removes a Backend",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/togglebackend/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleHAProxyBackend",
                "summary": "Toggle a Backend",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/haproxy/settings/adderrorfile": {
            "description": "ErrorFile",
            "summary": "Create HAProxy ErrorFile items",
            "post": {
                "operationId": "addHAProxyErrorFile",
                "summary": "Add a new ErrorFile",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "errorfile": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.errorfiles.errorfile"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/searcherrorfiles": {
            "post": {
                "operationId": "searchHAProxyErrorFile",
                "summary": "Search a ErrorFile",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/geterrorfile/{uuid}": {
            "get": {
                "operationId": "getHAProxyErrorFile",
                "summary": "Returns a ErrorFile",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorfile": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.errorfiles.errorfile"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/seterrorfile/{uuid}": {
            "post": {
                "operationId": "setHAProxyErrorFile",
                "summary": "Updates a ErrorFile",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "errorfile": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.errorfiles.errorfile"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/delerrorfile/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyErrorFile",
                "summary": "Removes a ErrorFile",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/addfrontend": {
            "description": "Frontend",
            "summary": "Create HAProxy Frontend items",
            "post": {
                "operationId": "addHAProxyFrontend",
                "summary": "Add a new Frontend",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "frontend": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.frontends.frontend"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/searchfrontends": {
            "post": {
                "operationId": "searchHAProxyFrontend",
                "summary": "Search a Frontend",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getfrontend/{uuid}": {
            "get": {
                "operationId": "getHAProxyFrontend",
                "summary": "Returns a Frontend",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "frontend": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.frontends.frontend"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setfrontend/{uuid}": {
            "post": {
                "operationId": "setHAProxyFrontend",
                "summary": "Updates a Frontend",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "frontend": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.frontends.frontend"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/delfrontend/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyFrontend",
                "summary": "Removes a Frontend",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/togglefrontend/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleHAProxyFrontend",
                "summary": "Toggle a Frontend",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/haproxy/settings/addhealthcheck": {
            "description": "Healthcheck",
            "summary": "Create HAProxy Healthcheck items",
            "post": {
                "operationId": "addHAProxyHealthcheck",
                "summary": "Add a new Healthcheck",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "healthcheck": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.healthchecks.healthcheck"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/searchhealthchecks": {
            "post": {
                "operationId": "searchHAProxyHealthcheck",
                "summary": "Search a Healthcheck",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/gethealthcheck/{uuid}": {
            "get": {
                "operationId": "getHAProxyHealthcheck",
                "summary": "Returns a Healthcheck",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "healthcheck": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.healthchecks.healthcheck"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/sethealthcheck/{uuid}": {
            "post": {
                "operationId": "setHAProxyHealthcheck",
                "summary": "Updates a Healthcheck",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "healthcheck": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.healthchecks.healthcheck"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/delhealthcheck/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyHealthcheck",
                "summary": "Removes a Healthcheck",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/addlua": {
            "description": "LuaScript",
            "summary": "Create HAProxy LuaScript items",
            "post": {
                "operationId": "addHAProxyLuaScript",
                "summary": "Add a new LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "luascript": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.mapfiles.mapfile"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/searchluas": {
            "post": {
                "operationId": "searchHAProxyLuaScript",
                "summary": "Search a LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getlua/{uuid}": {
            "get": {
                "operationId": "getHAProxyLuaScript",
                "summary": "Returns a LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lua": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.mapfiles.mapfile"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setlua/{uuid}": {
            "post": {
                "operationId": "setHAProxyLuaScript",
                "summary": "Updates a LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "luascript": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.mapfiles.mapfile"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/dellua/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyLuaScript",
                "summary": "Removes a LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/togglelua/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleHAProxyLuaScript",
                "summary": "Toggle a LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/haproxy/settings/addmapfile": {
            "description": "MapFile",
            "summary": "Create HAProxy MapFile items",
            "post": {
                "operationId": "addHAProxyMapFile",
                "summary": "Add a new MapFile",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "mapfile": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.luas.lua"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/searchmapfiles": {
            "post": {
                "operationId": "searchHAProxyMapFile",
                "summary": "Search a MapFile",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getmapfile/{uuid}": {
            "get": {
                "operationId": "getHAProxyMapFile",
                "summary": "Returns a MapFile",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "mapfile": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.luas.lua"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setmapfile/{uuid}": {
            "post": {
                "operationId": "setHAProxyMapFile",
                "summary": "Updates a MapFile",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "mapfile": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.luas.lua"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/delmapfile/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyMapFile",
                "summary": "Removes a MapFile",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/addserver": {
            "description": "Server",
            "summary": "Create HAProxy Server items",
            "post": {
                "operationId": "addHAProxyServer",
                "summary": "Add a new Server",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "server": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.servers.server"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/searchservers": {
            "post": {
                "operationId": "searchHAProxyServer",
                "summary": "Search a Server",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getserver/{uuid}": {
            "get": {
                "operationId": "getHAProxyServer",
                "summary": "Returns a Server",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "server": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.servers.server"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setserver/{uuid}": {
            "post": {
                "operationId": "setHAProxyServer",
                "summary": "Updates a Server",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "server": {
                                        "$ref": "#/components/schemas/OPNsense.HAProxy.servers.server"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/delserver/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyServer",
                "summary": "Removes a Server",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ids/settings/setrule/{uuid}": {
            "post": {
                "operationId": "setIDSRule",
                "summary": "Updates a Rule",
                "tags": [
                    "IDS"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rule": {
                                        "$ref": "#/components/schemas/OPNsense.IDS.rules.rule"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ids/settings/togglerule/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleIDSRule",
                "summary": "Toggle a Rule",
                "tags": [
                    "IDS"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/ids/settings/adduserrule": {
            "description": "UserRule",
            "summary": "Create IDS UserRule items",
            "post": {
                "operationId": "addIDSUserRule",
                "summary": "Add a new UserRule",
                "tags": [
                    "IDS"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "userrule": {
                                        "$ref": "#/components/schemas/OPNsense.IDS.userDefinedRules.rule"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ids/settings/searchuserrule": {
            "post": {
                "operationId": "searchIDSUserRule",
                "summary": "Search a UserRule",
                "tags": [
                    "IDS"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ids/settings/getuserrule/{uuid}": {
            "get": {
                "operationId": "getIDSUserRule",
                "summary": "Returns a UserRule",
                "tags": [
                    "IDS"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "rule": {
                                            "$ref": "#/components/schemas/OPNsense.IDS.userDefinedRules.rule"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ids/settings/setuserrule/{uuid}": {
            "post": {
                "operationId": "setIDSUserRule",
                "summary": "Updates a UserRule",
                "tags": [
                    "IDS"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "userrule": {
                                        "$ref": "#/components/schemas/OPNsense.IDS.userDefinedRules.rule"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ids/settings/deluserrule/{uuid}": {
            "post": {
                "operationId": "deleteIDSUserRule",
                "summary": "Removes a UserRule",
                "tags": [
                    "IDS"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ids/settings/toggleuserrule/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleIDSUserRule",
                "summary": "Toggle a UserRule",
                "tags": [
                    "IDS"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/monit/settings/add/alert": {
            "description": "Alert",
            "summary": "Create Monit Alert items",
            "post": {
                "operationId": "addMonitAlert",
                "summary": "Add a new Alert",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "alert": {
                                        "$ref": "#/components/schemas/OPNsense.monit.alert"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/search/alert": {
            "post": {
                "operationId": "searchMonitAlert",
                "summary": "Search a Alert",
                "tags": [
                    "Monit"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/get/alert/{uuid}": {
            "get": {
                "operationId": "getMonitAlert",
                "summary": "Returns a Alert",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "monit": {
                                            "alert": {
                                                "$ref": "#/components/schemas/OPNsense.monit.alert"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/set/alert/{uuid}": {
            "post": {
                "operationId": "setMonitAlert",
                "summary": "Updates a Alert",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "alert": {
                                        "$ref": "#/components/schemas/OPNsense.monit.alert"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/del/alert/{uuid}": {
            "post": {
                "operationId": "deleteMonitAlert",
                "summary": "Removes a Alert",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/toggle/alert/{uuid}": {
            "post": {
                "operationId": "toggleMonitAlert",
                "summary": "Toggle a Alert",
                "tags": [
                    "Monit"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/monit/settings/add/service": {
            "description": "Service",
            "summary": "Create Monit Service items",
            "post": {
                "operationId": "addMonitService",
                "summary": "Add a new Service",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service": {
                                        "$ref": "#/components/schemas/OPNsense.monit.service"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/search/service": {
            "post": {
                "operationId": "searchMonitService",
                "summary": "Search a Service",
                "tags": [
                    "Monit"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/get/service/{uuid}": {
            "get": {
                "operationId": "getMonitService",
                "summary": "Returns a Service",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "monit": {
                                            "service": {
                                                "$ref": "#/components/schemas/OPNsense.monit.service"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/set/service/{uuid}": {
            "post": {
                "operationId": "setMonitService",
                "summary": "Updates a Service",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service": {
                                        "$ref": "#/components/schemas/OPNsense.monit.service"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/del/service/{uuid}": {
            "post": {
                "operationId": "deleteMonitService",
                "summary": "Removes a Service",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/toggle/service/{uuid}": {
            "post": {
                "operationId": "toggleMonitService",
                "summary": "Toggle a Service",
                "tags": [
                    "Monit"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/monit/settings/add/test": {
            "description": "Test",
            "summary": "Create Monit Test items",
            "post": {
                "operationId": "addMonitTest",
                "summary": "Add a new Test",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "test": {
                                        "$ref": "#/components/schemas/OPNsense.monit.test"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/search/test": {
            "post": {
                "operationId": "searchMonitTest",
                "summary": "Search a Test",
                "tags": [
                    "Monit"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/get/test/{uuid}": {
            "get": {
                "operationId": "getMonitTest",
                "summary": "Returns a Test",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "monit": {
                                            "test": {
                                                "$ref": "#/components/schemas/OPNsense.monit.test"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/set/test/{uuid}": {
            "post": {
                "operationId": "setMonitTest",
                "summary": "Updates a Test",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "test": {
                                        "$ref": "#/components/schemas/OPNsense.monit.test"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/del/test/{uuid}": {
            "post": {
                "operationId": "deleteMonitTest",
                "summary": "Removes a Test",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/netsnmp/user/adduser": {
            "description": "User",
            "summary": "Create NetSNMP User items",
            "post": {
                "operationId": "addNetSNMPUser",
                "summary": "Add a new User",
                "tags": [
                    "NetSNMP"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user": {
                                        "$ref": "#/components/schemas/OPNsense.netsnmp.user.users.user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/netsnmp/user/searchuser": {
            "post": {
                "operationId": "searchNetSNMPUser",
                "summary": "Search a User",
                "tags": [
                    "NetSNMP"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/netsnmp/user/getuser/{uuid}": {
            "get": {
                "operationId": "getNetSNMPUser",
                "summary": "Returns a User",
                "tags": [
                    "NetSNMP"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/OPNsense.netsnmp.user.users.user"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/netsnmp/user/setuser/{uuid}": {
            "post": {
                "operationId": "setNetSNMPUser",
                "summary": "Updates a User",
                "tags": [
                    "NetSNMP"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user": {
                                        "$ref": "#/components/schemas/OPNsense.netsnmp.user.users.user"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/netsnmp/user/deluser/{uuid}": {
            "post": {
                "operationId": "deleteNetSNMPUser",
                "summary": "Removes a User",
                "tags": [
                    "NetSNMP"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/netsnmp/user/toggleuser/{uuid}": {
            "post": {
                "operationId": "toggleNetSNMPUser",
                "summary": "Toggle a User",
                "tags": [
                    "NetSNMP"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/nginx/settings/addcredential": {
            "description": "Credential",
            "summary": "Create Nginx Credential items",
            "post": {
                "operationId": "addNginxCredential",
                "summary": "Add a new Credential",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "credential": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.credential"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchcredential/": {
            "post": {
                "operationId": "searchNginxCredential",
                "summary": "Search a Credential",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/getcredential/{uuid}": {
            "get": {
                "operationId": "getNginxCredential",
                "summary": "Returns a Credential",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "credential": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.credential"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/setcredential/{uuid}": {
            "post": {
                "operationId": "setNginxCredential",
                "summary": "Updates a Credential",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "credential": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.credential"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/delcredential/{uuid}": {
            "post": {
                "operationId": "deleteNginxCredential",
                "summary": "Removes a Credential",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/addcustompolicy": {
            "description": "CustomPolicy",
            "summary": "Create Nginx CustomPolicy items",
            "post": {
                "operationId": "addNginxCustomPolicy",
                "summary": "Add a new CustomPolicy",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "custompolicy": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.custom_policy"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchcustompolicy/": {
            "post": {
                "operationId": "searchNginxCustomPolicy",
                "summary": "Search a CustomPolicy",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/getcustompolicy/{uuid}": {
            "get": {
                "operationId": "getNginxCustomPolicy",
                "summary": "Returns a CustomPolicy",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "custompolicy": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.custom_policy"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/setcustompolicy/{uuid}": {
            "post": {
                "operationId": "setNginxCustomPolicy",
                "summary": "Updates a CustomPolicy",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "custompolicy": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.custom_policy"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/delcustompolicy/{uuid}": {
            "post": {
                "operationId": "deleteNginxCustomPolicy",
                "summary": "Removes a CustomPolicy",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/addhttprewrite": {
            "description": "HttpRewrite",
            "summary": "Create Nginx HttpRewrite items",
            "post": {
                "operationId": "addNginxHttpRewrite",
                "summary": "Add a new HttpRewrite",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "httprewrite": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.http_rewrite"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchhttprewrite/": {
            "post": {
                "operationId": "searchNginxHttpRewrite",
                "summary": "Search a HttpRewrite",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/gethttprewrite/{uuid}": {
            "get": {
                "operationId": "getNginxHttpRewrite",
                "summary": "Returns a HttpRewrite",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "httprewrite": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.http_rewrite"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/sethttprewrite/{uuid}": {
            "post": {
                "operationId": "setNginxHttpRewrite",
                "summary": "Updates a HttpRewrite",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "httprewrite": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.http_rewrite"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/delhttprewrite/{uuid}": {
            "post": {
                "operationId": "deleteNginxHttpRewrite",
                "summary": "Removes a HttpRewrite",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/addhttpserver": {
            "description": "HttpServer",
            "summary": "Create Nginx HttpServer items",
            "post": {
                "operationId": "addNginxHttpServer",
                "summary": "Add a new HttpServer",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "httpserver": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.http_server"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchhttpserver/": {
            "post": {
                "operationId": "searchNginxHttpServer",
                "summary": "Search a HttpServer",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/gethttpserver/{uuid}": {
            "get": {
                "operationId": "getNginxHttpServer",
                "summary": "Returns a HttpServer",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "httpserver": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.http_server"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/sethttpserver/{uuid}": {
            "post": {
                "operationId": "setNginxHttpServer",
                "summary": "Updates a HttpServer",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "httpserver": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.http_server"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/delhttpserver/{uuid}": {
            "post": {
                "operationId": "deleteNginxHttpServer",
                "summary": "Removes a HttpServer",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/addlimit_request_connection": {
            "description": "LimitRequestConnection",
            "summary": "Create Nginx LimitRequestConnection items",
            "post": {
                "operationId": "addNginxLimitRequestConnection",
                "summary": "Add a new LimitRequestConnection",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "limitrequestconnection": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.limit_request_connection"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchlimit_request_connection/": {
            "post": {
                "operationId": "searchNginxLimitRequestConnection",
                "summary": "Search a LimitRequestConnection",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/getlimit_request_connection/{uuid}": {
            "get": {
                "operationId": "getNginxLimitRequestConnection",
                "summary": "Returns a LimitRequestConnection",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "limit_request_connection": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.limit_request_connection"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/setlimit_request_connection/{uuid}": {
            "post": {
                "operationId": "setNginxLimitRequestConnection",
                "summary": "Updates a LimitRequestConnection",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "limitrequestconnection": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.limit_request_connection"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/dellimit_request_connection/{uuid}": {
            "post": {
                "operationId": "deleteNginxLimitRequestConnection",
                "summary": "Removes a LimitRequestConnection",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/addlimit_zone": {
            "description": "LimitZone",
            "summary": "Create Nginx LimitZone items",
            "post": {
                "operationId": "addNginxLimitZone",
                "summary": "Add a new LimitZone",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "limitzone": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.limit_zone"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchlimit_zone/": {
            "post": {
                "operationId": "searchNginxLimitZone",
                "summary": "Search a LimitZone",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/getlimit_zone/{uuid}": {
            "get": {
                "operationId": "getNginxLimitZone",
                "summary": "Returns a LimitZone",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "limit_zone": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.limit_zone"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/setlimit_zone/{uuid}": {
            "post": {
                "operationId": "setNginxLimitZone",
                "summary": "Updates a LimitZone",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "limitzone": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.limit_zone"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/dellimit_zone/{uuid}": {
            "post": {
                "operationId": "deleteNginxLimitZone",
                "summary": "Removes a LimitZone",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchlocation/": {
            "post": {
                "operationId": "searchNginxLocation",
                "summary": "Search a Location",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/getlocation/{uuid}": {
            "get": {
                "operationId": "getNginxLocation",
                "summary": "Returns a Location",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "location": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.location"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/setlocation/{uuid}": {
            "post": {
                "operationId": "setNginxLocation",
                "summary": "Updates a Location",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "location": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.location"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/dellocation/{uuid}": {
            "post": {
                "operationId": "deleteNginxLocation",
                "summary": "Removes a Location",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchnaxsirule/": {
            "post": {
                "operationId": "searchNginxNaxsiRule",
                "summary": "Search a NaxsiRule",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/getnaxsirule/{uuid}": {
            "get": {
                "operationId": "getNginxNaxsiRule",
                "summary": "Returns a NaxsiRule",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "naxsirule": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.naxsi_rule"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/setnaxsirule/{uuid}": {
            "post": {
                "operationId": "setNginxNaxsiRule",
                "summary": "Updates a NaxsiRule",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "naxsirule": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.naxsi_rule"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/delnaxsirule/{uuid}": {
            "post": {
                "operationId": "deleteNginxNaxsiRule",
                "summary": "Removes a NaxsiRule",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchsecurity_header/": {
            "post": {
                "operationId": "searchNginxSecurityHeader",
                "summary": "Search a SecurityHeader",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/getsecurity_header/{uuid}": {
            "get": {
                "operationId": "getNginxSecurityHeader",
                "summary": "Returns a SecurityHeader",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "security_header": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.security_header"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/setsecurity_header/{uuid}": {
            "post": {
                "operationId": "setNginxSecurityHeader",
                "summary": "Updates a SecurityHeader",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "securityheader": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.security_header"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/delsecurity_header/{uuid}": {
            "post": {
                "operationId": "deleteNginxSecurityHeader",
                "summary": "Removes a SecurityHeader",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchupstream/": {
            "post": {
                "operationId": "searchNginxUpstream",
                "summary": "Search a Upstream",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/getupstream/{uuid}": {
            "get": {
                "operationId": "getNginxUpstream",
                "summary": "Returns a Upstream",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "upstream": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.upstream"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/setupstream/{uuid}": {
            "post": {
                "operationId": "setNginxUpstream",
                "summary": "Updates a Upstream",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "upstream": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.upstream"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/delupstream/{uuid}": {
            "post": {
                "operationId": "deleteNginxUpstream",
                "summary": "Removes a Upstream",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchupstreamserver/": {
            "post": {
                "operationId": "searchNginxUpstreamServer",
                "summary": "Search a UpstreamServer",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/getupstreamserver/{uuid}": {
            "get": {
                "operationId": "getNginxUpstreamServer",
                "summary": "Returns a UpstreamServer",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "upstream_server": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.upstreamserver"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/setupstreamserver/{uuid}": {
            "post": {
                "operationId": "setNginxUpstreamServer",
                "summary": "Updates a UpstreamServer",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "upstreamserver": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.upstreamserver"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/delupstreamserver/{uuid}": {
            "post": {
                "operationId": "deleteNginxUpstreamServer",
                "summary": "Removes a UpstreamServer",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/searchuserlist/": {
            "post": {
                "operationId": "searchNginxUserList",
                "summary": "Search a UserList",
                "tags": [
                    "Nginx"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nginx/settings/getuserlist/{uuid}": {
            "get": {
                "operationId": "getNginxUserList",
                "summary": "Returns a UserList",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userlist": {
                                            "$ref": "#/components/schemas/OPNsense.Nginx.userlist"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/setupuserlist/{uuid}": {
            "post": {
                "operationId": "setNginxUserList",
                "summary": "Updates a UserList",
                "tags": [
                    "Nginx"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "userlist": {
                                        "$ref": "#/components/schemas/OPNsense.Nginx.userlist"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nginx/settings/deluserlist/{uuid}": {
            "post": {
                "operationId": "deleteNginxUserList",
                "summary": "Removes a UserList",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/domain/adddomain": {
            "description": "Domain",
            "summary": "Create Postfix Domain items",
            "post": {
                "operationId": "addPostfixDomain",
                "summary": "Add a new Domain",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "domain": {
                                        "$ref": "#/components/schemas/OPNsense.postfix.domain.domains.domain"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/domain/searchdomain": {
            "post": {
                "operationId": "searchPostfixDomain",
                "summary": "Search a Domain",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/domain/getdomain/{uuid}": {
            "get": {
                "operationId": "getPostfixDomain",
                "summary": "Returns a Domain",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "domain": {
                                            "$ref": "#/components/schemas/OPNsense.postfix.domain.domains.domain"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/domain/setdomain/{uuid}": {
            "post": {
                "operationId": "setPostfixDomain",
                "summary": "Updates a Domain",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "domain": {
                                        "$ref": "#/components/schemas/OPNsense.postfix.domain.domains.domain"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/domain/deldomain/{uuid}": {
            "post": {
                "operationId": "deletePostfixDomain",
                "summary": "Removes a Domain",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/domain/toggledomain/{uuid}": {
            "post": {
                "operationId": "togglePostfixDomain",
                "summary": "Toggle a Domain",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/postfix/recipient/addrecipient": {
            "description": "Recipient",
            "summary": "Create Postfix Recipient items",
            "post": {
                "operationId": "addPostfixRecipient",
                "summary": "Add a new Recipient",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recipient": {
                                        "$ref": "#/components/schemas/OPNsense.postfix.recipient.recipients.recipient"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/recipient/searchrecipient": {
            "post": {
                "operationId": "searchPostfixRecipient",
                "summary": "Search a Recipient",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/recipient/getrecipient/{uuid}": {
            "get": {
                "operationId": "getPostfixRecipient",
                "summary": "Returns a Recipient",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "recipient": {
                                            "$ref": "#/components/schemas/OPNsense.postfix.recipient.recipients.recipient"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/recipient/setrecipient/{uuid}": {
            "post": {
                "operationId": "setPostfixRecipient",
                "summary": "Updates a Recipient",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recipient": {
                                        "$ref": "#/components/schemas/OPNsense.postfix.recipient.recipients.recipient"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/recipient/delrecipient/{uuid}": {
            "post": {
                "operationId": "deletePostfixRecipient",
                "summary": "Removes a Recipient",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/recipient/togglerecipient/{uuid}": {
            "post": {
                "operationId": "togglePostfixRecipient",
                "summary": "Toggle a Recipient",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/postfix/sender/addsender": {
            "description": "Sender",
            "summary": "Create Postfix Sender items",
            "post": {
                "operationId": "addPostfixSender",
                "summary": "Add a new Sender",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sender": {
                                        "$ref": "#/components/schemas/OPNsense.postfix.sender.senders.sender"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/sender/searchsender": {
            "post": {
                "operationId": "searchPostfixSender",
                "summary": "Search a Sender",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/sender/getsender/{uuid}": {
            "get": {
                "operationId": "getPostfixSender",
                "summary": "Returns a Sender",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "sender": {
                                            "$ref": "#/components/schemas/OPNsense.postfix.sender.senders.sender"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/sender/setsender/{uuid}": {
            "post": {
                "operationId": "setPostfixSender",
                "summary": "Updates a Sender",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sender": {
                                        "$ref": "#/components/schemas/OPNsense.postfix.sender.senders.sender"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/sender/delsender/{uuid}": {
            "post": {
                "operationId": "deletePostfixSender",
                "summary": "Removes a Sender",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/sender/togglesender/{uuid}": {
            "post": {
                "operationId": "togglePostfixSender",
                "summary": "Toggle a Sender",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/proxy/settings/addpacmatch": {
            "description": "PacMatch",
            "summary": "Create Proxy PacMatch items",
            "post": {
                "operationId": "addProxyPacMatch",
                "summary": "Add a new PacMatch",
                "tags": [
                    "Proxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pacmatch": {
                                        "$ref": "#/components/schemas/OPNsense.proxy.pac.match"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/searchpacmatch": {
            "post": {
                "operationId": "searchProxyPacMatch",
                "summary": "Search a PacMatch",
                "tags": [
                    "Proxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/proxy/settings/getpacmatch/{uuid}": {
            "get": {
                "operationId": "getProxyPacMatch",
                "summary": "Returns a PacMatch",
                "tags": [
                    "Proxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pacmatch": {
                                            "$ref": "#/components/schemas/OPNsense.proxy.pac.match"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/setpacmatch/{uuid}": {
            "post": {
                "operationId": "setProxyPacMatch",
                "summary": "Updates a PacMatch",
                "tags": [
                    "Proxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pacmatch": {
                                        "$ref": "#/components/schemas/OPNsense.proxy.pac.match"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/delpacmatch/{uuid}": {
            "post": {
                "operationId": "deleteProxyPacMatch",
                "summary": "Removes a PacMatch",
                "tags": [
                    "Proxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/togglepacmatch/{uuid}": {
            "post": {
                "operationId": "toggleProxyPacMatch",
                "summary": "Toggle a PacMatch",
                "tags": [
                    "Proxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/proxy/settings/addpacproxy": {
            "description": "PacProxy",
            "summary": "Create Proxy PacProxy items",
            "post": {
                "operationId": "addProxyPacProxy",
                "summary": "Add a new PacProxy",
                "tags": [
                    "Proxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pacproxy": {
                                        "$ref": "#/components/schemas/OPNsense.proxy.pac.proxy"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/searchpacproxy": {
            "post": {
                "operationId": "searchProxyPacProxy",
                "summary": "Search a PacProxy",
                "tags": [
                    "Proxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/proxy/settings/getpacproxy/{uuid}": {
            "get": {
                "operationId": "getProxyPacProxy",
                "summary": "Returns a PacProxy",
                "tags": [
                    "Proxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pacproxy": {
                                            "$ref": "#/components/schemas/OPNsense.proxy.pac.proxy"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/setpacproxy/{uuid}": {
            "post": {
                "operationId": "setProxyPacProxy",
                "summary": "Updates a PacProxy",
                "tags": [
                    "Proxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pacproxy": {
                                        "$ref": "#/components/schemas/OPNsense.proxy.pac.proxy"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/delpacproxy/{uuid}": {
            "post": {
                "operationId": "deleteProxyPacProxy",
                "summary": "Removes a PacProxy",
                "tags": [
                    "Proxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/togglepacproxy/{uuid}": {
            "post": {
                "operationId": "toggleProxyPacProxy",
                "summary": "Toggle a PacProxy",
                "tags": [
                    "Proxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/proxy/settings/addpacrule": {
            "description": "PacRule",
            "summary": "Create Proxy PacRule items",
            "post": {
                "operationId": "addProxyPacRule",
                "summary": "Add a new PacRule",
                "tags": [
                    "Proxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pacrule": {
                                        "$ref": "#/components/schemas/OPNsense.proxy.pac.rule"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/searchpacrule": {
            "post": {
                "operationId": "searchProxyPacRule",
                "summary": "Search a PacRule",
                "tags": [
                    "Proxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/proxy/settings/getpacrule/{uuid}": {
            "get": {
                "operationId": "getProxyPacRule",
                "summary": "Returns a PacRule",
                "tags": [
                    "Proxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pacrule": {
                                            "$ref": "#/components/schemas/OPNsense.proxy.pac.rule"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/setpacrule/{uuid}": {
            "post": {
                "operationId": "setProxyPacRule",
                "summary": "Updates a PacRule",
                "tags": [
                    "Proxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pacrule": {
                                        "$ref": "#/components/schemas/OPNsense.proxy.pac.rule"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/delpacrule/{uuid}": {
            "post": {
                "operationId": "deleteProxyPacRule",
                "summary": "Removes a PacRule",
                "tags": [
                    "Proxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/togglepacrule/{uuid}": {
            "post": {
                "operationId": "toggleProxyPacRule",
                "summary": "Toggle a PacRule",
                "tags": [
                    "Proxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/proxy/settings/addremoteblacklist": {
            "description": "RemoteBlacklist",
            "summary": "Create Proxy RemoteBlacklist items",
            "post": {
                "operationId": "addProxyRemoteBlacklist",
                "summary": "Add a new RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "remoteblacklist": {
                                        "$ref": "#/components/schemas/OPNsense.proxy.forward.acl.remoteACLs.blacklists.blacklist"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/searchremoteblacklists": {
            "post": {
                "operationId": "searchProxyRemoteBlacklist",
                "summary": "Search a RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/proxy/settings/getremoteblacklist/{uuid}": {
            "get": {
                "operationId": "getProxyRemoteBlacklist",
                "summary": "Returns a RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "blacklist": {
                                            "$ref": "#/components/schemas/OPNsense.proxy.forward.acl.remoteACLs.blacklists.blacklist"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/setremoteblacklist/{uuid}": {
            "post": {
                "operationId": "setProxyRemoteBlacklist",
                "summary": "Updates a RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "remoteblacklist": {
                                        "$ref": "#/components/schemas/OPNsense.proxy.forward.acl.remoteACLs.blacklists.blacklist"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/delremoteblacklist/{uuid}": {
            "post": {
                "operationId": "deleteProxyRemoteBlacklist",
                "summary": "Removes a RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/toggleremoteblacklist/{uuid}": {
            "post": {
                "operationId": "toggleProxyRemoteBlacklist",
                "summary": "Toggle a RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/proxyuseracl/settings/addacl": {
            "description": "UserACL",
            "summary": "Create ProxyUserACL UserACL items",
            "post": {
                "operationId": "addProxyUserACLUserACL",
                "summary": "Add a new UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "useracl": {
                                        "$ref": "#/components/schemas/OPNsense.ProxyUserACL.general.ACLs.ACL"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxyuseracl/settings/searchacl": {
            "post": {
                "operationId": "searchProxyUserACLUserACL",
                "summary": "Search a UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/proxyuseracl/settings/getacl/{uuid}": {
            "get": {
                "operationId": "getProxyUserACLUserACL",
                "summary": "Returns a UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "acl": {
                                            "$ref": "#/components/schemas/OPNsense.ProxyUserACL.general.ACLs.ACL"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxyuseracl/settings/setacl/{uuid}": {
            "post": {
                "operationId": "setProxyUserACLUserACL",
                "summary": "Updates a UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "useracl": {
                                        "$ref": "#/components/schemas/OPNsense.ProxyUserACL.general.ACLs.ACL"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxyuseracl/settings/delacl/{uuid}": {
            "post": {
                "operationId": "deleteProxyUserACLUserACL",
                "summary": "Removes a UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxyuseracl/settings/toggleacl/{uuid}": {
            "post": {
                "operationId": "toggleProxyUserACLUserACL",
                "summary": "Toggle a UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/bgp/addaspath": {
            "description": "BGPAspath",
            "summary": "Create Quagga BGPAspath items",
            "post": {
                "operationId": "addQuaggaBGPAspath",
                "summary": "Add a new BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bgpaspath": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.bgp.aspaths.aspath"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/searchaspath": {
            "post": {
                "operationId": "searchQuaggaBGPAspath",
                "summary": "Search a BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/getaspath/{uuid}": {
            "get": {
                "operationId": "getQuaggaBGPAspath",
                "summary": "Returns a BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "aspath": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.bgp.aspaths.aspath"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/setaspath/{uuid}": {
            "post": {
                "operationId": "setQuaggaBGPAspath",
                "summary": "Updates a BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bgpaspath": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.bgp.aspaths.aspath"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/delaspath/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaBGPAspath",
                "summary": "Removes a BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/toggleaspath/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaBGPAspath",
                "summary": "Toggle a BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/bgp/addneighbor": {
            "description": "BGPNeighbor",
            "summary": "Create Quagga BGPNeighbor items",
            "post": {
                "operationId": "addQuaggaBGPNeighbor",
                "summary": "Add a new BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bgpneighbor": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.bgp.neighbors.neighbor"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/searchneighbor": {
            "post": {
                "operationId": "searchQuaggaBGPNeighbor",
                "summary": "Search a BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/getneighbor/{uuid}": {
            "get": {
                "operationId": "getQuaggaBGPNeighbor",
                "summary": "Returns a BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "neighbor": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.bgp.neighbors.neighbor"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/setneighbor/{uuid}": {
            "post": {
                "operationId": "setQuaggaBGPNeighbor",
                "summary": "Updates a BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bgpneighbor": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.bgp.neighbors.neighbor"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/delneighbor/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaBGPNeighbor",
                "summary": "Removes a BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/toggleneighbor/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaBGPNeighbor",
                "summary": "Toggle a BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/bgp/addprefixlist": {
            "description": "BGPPrefixlist",
            "summary": "Create Quagga BGPPrefixlist items",
            "post": {
                "operationId": "addQuaggaBGPPrefixlist",
                "summary": "Add a new BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bgpprefixlist": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.bgp.prefixlists.prefixlist"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/searchprefixlist": {
            "post": {
                "operationId": "searchQuaggaBGPPrefixlist",
                "summary": "Search a BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/getprefixlist/{uuid}": {
            "get": {
                "operationId": "getQuaggaBGPPrefixlist",
                "summary": "Returns a BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "prefixlist": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.bgp.prefixlists.prefixlist"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/setprefixlist/{uuid}": {
            "post": {
                "operationId": "setQuaggaBGPPrefixlist",
                "summary": "Updates a BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bgpprefixlist": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.bgp.prefixlists.prefixlist"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/delprefixlist/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaBGPPrefixlist",
                "summary": "Removes a BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/toggleprefixlist/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaBGPPrefixlist",
                "summary": "Toggle a BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/bgp/addroutemap": {
            "description": "BGPRoutemap",
            "summary": "Create Quagga BGPRoutemap items",
            "post": {
                "operationId": "addQuaggaBGPRoutemap",
                "summary": "Add a new BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bgproutemap": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.bgp.routemaps.routemap"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/searchroutemap": {
            "post": {
                "operationId": "searchQuaggaBGPRoutemap",
                "summary": "Search a BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/getroutemap/{uuid}": {
            "get": {
                "operationId": "getQuaggaBGPRoutemap",
                "summary": "Returns a BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "routemap": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.bgp.routemaps.routemap"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/setroutemap/{uuid}": {
            "post": {
                "operationId": "setQuaggaBGPRoutemap",
                "summary": "Updates a BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bgproutemap": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.bgp.routemaps.routemap"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/delroutemap/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaBGPRoutemap",
                "summary": "Removes a BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/toggleroutemap/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaBGPRoutemap",
                "summary": "Toggle a BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/ospf6settings/addinterface": {
            "description": "Ospf6Interface",
            "summary": "Create Quagga Ospf6Interface items",
            "post": {
                "operationId": "addQuaggaOspf6Interface",
                "summary": "Add a new Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ospf6interface": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.ospf6.interfaces.interface"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospf6settings/searchinterface": {
            "post": {
                "operationId": "searchQuaggaOspf6Interface",
                "summary": "Search a Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospf6settings/getinterface/{uuid}": {
            "get": {
                "operationId": "getQuaggaOspf6Interface",
                "summary": "Returns a Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "interface": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.ospf6.interfaces.interface"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospf6settings/setinterface/{uuid}": {
            "post": {
                "operationId": "setQuaggaOspf6Interface",
                "summary": "Updates a Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ospf6interface": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.ospf6.interfaces.interface"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospf6settings/delinterface/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaOspf6Interface",
                "summary": "Removes a Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospf6settings/toggleinterface/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaOspf6Interface",
                "summary": "Toggle a Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/ospfsettings/addinterface": {
            "description": "OspfInterface",
            "summary": "Create Quagga OspfInterface items",
            "post": {
                "operationId": "addQuaggaOspfInterface",
                "summary": "Add a new OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ospfinterface": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.ospf.interfaces.interface"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/searchinterface": {
            "post": {
                "operationId": "searchQuaggaOspfInterface",
                "summary": "Search a OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/getinterface/{uuid}": {
            "get": {
                "operationId": "getQuaggaOspfInterface",
                "summary": "Returns a OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "interface": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.ospf.interfaces.interface"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/setinterface/{uuid}": {
            "post": {
                "operationId": "setQuaggaOspfInterface",
                "summary": "Updates a OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ospfinterface": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.ospf.interfaces.interface"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/delinterface/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaOspfInterface",
                "summary": "Removes a OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/toggleinterface/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaOspfInterface",
                "summary": "Toggle a OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/ospfsettings/addnetwork": {
            "description": "OspfNetwork",
            "summary": "Create Quagga OspfNetwork items",
            "post": {
                "operationId": "addQuaggaOspfNetwork",
                "summary": "Add a new OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ospfnetwork": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.ospf.networks.network"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/searchnetwork": {
            "post": {
                "operationId": "searchQuaggaOspfNetwork",
                "summary": "Search a OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/getnetwork/{uuid}": {
            "get": {
                "operationId": "getQuaggaOspfNetwork",
                "summary": "Returns a OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "network": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.ospf.networks.network"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/setnetwork/{uuid}": {
            "post": {
                "operationId": "setQuaggaOspfNetwork",
                "summary": "Updates a OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ospfnetwork": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.ospf.networks.network"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/delnetwork/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaOspfNetwork",
                "summary": "Removes a OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/togglenetwork/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaOspfNetwork",
                "summary": "Toggle a OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/ospfsettings/addprefixlist": {
            "description": "OspfPrefixlist",
            "summary": "Create Quagga OspfPrefixlist items",
            "post": {
                "operationId": "addQuaggaOspfPrefixlist",
                "summary": "Add a new OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ospfprefixlist": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.ospf.prefixlists.prefixlist"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/searchprefixlist": {
            "post": {
                "operationId": "searchQuaggaOspfPrefixlist",
                "summary": "Search a OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/getprefixlist/{uuid}": {
            "get": {
                "operationId": "getQuaggaOspfPrefixlist",
                "summary": "Returns a OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "prefixlist": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.ospf.prefixlists.prefixlist"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/setprefixlist/{uuid}": {
            "post": {
                "operationId": "setQuaggaOspfPrefixlist",
                "summary": "Updates a OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ospfprefixlist": {
                                        "$ref": "#/components/schemas/OPNsense.quagga.ospf.prefixlists.prefixlist"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/delprefixlist/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaOspfPrefixlist",
                "summary": "Removes a OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/toggleprefixlist/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaOspfPrefixlist",
                "summary": "Toggle a OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/relayd/settings/search/host/": {
            "post": {
                "operationId": "searchRelaydHost",
                "summary": "Search a Host",
                "tags": [
                    "Relayd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/get/host/{uuid}": {
            "get": {
                "operationId": "getRelaydHost",
                "summary": "Returns a Host",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "host": {
                                            "$ref": "#/components/schemas/OPNsense.relayd.host"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/set/host/{uuid}": {
            "post": {
                "operationId": "setRelaydHost",
                "summary": "Updates a Host",
                "tags": [
                    "Relayd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "host": {
                                        "$ref": "#/components/schemas/OPNsense.relayd.host"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/del/host/{uuid}": {
            "post": {
                "operationId": "deleteRelaydHost",
                "summary": "Removes a Host",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/search/protocol/": {
            "post": {
                "operationId": "searchRelaydProtocol",
                "summary": "Search a Protocol",
                "tags": [
                    "Relayd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/get/protocol/{uuid}": {
            "get": {
                "operationId": "getRelaydProtocol",
                "summary": "Returns a Protocol",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "protocol": {
                                            "$ref": "#/components/schemas/OPNsense.relayd.protocol"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/set/protocol/{uuid}": {
            "post": {
                "operationId": "setRelaydProtocol",
                "summary": "Updates a Protocol",
                "tags": [
                    "Relayd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "protocol": {
                                        "$ref": "#/components/schemas/OPNsense.relayd.protocol"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/del/protocol/{uuid}": {
            "post": {
                "operationId": "deleteRelaydProtocol",
                "summary": "Removes a Protocol",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/search/table/": {
            "post": {
                "operationId": "searchRelaydTable",
                "summary": "Search a Table",
                "tags": [
                    "Relayd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/get/table/{uuid}": {
            "get": {
                "operationId": "getRelaydTable",
                "summary": "Returns a Table",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "table": {
                                            "$ref": "#/components/schemas/OPNsense.relayd.table"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/set/table/{uuid}": {
            "post": {
                "operationId": "setRelaydTable",
                "summary": "Updates a Table",
                "tags": [
                    "Relayd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "table": {
                                        "$ref": "#/components/schemas/OPNsense.relayd.table"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/del/table/{uuid}": {
            "post": {
                "operationId": "deleteRelaydTable",
                "summary": "Removes a Table",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/search/tablecheck/": {
            "post": {
                "operationId": "searchRelaydTableCheck",
                "summary": "Search a TableCheck",
                "tags": [
                    "Relayd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/get/tablecheck/{uuid}": {
            "get": {
                "operationId": "getRelaydTableCheck",
                "summary": "Returns a TableCheck",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "relayd": {
                                            "tablecheck": {
                                                "$ref": "#/components/schemas/OPNsense.relayd.tablecheck"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/set/tablecheck/{uuid}": {
            "post": {
                "operationId": "setRelaydTableCheck",
                "summary": "Updates a TableCheck",
                "tags": [
                    "Relayd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tablecheck": {
                                        "$ref": "#/components/schemas/OPNsense.relayd.tablecheck"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/del/tablecheck/{uuid}": {
            "post": {
                "operationId": "deleteRelaydTableCheck",
                "summary": "Removes a TableCheck",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/search/virtualserver/": {
            "post": {
                "operationId": "searchRelaydVirtualServer",
                "summary": "Search a VirtualServer",
                "tags": [
                    "Relayd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/get/virtualserver/{uuid}": {
            "get": {
                "operationId": "getRelaydVirtualServer",
                "summary": "Returns a VirtualServer",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "virtualserver": {
                                            "$ref": "#/components/schemas/OPNsense.relayd.virtualserver"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/set/virtualserver/{uuid}": {
            "post": {
                "operationId": "setRelaydVirtualServer",
                "summary": "Updates a VirtualServer",
                "tags": [
                    "Relayd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "virtualserver": {
                                        "$ref": "#/components/schemas/OPNsense.relayd.virtualserver"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/del/virtualserver/{uuid}": {
            "post": {
                "operationId": "deleteRelaydVirtualServer",
                "summary": "Removes a VirtualServer",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/routes/routes/addroute": {
            "description": "Route",
            "summary": "Create Routes Route items",
            "post": {
                "operationId": "addRoutesRoute",
                "summary": "Add a new Route",
                "tags": [
                    "Routes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "route": {
                                        "$ref": "#/components/schemas/staticroutes.route"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/routes/routes/searchroute": {
            "post": {
                "operationId": "searchRoutesRoute",
                "summary": "Search a Route",
                "tags": [
                    "Routes"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/routes/routes/getroute/{uuid}": {
            "get": {
                "operationId": "getRoutesRoute",
                "summary": "Returns a Route",
                "tags": [
                    "Routes"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "route": {
                                            "$ref": "#/components/schemas/staticroutes.route"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/routes/routes/setroute/{uuid}": {
            "post": {
                "operationId": "setRoutesRoute",
                "summary": "Updates a Route",
                "tags": [
                    "Routes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "route": {
                                        "$ref": "#/components/schemas/staticroutes.route"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/routes/routes/delroute/{uuid}": {
            "post": {
                "operationId": "deleteRoutesRoute",
                "summary": "Removes a Route",
                "tags": [
                    "Routes"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/routes/routes/toggleroute/{uuid}/{disabled}": {
            "post": {
                "operationId": "toggleRoutesRoute",
                "summary": "Toggle a Route",
                "tags": [
                    "Routes"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/disabled"
                    }
                ]
            }
        },
        "/siproxd/domain/adddomain": {
            "description": "Domain",
            "summary": "Create Siproxd Domain items",
            "post": {
                "operationId": "addSiproxdDomain",
                "summary": "Add a new Domain",
                "tags": [
                    "Siproxd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "domain": {
                                        "$ref": "#/components/schemas/OPNsense.siproxd.domain.domains.domain"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siproxd/domain/searchdomain": {
            "post": {
                "operationId": "searchSiproxdDomain",
                "summary": "Search a Domain",
                "tags": [
                    "Siproxd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/siproxd/domain/getdomain/{uuid}": {
            "get": {
                "operationId": "getSiproxdDomain",
                "summary": "Returns a Domain",
                "tags": [
                    "Siproxd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "domain": {
                                            "$ref": "#/components/schemas/OPNsense.siproxd.domain.domains.domain"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siproxd/domain/setdomain/{uuid}": {
            "post": {
                "operationId": "setSiproxdDomain",
                "summary": "Updates a Domain",
                "tags": [
                    "Siproxd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "domain": {
                                        "$ref": "#/components/schemas/OPNsense.siproxd.domain.domains.domain"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siproxd/domain/deldomain/{uuid}": {
            "post": {
                "operationId": "deleteSiproxdDomain",
                "summary": "Removes a Domain",
                "tags": [
                    "Siproxd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siproxd/domain/toggledomain/{uuid}": {
            "post": {
                "operationId": "toggleSiproxdDomain",
                "summary": "Toggle a Domain",
                "tags": [
                    "Siproxd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/siproxd/user/adduser": {
            "description": "User",
            "summary": "Create Siproxd User items",
            "post": {
                "operationId": "addSiproxdUser",
                "summary": "Add a new User",
                "tags": [
                    "Siproxd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user": {
                                        "$ref": "#/components/schemas/OPNsense.siproxd.user.users.user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siproxd/user/searchuser": {
            "post": {
                "operationId": "searchSiproxdUser",
                "summary": "Search a User",
                "tags": [
                    "Siproxd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/siproxd/user/getuser/{uuid}": {
            "get": {
                "operationId": "getSiproxdUser",
                "summary": "Returns a User",
                "tags": [
                    "Siproxd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/OPNsense.siproxd.user.users.user"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siproxd/user/setuser/{uuid}": {
            "post": {
                "operationId": "setSiproxdUser",
                "summary": "Updates a User",
                "tags": [
                    "Siproxd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user": {
                                        "$ref": "#/components/schemas/OPNsense.siproxd.user.users.user"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siproxd/user/deluser/{uuid}": {
            "post": {
                "operationId": "deleteSiproxdUser",
                "summary": "Removes a User",
                "tags": [
                    "Siproxd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siproxd/user/toggleuser/{uuid}": {
            "post": {
                "operationId": "toggleSiproxdUser",
                "summary": "Toggle a User",
                "tags": [
                    "Siproxd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/telegraf/key/addkey": {
            "description": "Key",
            "summary": "Create Telegraf Key items",
            "post": {
                "operationId": "addTelegrafKey",
                "summary": "Add a new Key",
                "tags": [
                    "Telegraf"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "key": {
                                        "$ref": "#/components/schemas/OPNsense.telegraf.key.keys.key"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/telegraf/key/searchkey": {
            "post": {
                "operationId": "searchTelegrafKey",
                "summary": "Search a Key",
                "tags": [
                    "Telegraf"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/telegraf/key/getkey/{uuid}": {
            "get": {
                "operationId": "getTelegrafKey",
                "summary": "Returns a Key",
                "tags": [
                    "Telegraf"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "host": {
                                            "$ref": "#/components/schemas/OPNsense.telegraf.key.keys.key"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/telegraf/key/setkey/{uuid}": {
            "post": {
                "operationId": "setTelegrafKey",
                "summary": "Updates a Key",
                "tags": [
                    "Telegraf"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "key": {
                                        "$ref": "#/components/schemas/OPNsense.telegraf.key.keys.key"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/telegraf/key/delkey/{uuid}": {
            "post": {
                "operationId": "deleteTelegrafKey",
                "summary": "Removes a Key",
                "tags": [
                    "Telegraf"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/telegraf/key/togglekey/{uuid}": {
            "post": {
                "operationId": "toggleTelegrafKey",
                "summary": "Toggle a Key",
                "tags": [
                    "Telegraf"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tinc/settings/sethost": {
            "description": "Host",
            "summary": "Create Tinc Host items",
            "post": {
                "operationId": "addTincHost",
                "summary": "Add a new Host",
                "tags": [
                    "Tinc"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "host": {
                                        "$ref": "#/components/schemas/OPNsense.Tinc.hosts.host"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tinc/settings/searchhost": {
            "post": {
                "operationId": "searchTincHost",
                "summary": "Search a Host",
                "tags": [
                    "Tinc"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tinc/settings/gethost/{uuid}": {
            "get": {
                "operationId": "getTincHost",
                "summary": "Returns a Host",
                "tags": [
                    "Tinc"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "host": {
                                            "$ref": "#/components/schemas/OPNsense.Tinc.hosts.host"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tinc/settings/sethost/{uuid}": {
            "post": {
                "operationId": "setTincHost",
                "summary": "Updates a Host",
                "tags": [
                    "Tinc"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "host": {
                                        "$ref": "#/components/schemas/OPNsense.Tinc.hosts.host"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tinc/settings/delhost/{uuid}": {
            "post": {
                "operationId": "deleteTincHost",
                "summary": "Removes a Host",
                "tags": [
                    "Tinc"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tinc/settings/togglehost/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleTincHost",
                "summary": "Toggle a Host",
                "tags": [
                    "Tinc"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tinc/settings/setnetwork": {
            "description": "Network",
            "summary": "Create Tinc Network items",
            "post": {
                "operationId": "addTincNetwork",
                "summary": "Add a new Network",
                "tags": [
                    "Tinc"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "network": {
                                        "$ref": "#/components/schemas/OPNsense.Tinc.networks.network"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tinc/settings/searchnetwork": {
            "post": {
                "operationId": "searchTincNetwork",
                "summary": "Search a Network",
                "tags": [
                    "Tinc"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tinc/settings/getnetwork/{uuid}": {
            "get": {
                "operationId": "getTincNetwork",
                "summary": "Returns a Network",
                "tags": [
                    "Tinc"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "network": {
                                            "$ref": "#/components/schemas/OPNsense.Tinc.networks.network"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tinc/settings/setnetwork/{uuid}": {
            "post": {
                "operationId": "setTincNetwork",
                "summary": "Updates a Network",
                "tags": [
                    "Tinc"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "network": {
                                        "$ref": "#/components/schemas/OPNsense.Tinc.networks.network"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tinc/settings/delnetwork/{uuid}": {
            "post": {
                "operationId": "deleteTincNetwork",
                "summary": "Removes a Network",
                "tags": [
                    "Tinc"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tinc/settings/togglenetwork/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleTincNetwork",
                "summary": "Toggle a Network",
                "tags": [
                    "Tinc"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tor/exitacl/addacl": {
            "description": "Exitacl",
            "summary": "Create Tor Exitacl items",
            "post": {
                "operationId": "addTorExitacl",
                "summary": "Add a new Exitacl",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "exitacl": {
                                        "$ref": "#/components/schemas/OPNsense.tor.exitpolicy.policy"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/exitacl/searchacl": {
            "post": {
                "operationId": "searchTorExitacl",
                "summary": "Search a Exitacl",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/exitacl/getacl/{uuid}": {
            "get": {
                "operationId": "getTorExitacl",
                "summary": "Returns a Exitacl",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "exitpolicy": {
                                            "$ref": "#/components/schemas/OPNsense.tor.exitpolicy.policy"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/exitacl/setacl/{uuid}": {
            "post": {
                "operationId": "setTorExitacl",
                "summary": "Updates a Exitacl",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "exitacl": {
                                        "$ref": "#/components/schemas/OPNsense.tor.exitpolicy.policy"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/exitacl/delacl/{uuid}": {
            "post": {
                "operationId": "deleteTorExitacl",
                "summary": "Removes a Exitacl",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/exitacl/toggleacl/{uuid}": {
            "post": {
                "operationId": "toggleTorExitacl",
                "summary": "Toggle a Exitacl",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tor/hiddenservice/addservice": {
            "description": "HiddenService",
            "summary": "Create Tor HiddenService items",
            "post": {
                "operationId": "addTorHiddenService",
                "summary": "Add a new HiddenService",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hiddenservice": {
                                        "$ref": "#/components/schemas/OPNsense.tor.hiddenservice.service"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/hiddenservice/searchservice": {
            "post": {
                "operationId": "searchTorHiddenService",
                "summary": "Search a HiddenService",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/hiddenservice/getservice/{uuid}": {
            "get": {
                "operationId": "getTorHiddenService",
                "summary": "Returns a HiddenService",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "hiddenservice": {
                                            "$ref": "#/components/schemas/OPNsense.tor.hiddenservice.service"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/hiddenservice/setservice/{uuid}": {
            "post": {
                "operationId": "setTorHiddenService",
                "summary": "Updates a HiddenService",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hiddenservice": {
                                        "$ref": "#/components/schemas/OPNsense.tor.hiddenservice.service"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/hiddenservice/delservice/{uuid}": {
            "post": {
                "operationId": "deleteTorHiddenService",
                "summary": "Removes a HiddenService",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/hiddenservice/toggleservice/{uuid}": {
            "post": {
                "operationId": "toggleTorHiddenService",
                "summary": "Toggle a HiddenService",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tor/hiddenserviceacl/addacl": {
            "description": "HiddenServiceACL",
            "summary": "Create Tor HiddenServiceACL items",
            "post": {
                "operationId": "addTorHiddenServiceACL",
                "summary": "Add a new HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hiddenserviceacl": {
                                        "$ref": "#/components/schemas/OPNsense.tor.hiddenserviceacl.hiddenserviceacl"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/hiddenserviceacl/searchacl": {
            "post": {
                "operationId": "searchTorHiddenServiceACL",
                "summary": "Search a HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/hiddenserviceacl/getacl/{uuid}": {
            "get": {
                "operationId": "getTorHiddenServiceACL",
                "summary": "Returns a HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "hiddenserviceacl": {
                                            "$ref": "#/components/schemas/OPNsense.tor.hiddenserviceacl.hiddenserviceacl"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/hiddenserviceacl/setacl/{uuid}": {
            "post": {
                "operationId": "setTorHiddenServiceACL",
                "summary": "Updates a HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hiddenserviceacl": {
                                        "$ref": "#/components/schemas/OPNsense.tor.hiddenserviceacl.hiddenserviceacl"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/hiddenserviceacl/delacl/{uuid}": {
            "post": {
                "operationId": "deleteTorHiddenServiceACL",
                "summary": "Removes a HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/hiddenserviceacl/toggleacl/{uuid}": {
            "post": {
                "operationId": "toggleTorHiddenServiceACL",
                "summary": "Toggle a HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tor/general/addhidservauth": {
            "description": "HiddenServiceAuth",
            "summary": "Create Tor HiddenServiceAuth items",
            "post": {
                "operationId": "addTorHiddenServiceAuth",
                "summary": "Add a new HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hiddenserviceauth": {
                                        "$ref": "#/components/schemas/OPNsense.tor.general.client_authentications.client_auth"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/general/searchhidservauth": {
            "post": {
                "operationId": "searchTorHiddenServiceAuth",
                "summary": "Search a HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/general/gethidservauth/{uuid}": {
            "get": {
                "operationId": "getTorHiddenServiceAuth",
                "summary": "Returns a HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "client_auth": {
                                            "$ref": "#/components/schemas/OPNsense.tor.general.client_authentications.client_auth"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/general/sethidservauth/{uuid}": {
            "post": {
                "operationId": "setTorHiddenServiceAuth",
                "summary": "Updates a HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hiddenserviceauth": {
                                        "$ref": "#/components/schemas/OPNsense.tor.general.client_authentications.client_auth"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/general/delhidservauth/{uuid}": {
            "post": {
                "operationId": "deleteTorHiddenServiceAuth",
                "summary": "Removes a HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/general/togglehidservauth/{uuid}": {
            "post": {
                "operationId": "toggleTorHiddenServiceAuth",
                "summary": "Toggle a HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tor/socksacl/addacl": {
            "description": "SocksACL",
            "summary": "Create Tor SocksACL items",
            "post": {
                "operationId": "addTorSocksACL",
                "summary": "Add a new SocksACL",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "socksacl": {
                                        "$ref": "#/components/schemas/OPNsense.tor.aclsockspolicy.policy"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/socksacl/searchacl": {
            "post": {
                "operationId": "searchTorSocksACL",
                "summary": "Search a SocksACL",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/socksacl/getacl/{uuid}": {
            "get": {
                "operationId": "getTorSocksACL",
                "summary": "Returns a SocksACL",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "policy": {
                                            "$ref": "#/components/schemas/OPNsense.tor.aclsockspolicy.policy"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/socksacl/setacl/{uuid}": {
            "post": {
                "operationId": "setTorSocksACL",
                "summary": "Updates a SocksACL",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "socksacl": {
                                        "$ref": "#/components/schemas/OPNsense.tor.aclsockspolicy.policy"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/socksacl/delacl/{uuid}": {
            "post": {
                "operationId": "deleteTorSocksACL",
                "summary": "Removes a SocksACL",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/socksacl/toggleacl/{uuid}": {
            "post": {
                "operationId": "toggleTorSocksACL",
                "summary": "Toggle a SocksACL",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/trafficshaper/settings/addpipe": {
            "description": "Pipe",
            "summary": "Create TrafficShaper Pipe items",
            "post": {
                "operationId": "addTrafficShaperPipe",
                "summary": "Add a new Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pipe": {
                                        "$ref": "#/components/schemas/OPNsense.TrafficShaper.pipes.pipe"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/searchpipes": {
            "post": {
                "operationId": "searchTrafficShaperPipe",
                "summary": "Search a Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/getpipe/{uuid}": {
            "get": {
                "operationId": "getTrafficShaperPipe",
                "summary": "Returns a Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pipe": {
                                            "$ref": "#/components/schemas/OPNsense.TrafficShaper.pipes.pipe"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/setpipe/{uuid}": {
            "post": {
                "operationId": "setTrafficShaperPipe",
                "summary": "Updates a Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pipe": {
                                        "$ref": "#/components/schemas/OPNsense.TrafficShaper.pipes.pipe"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/delpipe/{uuid}": {
            "post": {
                "operationId": "deleteTrafficShaperPipe",
                "summary": "Removes a Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/togglepipe/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleTrafficShaperPipe",
                "summary": "Toggle a Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/trafficshaper/settings/addqueue": {
            "description": "Queue",
            "summary": "Create TrafficShaper Queue items",
            "post": {
                "operationId": "addTrafficShaperQueue",
                "summary": "Add a new Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "queue": {
                                        "$ref": "#/components/schemas/OPNsense.TrafficShaper.queues.queue"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/searchqueues": {
            "post": {
                "operationId": "searchTrafficShaperQueue",
                "summary": "Search a Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/getqueue/{uuid}": {
            "get": {
                "operationId": "getTrafficShaperQueue",
                "summary": "Returns a Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "queue": {
                                            "$ref": "#/components/schemas/OPNsense.TrafficShaper.queues.queue"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/setqueue/{uuid}": {
            "post": {
                "operationId": "setTrafficShaperQueue",
                "summary": "Updates a Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "queue": {
                                        "$ref": "#/components/schemas/OPNsense.TrafficShaper.queues.queue"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/delqueue/{uuid}": {
            "post": {
                "operationId": "deleteTrafficShaperQueue",
                "summary": "Removes a Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/togglequeue/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleTrafficShaperQueue",
                "summary": "Toggle a Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/trafficshaper/settings/addrule": {
            "description": "Rule",
            "summary": "Create TrafficShaper Rule items",
            "post": {
                "operationId": "addTrafficShaperRule",
                "summary": "Add a new Rule",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rule": {
                                        "$ref": "#/components/schemas/OPNsense.TrafficShaper.rules.rule"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/searchrules": {
            "post": {
                "operationId": "searchTrafficShaperRule",
                "summary": "Search a Rule",
                "tags": [
                    "TrafficShaper"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/getrule/{uuid}": {
            "get": {
                "operationId": "getTrafficShaperRule",
                "summary": "Returns a Rule",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "rule": {
                                            "$ref": "#/components/schemas/OPNsense.TrafficShaper.rules.rule"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/setrule/{uuid}": {
            "post": {
                "operationId": "setTrafficShaperRule",
                "summary": "Updates a Rule",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rule": {
                                        "$ref": "#/components/schemas/OPNsense.TrafficShaper.rules.rule"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/delrule/{uuid}": {
            "post": {
                "operationId": "deleteTrafficShaperRule",
                "summary": "Removes a Rule",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wireguard/client/addclient": {
            "description": "Client",
            "summary": "Create Wireguard Client items",
            "post": {
                "operationId": "addWireguardClient",
                "summary": "Add a new Client",
                "tags": [
                    "Wireguard"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client": {
                                        "$ref": "#/components/schemas/OPNsense.wireguard.client.clients.client"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wireguard/client/searchclient": {
            "post": {
                "operationId": "searchWireguardClient",
                "summary": "Search a Client",
                "tags": [
                    "Wireguard"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/wireguard/client/getclient/{uuid}": {
            "get": {
                "operationId": "getWireguardClient",
                "summary": "Returns a Client",
                "tags": [
                    "Wireguard"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pipe": {
                                            "$ref": "#/components/schemas/OPNsense.wireguard.client.clients.client"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wireguard/client/setclient/{uuid}": {
            "post": {
                "operationId": "setWireguardClient",
                "summary": "Updates a Client",
                "tags": [
                    "Wireguard"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client": {
                                        "$ref": "#/components/schemas/OPNsense.wireguard.client.clients.client"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wireguard/client/delclient/{uuid}": {
            "post": {
                "operationId": "deleteWireguardClient",
                "summary": "Removes a Client",
                "tags": [
                    "Wireguard"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wireguard/client/toggleclient/{uuid}": {
            "post": {
                "operationId": "toggleWireguardClient",
                "summary": "Toggle a Client",
                "tags": [
                    "Wireguard"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/wireguard/server/addserver": {
            "description": "Server",
            "summary": "Create Wireguard Server items",
            "post": {
                "operationId": "addWireguardServer",
                "summary": "Add a new Server",
                "tags": [
                    "Wireguard"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "server": {
                                        "$ref": "#/components/schemas/OPNsense.wireguard.server.servers.server"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wireguard/server/searchserver": {
            "post": {
                "operationId": "searchWireguardServer",
                "summary": "Search a Server",
                "tags": [
                    "Wireguard"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/wireguard/server/getserver/{uuid}": {
            "get": {
                "operationId": "getWireguardServer",
                "summary": "Returns a Server",
                "tags": [
                    "Wireguard"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "queue": {
                                            "$ref": "#/components/schemas/OPNsense.wireguard.server.servers.server"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wireguard/server/setserver/{uuid}": {
            "post": {
                "operationId": "setWireguardServer",
                "summary": "Updates a Server",
                "tags": [
                    "Wireguard"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "server": {
                                        "$ref": "#/components/schemas/OPNsense.wireguard.server.servers.server"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wireguard/server/delserver/{uuid}": {
            "post": {
                "operationId": "deleteWireguardServer",
                "summary": "Removes a Server",
                "tags": [
                    "Wireguard"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wireguard/server/toggleserver/{uuid}": {
            "post": {
                "operationId": "toggleWireguardServer",
                "summary": "Toggle a Server",
                "tags": [
                    "Wireguard"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/wol/wol/addhost": {
            "description": "Host",
            "summary": "Create Wol Host items",
            "post": {
                "operationId": "addWolHost",
                "summary": "Add a new Host",
                "tags": [
                    "Wol"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "host": {
                                        "$ref": "#/components/schemas/wol.wolentry"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wol/wol/searchhost": {
            "post": {
                "operationId": "searchWolHost",
                "summary": "Search a Host",
                "tags": [
                    "Wol"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/wol/wol/gethost/{uuid}": {
            "get": {
                "operationId": "getWolHost",
                "summary": "Returns a Host",
                "tags": [
                    "Wol"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "host": {
                                            "$ref": "#/components/schemas/wol.wolentry"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wol/wol/sethost/{uuid}": {
            "post": {
                "operationId": "setWolHost",
                "summary": "Updates a Host",
                "tags": [
                    "Wol"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "host": {
                                        "$ref": "#/components/schemas/wol.wolentry"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wol/wol/delhost/{uuid}": {
            "post": {
                "operationId": "deleteWolHost",
                "summary": "Removes a Host",
                "tags": [
                    "Wol"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/zerotier/network/add": {
            "description": "Network",
            "summary": "Create Zerotier Network items",
            "post": {
                "operationId": "addZerotierNetwork",
                "summary": "Add a new Network",
                "tags": [
                    "Zerotier"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "network": {
                                        "$ref": "#/components/schemas/OPNsense.zerotier.networks.network"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/zerotier/network/search": {
            "post": {
                "operationId": "searchZerotierNetwork",
                "summary": "Search a Network",
                "tags": [
                    "Zerotier"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/zerotier/network/get/{uuid}": {
            "get": {
                "operationId": "getZerotierNetwork",
                "summary": "Returns a Network",
                "tags": [
                    "Zerotier"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "network": {
                                            "$ref": "#/components/schemas/OPNsense.zerotier.networks.network"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/zerotier/network/set/{uuid}": {
            "post": {
                "operationId": "setZerotierNetwork",
                "summary": "Updates a Network",
                "tags": [
                    "Zerotier"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "network": {
                                        "$ref": "#/components/schemas/OPNsense.zerotier.networks.network"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/zerotier/network/del/{uuid}": {
            "post": {
                "operationId": "deleteZerotierNetwork",
                "summary": "Removes a Network",
                "tags": [
                    "Zerotier"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/zerotier/network/toggle/{uuid}": {
            "post": {
                "operationId": "toggleZerotierNetwork",
                "summary": "Toggle a Network",
                "tags": [
                    "Zerotier"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/acmeclient/service/{action}": {
            "post": {
                "operationId": "do-AcmeClient-Service",
                "summary": "Perform an action on the AcmeClient service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the AcmeClient service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure",
                                "configtest"
                            ]
                        }
                    }
                ],
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/arpscanner/service/{action}": {
            "post": {
                "operationId": "do-ARPScanner-Service",
                "summary": "Perform an action on the ARPScanner service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the ARPScanner service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "check"
                            ]
                        }
                    }
                ],
                "tags": [
                    "ARPScanner"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/captiveportal/service/{action}": {
            "post": {
                "operationId": "do-CaptivePortal-Service",
                "summary": "Perform an action on the CaptivePortal service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the CaptivePortal service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cicap/service/{action}": {
            "post": {
                "operationId": "do-C-ICAP-Service",
                "summary": "Perform an action on the C-ICAP service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the C-ICAP service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "C-ICAP"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/clamav/service/{action}": {
            "post": {
                "operationId": "do-ClamAV-Service",
                "summary": "Perform an action on the ClamAV service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the ClamAV service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "ClamAV"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/collectd/service/{action}": {
            "post": {
                "operationId": "do-Collectd-Service",
                "summary": "Perform an action on the Collectd service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Collectd service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Collectd"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cron/service/{action}": {
            "post": {
                "operationId": "do-Cron-Service",
                "summary": "Perform an action on the Cron service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Cron service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Cron"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/freeradius/service/{action}": {
            "post": {
                "operationId": "do-FreeRadius-Service",
                "summary": "Perform an action on the FreeRadius service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the FreeRadius service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "FreeRadius"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ftpproxy/service/{action}": {
            "post": {
                "operationId": "do-FTPProxy-Service",
                "summary": "Perform an action on the FTPProxy service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the FTPProxy service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reload"
                            ]
                        }
                    }
                ],
                "tags": [
                    "FTPProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/service/{action}": {
            "post": {
                "operationId": "do-HAProxy-Service",
                "summary": "Perform an action on the HAProxy service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the HAProxy service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure",
                                "configtest"
                            ]
                        }
                    }
                ],
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/helloworld/service/{action}": {
            "post": {
                "operationId": "do-HelloWorld-Service",
                "summary": "Perform an action on the HelloWorld service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the HelloWorld service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "reload",
                                "test"
                            ]
                        }
                    }
                ],
                "tags": [
                    "HelloWorld"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ids/service/{action}": {
            "post": {
                "operationId": "do-IDS-Service",
                "summary": "Perform an action on the IDS service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the IDS service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "IDS"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/iperf/service/{action}": {
            "post": {
                "operationId": "do-IPerf-Service",
                "summary": "Perform an action on the IPerf service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the IPerf service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "IPerf"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lldpd/service/{action}": {
            "post": {
                "operationId": "do-LLDPd-Service",
                "summary": "Perform an action on the LLDPd service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the LLDPd service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "LLDPd"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mdnsrepeater/service/{action}": {
            "post": {
                "operationId": "do-MdnsRepeater-Service",
                "summary": "Perform an action on the MdnsRepeater service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the MdnsRepeater service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart"
                            ]
                        }
                    }
                ],
                "tags": [
                    "MdnsRepeater"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/service/{action}": {
            "post": {
                "operationId": "do-Monit-Service",
                "summary": "Perform an action on the Monit service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Monit service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure",
                                "configtest"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Monit"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodeexporter/service/{action}": {
            "post": {
                "operationId": "do-NodeExporter-Service",
                "summary": "Perform an action on the NodeExporter service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the NodeExporter service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "NodeExporter"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nut/service/{action}": {
            "post": {
                "operationId": "do-Nut-Service",
                "summary": "Perform an action on the Nut service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Nut service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Nut"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openconnect/service/{action}": {
            "post": {
                "operationId": "do-OpenConnect-Service",
                "summary": "Perform an action on the OpenConnect service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the OpenConnect service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "OpenConnect"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/service/{action}": {
            "post": {
                "operationId": "do-Postfix-Service",
                "summary": "Perform an action on the Postfix service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Postfix service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/service/{action}": {
            "post": {
                "operationId": "do-Proxy-Service",
                "summary": "Perform an action on the Proxy service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Proxy service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Proxy"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/service/{action}": {
            "post": {
                "operationId": "do-Quagga-Service",
                "summary": "Perform an action on the Quagga service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Quagga service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/redis/service/{action}": {
            "post": {
                "operationId": "do-Redis-Service",
                "summary": "Perform an action on the Redis service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Redis service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Redis"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/service/{action}": {
            "post": {
                "operationId": "do-Relayd-Service",
                "summary": "Perform an action on the Relayd service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Relayd service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure",
                                "configtest"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Relayd"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/routes/routes/{action}": {
            "post": {
                "operationId": "do-Routes-Service",
                "summary": "Perform an action on the Routes service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Routes service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Routes"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rspamd/service/{action}": {
            "post": {
                "operationId": "do-Rspamd-Service",
                "summary": "Perform an action on the Rspamd service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Rspamd service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Rspamd"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shadowsocks/service/{action}": {
            "post": {
                "operationId": "do-Shadowsocks-Service",
                "summary": "Perform an action on the Shadowsocks service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Shadowsocks service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Shadowsocks"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siproxd/service/{action}": {
            "post": {
                "operationId": "do-Siproxd-Service",
                "summary": "Perform an action on the Siproxd service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Siproxd service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Siproxd"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/telegraf/service/{action}": {
            "post": {
                "operationId": "do-Telegraf-Service",
                "summary": "Perform an action on the Telegraf service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Telegraf service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Telegraf"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tinc/service/{action}": {
            "post": {
                "operationId": "do-Tinc-Service",
                "summary": "Perform an action on the Tinc service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Tinc service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Tinc"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/service/{action}": {
            "post": {
                "operationId": "do-Tor-Service",
                "summary": "Perform an action on the Tor service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Tor service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "///{action}": {
            "post": {
                "operationId": "do-TrafficShaper-Service",
                "summary": "Perform an action on the TrafficShaper service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the TrafficShaper service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "reconfigure",
                                null
                            ]
                        }
                    }
                ],
                "tags": [
                    "TrafficShaper"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/zabbixagent/service/{action}": {
            "post": {
                "operationId": "do-ZabbixAgent-Service",
                "summary": "Perform an action on the ZabbixAgent service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the ZabbixAgent service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "ZabbixAgent"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/zabbixproxy/service/{action}": {
            "post": {
                "operationId": "do-ZabbixProxy-Service",
                "summary": "Perform an action on the ZabbixProxy service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the ZabbixProxy service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "start",
                                "stop",
                                "restart",
                                "reconfigure"
                            ]
                        }
                    }
                ],
                "tags": [
                    "ZabbixProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/zerotier/settings/{action}": {
            "post": {
                "operationId": "do-Zerotier-Service",
                "summary": "Perform an action on the Zerotier service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "description": "The action to perform on the Zerotier service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        }
                    }
                ],
                "tags": [
                    "Zerotier"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "packagename": {
                "in": "path",
                "name": "package",
                "description": "The name of the package or plugin.",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "packageaction": {
                "in": "path",
                "name": "action",
                "description": "The action to perform on the package.",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "install",
                        "reinstall",
                        "remove",
                        "lock",
                        "unlock"
                    ]
                }
            },
            "uuid": {
                "in": "path",
                "name": "uuid",
                "description": "The universally unique identifier.",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "enabled": {
                "in": "path",
                "name": "enabled",
                "description": "Set the state to enabled or disabled.",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "disabled": {
                "in": "path",
                "name": "disabled",
                "description": "Set the state to enabled or disabled. Leave blank for toggle.",
                "required": true,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "voucherprovider": {
                "in": "path",
                "name": "provider",
                "description": "The name of the Voucher Authentication Provider. (Case sensitive)",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "vouchergroup": {
                "in": "path",
                "name": "group",
                "description": "The name of the Voucher Group.",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        },
        "schemas": {
            "OptionList": {
                "type": "object",
                "additionalProperties": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        },
                        "selected": {
                            "type": "integer"
                        }
                    }
                }
            },
            "OPNsense.AcmeClient.accounts.account": {
                "type": "object",
                "properties": {
                    "certificateAuthority": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "email": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    }
                },
                "required": [
                    "certificateAuthority",
                    "enabled",
                    "name"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.AcmeClient.actions.action": {
                "type": "object",
                "properties": {
                    "configd": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "name",
                    "type"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.AcmeClient.certificates.certificate": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "altNames": {
                        "type": "string",
                        "pattern": "/^[^\\s^\\t^;^\\\\^\\/^(^)^\\[^\\]]{1,65535}$/u"
                    },
                    "autoRenewal": {
                        "type": "boolean"
                    },
                    "certRefId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "keyLength": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\s^\\t^,^;^\\\\^\\/^(^)^\\[^\\]]{1,255}$/u"
                    },
                    "ocsp": {
                        "type": "boolean"
                    },
                    "renewInterval": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 60
                    },
                    "restartActions": {
                        "type": "string"
                    },
                    "statusCode": {
                        "type": "integer",
                        "minimum": 100,
                        "maximum": 1000
                    },
                    "statusLastUpdate": {
                        "type": "integer"
                    },
                    "validationMethod": {
                        "type": "string"
                    }
                },
                "required": [
                    "account",
                    "autoRenewal",
                    "enabled",
                    "keyLength",
                    "name",
                    "renewInterval",
                    "validationMethod"
                ],
                "default": [
                    {
                        "autoRenewal": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "ocsp": true
                    },
                    {
                        "renewInterval": 60
                    }
                ]
            },
            "OPNsense.AcmeClient.settings": {
                "type": "object",
                "properties": {
                    "autoRenewal": {
                        "type": "boolean"
                    },
                    "challengePort": {
                        "type": "integer",
                        "minimum": 1024,
                        "maximum": 65535
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "haproxyAclRef": {
                        "type": "string"
                    },
                    "haproxyActionRef": {
                        "type": "string"
                    },
                    "haproxyBackendRef": {
                        "type": "string"
                    },
                    "haproxyIntegration": {
                        "type": "boolean"
                    },
                    "haproxyServerRef": {
                        "type": "string"
                    },
                    "logLevel": {
                        "type": "string"
                    },
                    "restartTimeout": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 86400
                    },
                    "UpdateCron": {
                        "type": "string"
                    }
                },
                "required": [
                    "autoRenewal",
                    "challengePort",
                    "enabled",
                    "environment",
                    "logLevel",
                    "restartTimeout"
                ],
                "default": [
                    {
                        "autoRenewal": true
                    },
                    {
                        "challengePort": 43580
                    },
                    {
                        "enabled": true
                    },
                    {
                        "haproxyIntegration": true
                    },
                    {
                        "restartTimeout": 600
                    }
                ]
            },
            "OPNsense.AcmeClient.validations.validation": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "dns_ad_key": {
                        "type": "string"
                    },
                    "dns_ali_key": {
                        "type": "string"
                    },
                    "dns_ali_secret": {
                        "type": "string"
                    },
                    "dns_autodns_context": {
                        "type": "string"
                    },
                    "dns_autodns_password": {
                        "type": "string"
                    },
                    "dns_autodns_user": {
                        "type": "string"
                    },
                    "dns_aws_id": {
                        "type": "string"
                    },
                    "dns_aws_secret": {
                        "type": "string"
                    },
                    "dns_azuredns_appid": {
                        "type": "string"
                    },
                    "dns_azuredns_clientsecret": {
                        "type": "string"
                    },
                    "dns_azuredns_subscriptionid": {
                        "type": "string"
                    },
                    "dns_azuredns_tenantid": {
                        "type": "string"
                    },
                    "dns_cf_email": {
                        "type": "string"
                    },
                    "dns_cf_key": {
                        "type": "string"
                    },
                    "dns_cloudns_auth_id": {
                        "type": "string"
                    },
                    "dns_cloudns_auth_password": {
                        "type": "string"
                    },
                    "dns_cloudns_sub_auth_id": {
                        "type": "string"
                    },
                    "dns_cx_key": {
                        "type": "string"
                    },
                    "dns_cx_secret": {
                        "type": "string"
                    },
                    "dns_cyon_password": {
                        "type": "string"
                    },
                    "dns_cyon_user": {
                        "type": "string"
                    },
                    "dns_da_insecure": {
                        "type": "boolean"
                    },
                    "dns_da_key": {
                        "type": "string"
                    },
                    "dns_dgon_key": {
                        "type": "string"
                    },
                    "dns_dh_key": {
                        "type": "string"
                    },
                    "dns_dnsimple_token": {
                        "type": "string"
                    },
                    "dns_do_password": {
                        "type": "string"
                    },
                    "dns_do_pid": {
                        "type": "string"
                    },
                    "dns_dp_id": {
                        "type": "string"
                    },
                    "dns_dp_key": {
                        "type": "string"
                    },
                    "dns_duckdns_token": {
                        "type": "string"
                    },
                    "dns_dynu_clientid": {
                        "type": "string"
                    },
                    "dns_dynu_secret": {
                        "type": "string"
                    },
                    "dns_dyn_customer": {
                        "type": "string"
                    },
                    "dns_dyn_password": {
                        "type": "string"
                    },
                    "dns_dyn_user": {
                        "type": "string"
                    },
                    "dns_freedns_password": {
                        "type": "string"
                    },
                    "dns_freedns_user": {
                        "type": "string"
                    },
                    "dns_gandi_livedns_key": {
                        "type": "string"
                    },
                    "dns_gd_key": {
                        "type": "string"
                    },
                    "dns_gd_secret": {
                        "type": "string"
                    },
                    "dns_he_password": {
                        "type": "string"
                    },
                    "dns_he_user": {
                        "type": "string"
                    },
                    "dns_infoblox_credentials": {
                        "type": "string"
                    },
                    "dns_infoblox_server": {
                        "type": "string"
                    },
                    "dns_inws_password": {
                        "type": "string"
                    },
                    "dns_inwx_user": {
                        "type": "string"
                    },
                    "dns_ispconfig_api": {
                        "type": "string"
                    },
                    "dns_ispconfig_insecure": {
                        "type": "boolean"
                    },
                    "dns_ispconfig_password": {
                        "type": "string"
                    },
                    "dns_ispconfig_user": {
                        "type": "string"
                    },
                    "dns_kinghost_password": {
                        "type": "string"
                    },
                    "dns_kinghost_username": {
                        "type": "string"
                    },
                    "dns_knot_key": {
                        "type": "string"
                    },
                    "dns_knot_server": {
                        "type": "string"
                    },
                    "dns_lexicon_provider": {
                        "type": "string"
                    },
                    "dns_lexicon_token": {
                        "type": "string"
                    },
                    "dns_lexicon_user": {
                        "type": "string"
                    },
                    "dns_linode_key": {
                        "type": "string"
                    },
                    "dns_lua_email": {
                        "type": "string"
                    },
                    "dns_lua_key": {
                        "type": "string"
                    },
                    "dns_me_key": {
                        "type": "string"
                    },
                    "dns_me_secret": {
                        "type": "string"
                    },
                    "dns_namecom_token": {
                        "type": "string"
                    },
                    "dns_namecom_user": {
                        "type": "string"
                    },
                    "dns_namesilo_key": {
                        "type": "string"
                    },
                    "dns_nsone_key": {
                        "type": "string"
                    },
                    "dns_nsupdate_key": {
                        "type": "string"
                    },
                    "dns_nsupdate_server": {
                        "type": "string"
                    },
                    "dns_ovh_app_key": {
                        "type": "string"
                    },
                    "dns_ovh_app_secret": {
                        "type": "string"
                    },
                    "dns_ovh_consumer_key": {
                        "type": "string"
                    },
                    "dns_ovh_endpoint": {
                        "type": "string"
                    },
                    "dns_pdns_serverid": {
                        "type": "string"
                    },
                    "dns_pdns_token": {
                        "type": "string"
                    },
                    "dns_pdns_url": {
                        "type": "string"
                    },
                    "dns_servercow_password": {
                        "type": "string"
                    },
                    "dns_servercow_username": {
                        "type": "string"
                    },
                    "dns_service": {
                        "type": "string"
                    },
                    "dns_sleep": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "dns_sl_key": {
                        "type": "string"
                    },
                    "dns_uno_key": {
                        "type": "string"
                    },
                    "dns_uno_user": {
                        "type": "string"
                    },
                    "dns_vscale_key": {
                        "type": "string"
                    },
                    "dns_yandex_token": {
                        "type": "string"
                    },
                    "dns_zilore_key": {
                        "type": "string"
                    },
                    "dns_zm_key": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "http_haproxyFrontends": {
                        "type": "string"
                    },
                    "http_haproxyInject": {
                        "type": "boolean"
                    },
                    "http_opn_autodiscovery": {
                        "type": "boolean"
                    },
                    "http_opn_interface": {
                        "type": "string"
                    },
                    "http_opn_ipaddresses": {
                        "type": "string"
                    },
                    "http_service": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "method": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    }
                },
                "required": [
                    "dns_service",
                    "dns_sleep",
                    "enabled",
                    "http_service",
                    "method",
                    "name"
                ],
                "default": [
                    {
                        "dns_da_insecure": true
                    },
                    {
                        "dns_ispconfig_insecure": true
                    },
                    {
                        "dns_sleep": 120
                    },
                    {
                        "enabled": true
                    },
                    {
                        "http_haproxyInject": true
                    },
                    {
                        "http_opn_autodiscovery": true
                    }
                ]
            },
            "OPNsense.ARPscanner.general": {
                "type": "object",
                "properties": {
                    "Interface": {
                        "type": "string"
                    },
                    "networks": {
                        "type": "string",
                        "pattern": "/^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}(,)?)+$/"
                    }
                },
                "required": [
                    "Interface"
                ],
                "default": [
                    {
                        "Interface": "lan"
                    }
                ]
            },
            "OPNsense.bind": {
                "type": "object",
                "properties": {
                    "dnsbl": {
                        "type": "string"
                    }
                }
            },
            "OPNsense.bind.general": {
                "type": "object",
                "properties": {
                    "dnssecvalidation": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "forwarders": {
                        "type": "string"
                    },
                    "listenv4": {
                        "type": "string"
                    },
                    "listenv6": {
                        "type": "string"
                    },
                    "logsize": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    "maxcachesize": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 99
                    },
                    "port": {
                        "type": "integer"
                    },
                    "recursion": {
                        "type": "string"
                    }
                },
                "required": [
                    "dnssecvalidation",
                    "enabled",
                    "listenv4",
                    "listenv6",
                    "logsize",
                    "maxcachesize",
                    "port"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "logsize": 5
                    },
                    {
                        "maxcachesize": 80
                    }
                ]
            },
            "OPNsense.captiveportal.templates.template": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "pattern": "/[0-9a-zA-Z\\+\\=\\/]{20,}/u"
                    },
                    "fileid": {
                        "type": "string",
                        "pattern": "/[0-9a-zA-Z\\-]{1,255}/u"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "content",
                    "fileid",
                    "name"
                ]
            },
            "OPNsense.captiveportal.zones.zone": {
                "type": "object",
                "properties": {
                    "allowedAddresses": {
                        "type": "string",
                        "pattern": "/^([\\/0-9.,])*/u"
                    },
                    "allowedMACAddresses": {
                        "type": "string",
                        "pattern": "/^((([0-9a-fA-F]{2}:){5}([0-9a-fA-F]{2})([,]){0,1}))*/u"
                    },
                    "authEnforceGroup": {
                        "type": "string"
                    },
                    "authservers": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "concurrentlogins": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "hardtimeout": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 10080
                    },
                    "idletimeout": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 10080
                    },
                    "interfaces": {
                        "type": "string"
                    },
                    "servername": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z.,_\\-]){0,1024}$/u"
                    },
                    "template": {
                        "type": "string"
                    },
                    "transparentHTTPProxy": {
                        "type": "boolean"
                    },
                    "transparentHTTPSProxy": {
                        "type": "boolean"
                    },
                    "zoneid": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 19
                    }
                },
                "required": [
                    "concurrentlogins",
                    "description",
                    "enabled",
                    "hardtimeout",
                    "idletimeout",
                    "interfaces",
                    "transparentHTTPProxy",
                    "transparentHTTPSProxy",
                    "zoneid"
                ],
                "default": [
                    {
                        "concurrentlogins": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "transparentHTTPProxy": true
                    },
                    {
                        "transparentHTTPSProxy": true
                    }
                ]
            },
            "OPNsense.cicap.antivirus": {
                "type": "object",
                "properties": {
                    "allow204responses": {
                        "type": "boolean"
                    },
                    "enable_clamav": {
                        "type": "boolean"
                    },
                    "maxobjectsize": {
                        "type": "string"
                    },
                    "passonerror": {
                        "type": "boolean"
                    },
                    "scanfiletypes": {
                        "type": "string"
                    },
                    "sendpercentdata": {
                        "type": "integer"
                    },
                    "startsendpercentdataafter": {
                        "type": "string"
                    }
                },
                "required": [
                    "allow204responses",
                    "enable_clamav",
                    "maxobjectsize",
                    "passonerror",
                    "scanfiletypes",
                    "sendpercentdata",
                    "startsendpercentdataafter"
                ],
                "default": [
                    {
                        "allow204responses": true
                    },
                    {
                        "enable_clamav": true
                    },
                    {
                        "maxobjectsize": "5M"
                    },
                    {
                        "passonerror": true
                    },
                    {
                        "sendpercentdata": 5
                    },
                    {
                        "startsendpercentdataafter": "2M"
                    }
                ]
            },
            "OPNsense.cicap.general": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "enable_accesslog": {
                        "type": "boolean"
                    },
                    "keepalivetimeout": {
                        "type": "integer"
                    },
                    "listenaddress": {
                        "type": "string"
                    },
                    "localSquid": {
                        "type": "boolean"
                    },
                    "maxkeepaliverequests": {
                        "type": "integer"
                    },
                    "maxrequestsperchild": {
                        "type": "integer"
                    },
                    "maxservers": {
                        "type": "integer"
                    },
                    "maxsparethreads": {
                        "type": "integer"
                    },
                    "minsparethreads": {
                        "type": "integer"
                    },
                    "serveradmin": {
                        "type": "string"
                    },
                    "servername": {
                        "type": "string"
                    },
                    "startservers": {
                        "type": "integer"
                    },
                    "threadsperchild": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer"
                    }
                },
                "required": [
                    "enabled",
                    "enable_accesslog",
                    "keepalivetimeout",
                    "listenaddress",
                    "localSquid",
                    "maxkeepaliverequests",
                    "maxrequestsperchild",
                    "maxservers",
                    "maxsparethreads",
                    "minsparethreads",
                    "startservers",
                    "threadsperchild",
                    "timeout"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "enable_accesslog": true
                    },
                    {
                        "keepalivetimeout": 600
                    },
                    {
                        "localSquid": true
                    },
                    {
                        "maxkeepaliverequests": 100
                    },
                    {
                        "maxservers": 10
                    },
                    {
                        "maxsparethreads": 20
                    },
                    {
                        "minsparethreads": 10
                    },
                    {
                        "startservers": 3
                    },
                    {
                        "threadsperchild": 10
                    },
                    {
                        "timeout": 300
                    }
                ]
            },
            "OPNsense.clamav.general": {
                "type": "object",
                "properties": {
                    "arcblockenc": {
                        "type": "boolean"
                    },
                    "detectbroken": {
                        "type": "boolean"
                    },
                    "disablecache": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enabletcp": {
                        "type": "boolean"
                    },
                    "fc_databasemirror": {
                        "type": "string"
                    },
                    "fc_enabled": {
                        "type": "boolean"
                    },
                    "fc_logverbose": {
                        "type": "boolean"
                    },
                    "fc_timeout": {
                        "type": "string"
                    },
                    "followdirsym": {
                        "type": "boolean"
                    },
                    "followfilesym": {
                        "type": "boolean"
                    },
                    "idletimeout": {
                        "type": "integer"
                    },
                    "maxdirrecursion": {
                        "type": "integer"
                    },
                    "maxfiles": {
                        "type": "integer"
                    },
                    "maxfilesize": {
                        "type": "string"
                    },
                    "maxqueue": {
                        "type": "integer"
                    },
                    "maxrecursion": {
                        "type": "integer"
                    },
                    "maxscansize": {
                        "type": "string"
                    },
                    "maxthreads": {
                        "type": "integer"
                    },
                    "ole2blockmarcros": {
                        "type": "boolean"
                    },
                    "scanarchive": {
                        "type": "boolean"
                    },
                    "scanelf": {
                        "type": "boolean"
                    },
                    "scanhtml": {
                        "type": "boolean"
                    },
                    "scanhwp3": {
                        "type": "boolean"
                    },
                    "scanmailfiles": {
                        "type": "boolean"
                    },
                    "scanole2": {
                        "type": "boolean"
                    },
                    "scanpdf": {
                        "type": "boolean"
                    },
                    "scanpe": {
                        "type": "boolean"
                    },
                    "scanswf": {
                        "type": "boolean"
                    },
                    "scanxmldocs": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enabled",
                    "enabletcp",
                    "fc_databasemirror",
                    "fc_enabled",
                    "fc_timeout"
                ],
                "default": [
                    {
                        "arcblockenc": true
                    },
                    {
                        "detectbroken": true
                    },
                    {
                        "disablecache": "0"
                    },
                    {
                        "enabled": true
                    },
                    {
                        "enabletcp": true
                    },
                    {
                        "fc_databasemirror": "database.clamav.net"
                    },
                    {
                        "fc_enabled": true
                    },
                    {
                        "fc_logverbose": true
                    },
                    {
                        "fc_timeout": "60"
                    },
                    {
                        "followdirsym": true
                    },
                    {
                        "followfilesym": true
                    },
                    {
                        "idletimeout": 30
                    },
                    {
                        "maxdirrecursion": 20
                    },
                    {
                        "maxfiles": 10000
                    },
                    {
                        "maxfilesize": "25M"
                    },
                    {
                        "maxqueue": 100
                    },
                    {
                        "maxrecursion": 16
                    },
                    {
                        "maxscansize": "100M"
                    },
                    {
                        "maxthreads": 10
                    },
                    {
                        "ole2blockmarcros": true
                    },
                    {
                        "scanarchive": true
                    },
                    {
                        "scanelf": true
                    },
                    {
                        "scanhtml": true
                    },
                    {
                        "scanhwp3": true
                    },
                    {
                        "scanmailfiles": true
                    },
                    {
                        "scanole2": true
                    },
                    {
                        "scanpdf": true
                    },
                    {
                        "scanpe": true
                    },
                    {
                        "scanswf": true
                    },
                    {
                        "scanxmldocs": true
                    }
                ]
            },
            "OPNsense.collectd.general": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "fqdnlookup": {
                        "type": "boolean"
                    },
                    "hostname": {
                        "type": "string",
                        "pattern": "/^.{1,64}$/u"
                    },
                    "interval": {
                        "type": "integer"
                    },
                    "p_contextswitch_enable": {
                        "type": "boolean"
                    },
                    "p_cpu_enable": {
                        "type": "boolean"
                    },
                    "p_df_enable": {
                        "type": "boolean"
                    },
                    "p_graphite_enable": {
                        "type": "boolean"
                    },
                    "p_graphite_host": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "p_graphite_node": {
                        "type": "string"
                    },
                    "p_graphite_port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "p_graphite_postfix": {
                        "type": "string"
                    },
                    "p_graphite_prefix": {
                        "type": "string"
                    },
                    "p_interface_enable": {
                        "type": "boolean"
                    },
                    "p_load_enable": {
                        "type": "boolean"
                    },
                    "p_memory_enable": {
                        "type": "boolean"
                    },
                    "p_network_enable": {
                        "type": "boolean"
                    },
                    "p_network_encryption": {
                        "type": "boolean"
                    },
                    "p_network_host": {
                        "type": "string",
                        "pattern": [
                            "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/",
                            "/^([0-9a-zA-Z\\-\\.]){1,1024}$/u"
                        ]
                    },
                    "p_network_password": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-\\!\\$\\%\\/\\(\\)\\+\\#\\=]){1,128}$/u"
                    },
                    "p_network_port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "p_network_username": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,128}$/u"
                    },
                    "p_processes_enable": {
                        "type": "boolean"
                    },
                    "p_uptime_enable": {
                        "type": "boolean"
                    },
                    "p_users_enable": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "fqdnlookup": true
                    },
                    {
                        "interval": 10
                    },
                    {
                        "p_contextswitch_enable": true
                    },
                    {
                        "p_cpu_enable": true
                    },
                    {
                        "p_df_enable": true
                    },
                    {
                        "p_graphite_enable": true
                    },
                    {
                        "p_graphite_postfix": "collectd"
                    },
                    {
                        "p_graphite_prefix": "collectd"
                    },
                    {
                        "p_interface_enable": true
                    },
                    {
                        "p_load_enable": true
                    },
                    {
                        "p_memory_enable": true
                    },
                    {
                        "p_network_enable": true
                    },
                    {
                        "p_network_encryption": true
                    },
                    {
                        "p_processes_enable": true
                    },
                    {
                        "p_uptime_enable": true
                    },
                    {
                        "p_users_enable": true
                    }
                ]
            },
            "OPNsense.cron.jobs.job": {
                "type": "object",
                "properties": {
                    "command": {
                        "type": "string"
                    },
                    "days": {
                        "type": "string",
                        "pattern": "/^(((?:\\*|[1-2][0-9]|0[1-9]|[1-9]|[3][0-1])(,{1}|-{1}|\\/{1}|$))+|L)$/"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "hours": {
                        "type": "string",
                        "pattern": "/^((?:\\*|([1][0-9]|[2][0-3])|0[0-9]|[0-9])(,{1}|-{1}|\\/{1}|$))+$/"
                    },
                    "minutes": {
                        "type": "string",
                        "pattern": "/^((?:\\*|[1-5][0-9]|0[0-9]|[0-9])(,{1}|-{1}|\\/{1}|$))+$/"
                    },
                    "months": {
                        "type": "string",
                        "pattern": "/^(((?:\\*|[1][0-2]|0[1-9]|[1-9]|JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(,{1}|-{1}|\\/{1}|$))+)$/"
                    },
                    "origin": {
                        "type": "string",
                        "pattern": "/^([a-z,A-Z,1-9]){0,30}$/"
                    },
                    "parameters": {
                        "type": "string",
                        "pattern": "/^([^;|`]){1,255}$/"
                    },
                    "weekdays": {
                        "type": "string",
                        "pattern": "/^(((?:\\*|[0-7])(,{1}|-{1}|\\/{1}|$))+)$/"
                    },
                    "who": {
                        "type": "string"
                    }
                },
                "required": [
                    "command",
                    "days",
                    "description",
                    "enabled",
                    "hours",
                    "minutes",
                    "months",
                    "origin",
                    "weekdays",
                    "who"
                ],
                "default": [
                    {
                        "days": "*"
                    },
                    {
                        "enabled": true
                    },
                    {
                        "hours": "0"
                    },
                    {
                        "minutes": "0"
                    },
                    {
                        "months": "*"
                    },
                    {
                        "origin": "cron"
                    },
                    {
                        "weekdays": "*"
                    },
                    {
                        "who": "root"
                    }
                ]
            },
            "OPNsense.Firewall.Alias.aliases.alias": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": ""
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": ""
                    },
                    "proto": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatefreq": {
                        "type": "integer"
                    }
                },
                "required": [
                    "enabled",
                    "name",
                    "type"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.freeradius.client.clients.client": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "name",
                    "secret"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.freeradius.eap": {
                "type": "object",
                "properties": {
                    "ca": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "crl": {
                        "type": "string"
                    },
                    "default_eap_type": {
                        "type": "string"
                    },
                    "enable_client_cert": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "default_eap_type",
                    "enable_client_cert"
                ],
                "default": [
                    {
                        "enable_client_cert": true
                    }
                ]
            },
            "OPNsense.freeradius.general": {
                "type": "object",
                "properties": {
                    "chillispot": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "ldap_enabled": {
                        "type": "boolean"
                    },
                    "log_authbadpass": {
                        "type": "boolean"
                    },
                    "log_authentication_request": {
                        "type": "boolean"
                    },
                    "log_authgoodpass": {
                        "type": "boolean"
                    },
                    "log_destination": {
                        "type": "string"
                    },
                    "mikrotik": {
                        "type": "boolean"
                    },
                    "sessionlimit": {
                        "type": "boolean"
                    },
                    "sqlite": {
                        "type": "boolean"
                    },
                    "vlanassign": {
                        "type": "boolean"
                    },
                    "wispr": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enabled",
                    "log_destination"
                ],
                "default": [
                    {
                        "chillispot": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "ldap_enabled": true
                    },
                    {
                        "log_authbadpass": true
                    },
                    {
                        "log_authentication_request": true
                    },
                    {
                        "log_authgoodpass": true
                    },
                    {
                        "mikrotik": true
                    },
                    {
                        "sessionlimit": true
                    },
                    {
                        "sqlite": true
                    },
                    {
                        "vlanassign": true
                    },
                    {
                        "wispr": true
                    }
                ]
            },
            "OPNsense.freeradius.ldap": {
                "type": "object",
                "properties": {
                    "base_dn": {
                        "type": "string"
                    },
                    "group_filter": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "server": {
                        "type": "string"
                    },
                    "user_filter": {
                        "type": "string"
                    }
                },
                "required": [
                    "protocol"
                ],
                "default": [
                    {
                        "base_dn": "dc=example,dc=domain,dc=com"
                    },
                    {
                        "group_filter": "(objectClass=posixGroup)"
                    },
                    {
                        "user_filter": "(uid=%{%{Stripped-User-Name}:-%{User-Name}})"
                    }
                ]
            },
            "OPNsense.freeradius.user.users.user": {
                "type": "object",
                "properties": {
                    "chillispot_bw_max_down": {
                        "type": "integer"
                    },
                    "chillispot_bw_max_up": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "ip": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "ip6": {
                        "type": "string"
                    },
                    "mikrotik_vlan_id_number": {
                        "type": "integer"
                    },
                    "mikrotik_vlan_id_type": {
                        "type": "integer"
                    },
                    "password": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-\\!\\$\\%\\/\\(\\)\\+\\#\\=]){1,128}$/u"
                    },
                    "route": {
                        "type": "string",
                        "pattern": "/^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2},)*(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2})$/"
                    },
                    "sessionlimit_max_session_limit": {
                        "type": "integer"
                    },
                    "subnet": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "username": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,128}$/u"
                    },
                    "vlan": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4096
                    },
                    "wispr_bw_max_down": {
                        "type": "integer"
                    },
                    "wispr_bw_max_up": {
                        "type": "integer"
                    },
                    "wispr_bw_min_down": {
                        "type": "integer"
                    },
                    "wispr_bw_min_up": {
                        "type": "integer"
                    }
                },
                "required": [
                    "enabled",
                    "password",
                    "username"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.ftpproxies.ftpproxy": {
                "type": "object",
                "properties": {
                    "debuglevel": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 7
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "idletimeout": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 86400
                    },
                    "listenaddress": {
                        "type": "string",
                        "pattern": "/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-4]|2[0-5][0-9]|[01]?[0-9][0-9]?)$/"
                    },
                    "listenport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "logconnections": {
                        "type": "boolean"
                    },
                    "maxsessions": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 500
                    },
                    "reverseaddress": {
                        "type": "string",
                        "pattern": "/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-4]|2[0-5][0-9]|[01]?[0-9][0-9]?)$/"
                    },
                    "reverseport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "rewritesourceport": {
                        "type": "boolean"
                    },
                    "sourceaddress": {
                        "type": "string",
                        "pattern": "/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-4]|2[0-5][0-9]|[01]?[0-9][0-9]?)$/"
                    }
                },
                "required": [
                    "enabled",
                    "listenaddress",
                    "listenport"
                ],
                "default": [
                    {
                        "debuglevel": 5
                    },
                    {
                        "enabled": true
                    },
                    {
                        "idletimeout": 86400
                    },
                    {
                        "listenaddress": "127.0.0.1"
                    },
                    {
                        "listenport": 8021
                    },
                    {
                        "logconnections": true
                    },
                    {
                        "maxsessions": 100
                    },
                    {
                        "reverseport": 21
                    },
                    {
                        "rewritesourceport": true
                    }
                ]
            },
            "OPNsense.HAProxy.acls.acl": {
                "type": "object",
                "properties": {
                    "custom_acl": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "expression": {
                        "type": "string"
                    },
                    "hdr": {
                        "type": "string",
                        "pattern": "/^.{1,1024}$/u"
                    },
                    "hdr_beg": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "hdr_end": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "hdr_reg": {
                        "type": "string",
                        "pattern": "/^.{1,1024}$/u"
                    },
                    "hdr_sub": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\t^,^;^\\.^\\[^\\]^\\{^\\}]{1,255}$/u"
                    },
                    "nbsrv": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 500000
                    },
                    "nbsrv_backend": {
                        "type": "string"
                    },
                    "negate": {
                        "type": "boolean"
                    },
                    "path": {
                        "type": "string",
                        "pattern": "/^.{1,1024}$/u"
                    },
                    "path_beg": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "path_dir": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "path_end": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "path_reg": {
                        "type": "string",
                        "pattern": "/^.{1,1024}$/u"
                    },
                    "path_sub": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "queryBackend": {
                        "type": "string"
                    },
                    "src": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "src_bytes_in_rate": {
                        "type": "integer"
                    },
                    "src_bytes_in_rate_comparison": {
                        "type": "string"
                    },
                    "src_bytes_out_rate": {
                        "type": "integer"
                    },
                    "src_bytes_out_rate_comparison": {
                        "type": "string"
                    },
                    "src_conn_cnt": {
                        "type": "integer"
                    },
                    "src_conn_cnt_comparison": {
                        "type": "string"
                    },
                    "src_conn_cur": {
                        "type": "integer"
                    },
                    "src_conn_cur_comparison": {
                        "type": "string"
                    },
                    "src_conn_rate": {
                        "type": "integer"
                    },
                    "src_conn_rate_comparison": {
                        "type": "string"
                    },
                    "src_http_err_cnt": {
                        "type": "integer"
                    },
                    "src_http_err_cnt_comparison": {
                        "type": "string"
                    },
                    "src_http_err_rate": {
                        "type": "integer"
                    },
                    "src_http_err_rate_comparison": {
                        "type": "string"
                    },
                    "src_http_req_cnt": {
                        "type": "integer"
                    },
                    "src_http_req_cnt_comparison": {
                        "type": "string"
                    },
                    "src_http_req_rate": {
                        "type": "integer"
                    },
                    "src_http_req_rate_comparison": {
                        "type": "string"
                    },
                    "src_kbytes_in": {
                        "type": "integer"
                    },
                    "src_kbytes_in_comparison": {
                        "type": "string"
                    },
                    "src_kbytes_out": {
                        "type": "integer"
                    },
                    "src_kbytes_out_comparison": {
                        "type": "string"
                    },
                    "src_port": {
                        "type": "integer"
                    },
                    "src_port_comparison": {
                        "type": "string"
                    },
                    "src_sess_cnt": {
                        "type": "integer"
                    },
                    "src_sess_cnt_comparison": {
                        "type": "string"
                    },
                    "src_sess_rate": {
                        "type": "integer"
                    },
                    "src_sess_rate_comparison": {
                        "type": "string"
                    },
                    "ssl_c_ca_commonname": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "ssl_c_verify_code": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 500000
                    },
                    "ssl_sni": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "ssl_sni_beg": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "ssl_sni_end": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "ssl_sni_reg": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "ssl_sni_sub": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "urlparam": {
                        "type": "string"
                    },
                    "url_param": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "url_param_value": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "expression",
                    "name",
                    "negate"
                ],
                "default": [
                    {
                        "negate": true
                    }
                ]
            },
            "OPNsense.HAProxy.actions.action": {
                "type": "object",
                "properties": {
                    "actionFind": {
                        "type": "string"
                    },
                    "actionName": {
                        "type": "string"
                    },
                    "actionValue": {
                        "type": "string"
                    },
                    "custom": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "http_request_add_header_content": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_add_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_auth": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_del_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_lua": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_redirect": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_replace_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_replace_header_regex": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_replace_value_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_replace_value_regex": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_set_header_content": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_set_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_set_path": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_use_service": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_add_header_content": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_add_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_del_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_lua": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_replace_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_replace_header_regex": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_replace_value_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_replace_value_regex": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_set_header_content": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_set_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_set_status_code": {
                        "type": "integer",
                        "minimum": 100,
                        "maximum": 999
                    },
                    "http_response_set_status_reason": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "linkedAcls": {
                        "type": "string"
                    },
                    "map_use_backend_default": {
                        "type": "string"
                    },
                    "map_use_backend_file": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\t^,^;^\\.^\\[^\\]^\\{^\\}]{1,255}$/u"
                    },
                    "Operator": {
                        "type": "string"
                    },
                    "tcp_request_content_lua": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "tcp_request_content_use_service": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "tcp_response_content_lua": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "testType": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "useBackend": {
                        "type": "string"
                    },
                    "useServer": {
                        "type": "string"
                    },
                    "use_backend": {
                        "type": "string"
                    },
                    "use_server": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "testType",
                    "type"
                ]
            },
            "OPNsense.HAProxy.backends.backend": {
                "type": "object",
                "properties": {
                    "algorithm": {
                        "type": "string"
                    },
                    "checkDownInterval": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "checkInterval": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "customOptions": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "healthCheck": {
                        "type": "string"
                    },
                    "healthCheckEnabled": {
                        "type": "boolean"
                    },
                    "healthCheckFall": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100
                    },
                    "healthCheckLogStatus": {
                        "type": "boolean"
                    },
                    "healthCheckRise": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100
                    },
                    "id": {
                        "type": "string"
                    },
                    "linkedActions": {
                        "type": "string"
                    },
                    "linkedErrorfiles": {
                        "type": "string"
                    },
                    "linkedServers": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._]){1,255}$/u"
                    },
                    "persistence": {
                        "type": "string"
                    },
                    "persistence_cookiemode": {
                        "type": "string"
                    },
                    "persistence_cookiename": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){1,1024}$/u"
                    },
                    "persistence_stripquotes": {
                        "type": "boolean"
                    },
                    "proxyProtocol": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string",
                        "pattern": "/^((([0-9a-zA-Z._\\-\\*:]+)))*/u"
                    },
                    "stickiness_bytesInRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_bytesOutRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_connRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_cookielength": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "stickiness_cookiename": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){1,1024}$/u"
                    },
                    "stickiness_dataTypes": {
                        "type": "string"
                    },
                    "stickiness_expire": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,5}(?:ms|s|m|h|d)?)/u"
                    },
                    "stickiness_httpErrRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_httpReqRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_pattern": {
                        "type": "string"
                    },
                    "stickiness_sessRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_size": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,5}[k|m|g]{1})*/u"
                    },
                    "tuning_defaultserver": {
                        "type": "string"
                    },
                    "tuning_httpreuse": {
                        "type": "string"
                    },
                    "tuning_noport": {
                        "type": "boolean"
                    },
                    "tuning_retries": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100
                    },
                    "tuning_timeoutCheck": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "tuning_timeoutConnect": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "tuning_timeoutServer": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    }
                },
                "required": [
                    "algorithm",
                    "enabled",
                    "healthCheckEnabled",
                    "mode",
                    "name",
                    "persistence_cookiemode",
                    "persistence_stripquotes",
                    "stickiness_expire",
                    "stickiness_size",
                    "tuning_noport"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "healthCheckEnabled": true
                    },
                    {
                        "healthCheckLogStatus": true
                    },
                    {
                        "persistence_cookiename": "SRVCOOKIE"
                    },
                    {
                        "persistence_stripquotes": true
                    },
                    {
                        "stickiness_bytesInRatePeriod": "1m"
                    },
                    {
                        "stickiness_bytesOutRatePeriod": "1m"
                    },
                    {
                        "stickiness_connRatePeriod": "10s"
                    },
                    {
                        "stickiness_expire": "30m"
                    },
                    {
                        "stickiness_httpErrRatePeriod": "10s"
                    },
                    {
                        "stickiness_httpReqRatePeriod": "10s"
                    },
                    {
                        "stickiness_sessRatePeriod": "10s"
                    },
                    {
                        "stickiness_size": "50k"
                    },
                    {
                        "tuning_noport": true
                    }
                ]
            },
            "OPNsense.HAProxy.errorfiles.errorfile": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\t^,^;^\\.^\\[^\\]^\\{^\\}]{1,255}$/u"
                    }
                },
                "required": [
                    "code",
                    "content",
                    "id",
                    "name"
                ]
            },
            "OPNsense.HAProxy.frontends.frontend": {
                "type": "object",
                "properties": {
                    "bind": {
                        "type": "string",
                        "pattern": "/^((([0-9a-zA-Z._\\-\\*:]+:[0-9]+(-[0-9]+)?)([,]){0,1}))*/u"
                    },
                    "bindOptions": {
                        "type": "string"
                    },
                    "connectionBehaviour": {
                        "type": "string"
                    },
                    "customOptions": {
                        "type": "string"
                    },
                    "defaultBackend": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "forwardFor": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "linkedActions": {
                        "type": "string"
                    },
                    "linkedErrorfiles": {
                        "type": "string"
                    },
                    "logging_detailedLog": {
                        "type": "boolean"
                    },
                    "logging_dontLogNormal": {
                        "type": "boolean"
                    },
                    "logging_dontLogNull": {
                        "type": "boolean"
                    },
                    "logging_logSeparateErrors": {
                        "type": "boolean"
                    },
                    "logging_socketStats": {
                        "type": "boolean"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._]){1,255}$/u"
                    },
                    "ssl_advancedEnabled": {
                        "type": "boolean"
                    },
                    "ssl_bindOptions": {
                        "type": "string"
                    },
                    "ssl_certificates": {
                        "type": "string"
                    },
                    "ssl_cipherList": {
                        "type": "string"
                    },
                    "ssl_customOptions": {
                        "type": "string"
                    },
                    "ssl_default_certificate": {
                        "type": "string"
                    },
                    "ssl_enabled": {
                        "type": "boolean"
                    },
                    "ssl_hstsEnabled": {
                        "type": "boolean"
                    },
                    "ssl_hstsIncludeSubDomains": {
                        "type": "boolean"
                    },
                    "ssl_hstsMaxAge": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1000000000
                    },
                    "ssl_hstsPreload": {
                        "type": "boolean"
                    },
                    "stickiness_bytesInRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_bytesOutRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_connRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_counter": {
                        "type": "boolean"
                    },
                    "stickiness_counter_key": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._]){1,32}$/u"
                    },
                    "stickiness_dataTypes": {
                        "type": "string"
                    },
                    "stickiness_expire": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,5}(?:ms|s|m|h|d)?)/u"
                    },
                    "stickiness_httpErrRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_httpReqRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_length": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 16384
                    },
                    "stickiness_pattern": {
                        "type": "string"
                    },
                    "stickiness_sessRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_size": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,5}[k|m|g]{1})*/u"
                    },
                    "tuning_maxConnections": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 500000
                    },
                    "tuning_timeoutClient": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "tuning_timeoutHttpKeepAlive": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "tuning_timeoutHttpReq": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    }
                },
                "required": [
                    "bind",
                    "connectionBehaviour",
                    "enabled",
                    "forwardFor",
                    "logging_detailedLog",
                    "logging_dontLogNormal",
                    "logging_dontLogNull",
                    "logging_logSeparateErrors",
                    "logging_socketStats",
                    "mode",
                    "name",
                    "ssl_advancedEnabled",
                    "ssl_enabled",
                    "ssl_hstsEnabled",
                    "ssl_hstsMaxAge",
                    "stickiness_expire",
                    "stickiness_size"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "forwardFor": true
                    },
                    {
                        "logging_detailedLog": true
                    },
                    {
                        "logging_dontLogNormal": true
                    },
                    {
                        "logging_dontLogNull": true
                    },
                    {
                        "logging_logSeparateErrors": true
                    },
                    {
                        "logging_socketStats": true
                    },
                    {
                        "ssl_advancedEnabled": true
                    },
                    {
                        "ssl_cipherList": "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
                    },
                    {
                        "ssl_enabled": true
                    },
                    {
                        "ssl_hstsEnabled": true
                    },
                    {
                        "ssl_hstsIncludeSubDomains": true
                    },
                    {
                        "ssl_hstsMaxAge": 15768000
                    },
                    {
                        "ssl_hstsPreload": true
                    },
                    {
                        "stickiness_bytesInRatePeriod": "1m"
                    },
                    {
                        "stickiness_bytesOutRatePeriod": "1m"
                    },
                    {
                        "stickiness_connRatePeriod": "10s"
                    },
                    {
                        "stickiness_counter": true
                    },
                    {
                        "stickiness_counter_key": "src"
                    },
                    {
                        "stickiness_expire": "30m"
                    },
                    {
                        "stickiness_httpErrRatePeriod": "10s"
                    },
                    {
                        "stickiness_httpReqRatePeriod": "10s"
                    },
                    {
                        "stickiness_sessRatePeriod": "10s"
                    },
                    {
                        "stickiness_size": "50k"
                    }
                ]
            },
            "OPNsense.HAProxy.general": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "gracefulStop": {
                        "type": "boolean"
                    },
                    "seamlessReload": {
                        "type": "boolean"
                    },
                    "showIntro": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enabled",
                    "gracefulStop",
                    "seamlessReload"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "gracefulStop": true
                    },
                    {
                        "seamlessReload": true
                    },
                    {
                        "showIntro": true
                    }
                ]
            },
            "OPNsense.HAProxy.general.defaults": {
                "type": "object",
                "properties": {
                    "customOptions": {
                        "type": "string"
                    },
                    "maxConnections": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 500000
                    },
                    "redispatch": {
                        "type": "string"
                    },
                    "retries": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100
                    },
                    "timeoutCheck": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "timeoutClient": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "timeoutConnect": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "timeoutServer": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    }
                },
                "required": [
                    "retries"
                ],
                "default": [
                    {
                        "retries": 3
                    },
                    {
                        "timeoutClient": "30s"
                    },
                    {
                        "timeoutConnect": "30s"
                    },
                    {
                        "timeoutServer": "30s"
                    }
                ]
            },
            "OPNsense.HAProxy.general.logging": {
                "type": "object",
                "properties": {
                    "facility": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){0,1024}$/u"
                    },
                    "length": {
                        "type": "integer",
                        "minimum": 64,
                        "maximum": 65535
                    },
                    "level": {
                        "type": "string"
                    }
                },
                "required": [
                    "facility",
                    "host"
                ],
                "default": [
                    {
                        "host": "127.0.0.1"
                    }
                ]
            },
            "OPNsense.HAProxy.general.peers": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "listen1": {
                        "type": "string"
                    },
                    "listen2": {
                        "type": "string"
                    },
                    "name1": {
                        "type": "string"
                    },
                    "name2": {
                        "type": "string"
                    },
                    "port1": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "port2": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "port1": 1024
                    },
                    {
                        "port2": 1024
                    }
                ]
            },
            "OPNsense.HAProxy.general.stats": {
                "type": "object",
                "properties": {
                    "authEnabled": {
                        "type": "boolean"
                    },
                    "customOptions": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1024,
                        "maximum": 65535
                    },
                    "remoteBind": {
                        "type": "string",
                        "pattern": "/^((([0-9a-zA-Z._\\-]+:[0-9a-zA-Z._\\-]+)([,]){0,1}))*/u"
                    },
                    "remoteEnabled": {
                        "type": "boolean"
                    },
                    "users": {
                        "type": "string",
                        "pattern": "/^((([0-9a-zA-Z._\\-]+:[0-9a-zA-Z._\\-]+)([,]){0,1}))*/u"
                    }
                },
                "required": [
                    "port"
                ],
                "default": [
                    {
                        "authEnabled": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "port": 8822
                    },
                    {
                        "remoteEnabled": true
                    }
                ]
            },
            "OPNsense.HAProxy.general.tuning": {
                "type": "object",
                "properties": {
                    "bufferSize": {
                        "type": "integer",
                        "minimum": 1024,
                        "maximum": 1048576
                    },
                    "checkBufferSize": {
                        "type": "integer",
                        "minimum": 1024,
                        "maximum": 1048576
                    },
                    "customOptions": {
                        "type": "string"
                    },
                    "luaMaxMem": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 1024
                    },
                    "maxConnections": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 500000
                    },
                    "maxDHSize": {
                        "type": "integer",
                        "minimum": 1024,
                        "maximum": 16384
                    },
                    "nbproc": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 128
                    },
                    "root": {
                        "type": "boolean"
                    },
                    "spreadChecks": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 50
                    },
                    "sslServerVerify": {
                        "type": "string"
                    },
                    "ssl_bindOptions": {
                        "type": "string"
                    },
                    "ssl_cipherList": {
                        "type": "string"
                    },
                    "ssl_defaultsEnabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "maxDHSize",
                    "nbproc",
                    "root",
                    "spreadChecks",
                    "sslServerVerify",
                    "ssl_defaultsEnabled"
                ],
                "default": [
                    {
                        "bufferSize": 16384
                    },
                    {
                        "checkBufferSize": 16384
                    },
                    {
                        "maxDHSize": 1024
                    },
                    {
                        "nbproc": 1
                    },
                    {
                        "root": true
                    },
                    {
                        "ssl_cipherList": "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
                    },
                    {
                        "ssl_defaultsEnabled": true
                    }
                ]
            },
            "OPNsense.HAProxy.healthchecks.healthcheck": {
                "type": "object",
                "properties": {
                    "agentPort": {
                        "type": "integer"
                    },
                    "agent_port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "checkport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "dbUser": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "esmtp_domain": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,255}$/u"
                    },
                    "http_expression": {
                        "type": "string"
                    },
                    "http_expressionEnabled": {
                        "type": "boolean"
                    },
                    "http_host": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,255}$/u"
                    },
                    "http_method": {
                        "type": "string"
                    },
                    "http_negate": {
                        "type": "boolean"
                    },
                    "http_uri": {
                        "type": "string",
                        "pattern": "/^(.*){1,255}$/u"
                    },
                    "http_value": {
                        "type": "string"
                    },
                    "http_version": {
                        "type": "string"
                    },
                    "interval": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "mysql_post41": {
                        "type": "boolean"
                    },
                    "mysql_user": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,255}$/u"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\t^,^;^\\.^\\[^\\]^\\{^\\}]{1,255}$/u"
                    },
                    "pgsql_user": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,255}$/u"
                    },
                    "smtpDomain": {
                        "type": "string"
                    },
                    "smtp_domain": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,255}$/u"
                    },
                    "tcp_enabled": {
                        "type": "boolean"
                    },
                    "tcp_matchType": {
                        "type": "string"
                    },
                    "tcp_matchValue": {
                        "type": "string"
                    },
                    "tcp_negate": {
                        "type": "boolean"
                    },
                    "tcp_sendValue": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "interval",
                    "name",
                    "type"
                ],
                "default": [
                    {
                        "http_expressionEnabled": true
                    },
                    {
                        "http_host": "localhost"
                    },
                    {
                        "http_negate": true
                    },
                    {
                        "http_uri": "/"
                    },
                    {
                        "interval": "2s"
                    },
                    {
                        "mysql_post41": true
                    },
                    {
                        "tcp_enabled": true
                    },
                    {
                        "tcp_negate": true
                    }
                ]
            },
            "OPNsense.HAProxy.luas.lua": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\t^,^;^\\.^\\[^\\]^\\{^\\}]{1,255}$/u"
                    }
                },
                "required": [
                    "content",
                    "enabled",
                    "id",
                    "name"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.HAProxy.mapfiles.mapfile": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\t^,^;^\\.^\\[^\\]^\\{^\\}]{1,255}$/u"
                    }
                },
                "required": [
                    "content",
                    "id",
                    "name"
                ]
            },
            "OPNsense.HAProxy.servers.server": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){0,1024}$/u"
                    },
                    "advanced": {
                        "type": "string"
                    },
                    "checkDownInterval": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "checkInterval": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "checkport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "id": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._]){1,255}$/u"
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "source": {
                        "type": "string",
                        "pattern": "/^((([0-9a-zA-Z._\\-\\*:]+)))*/u"
                    },
                    "ssl": {
                        "type": "boolean"
                    },
                    "sslCA": {
                        "type": "string"
                    },
                    "sslClientCertificate": {
                        "type": "string"
                    },
                    "sslCRL": {
                        "type": "string"
                    },
                    "sslVerify": {
                        "type": "boolean"
                    },
                    "weight": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 256
                    }
                },
                "required": [
                    "address",
                    "id",
                    "mode",
                    "name",
                    "ssl",
                    "sslVerify"
                ],
                "default": [
                    {
                        "ssl": true
                    },
                    {
                        "sslVerify": true
                    }
                ]
            },
            "OPNsense.helloworld.general": {
                "type": "object",
                "properties": {
                    "Description": {
                        "type": "string"
                    },
                    "Enabled": {
                        "type": "boolean"
                    },
                    "FromEmail": {
                        "type": "string"
                    },
                    "SMTPHost": {
                        "type": "string"
                    },
                    "ToEmail": {
                        "type": "string"
                    }
                },
                "required": [
                    "Description",
                    "Enabled",
                    "FromEmail",
                    "SMTPHost",
                    "ToEmail"
                ],
                "default": [
                    {
                        "Enabled": true
                    },
                    {
                        "FromEmail": "sample@example.com"
                    }
                ]
            },
            "OPNsense.IDS.files.file": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "filename": {
                        "type": "string",
                        "pattern": "/^([\\t\\n\\v\\f\\r\\- 0-9a-zA-Z.,_\\x{00A0}-\\x{FFFF}]){1,255}$/u"
                    },
                    "filter": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "filename"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.IDS.fileTags.tag": {
                "type": "object",
                "properties": {
                    "property": {
                        "type": "string",
                        "pattern": "/^([\\t\\n\\v\\f\\r\\- 0-9a-zA-Z.,_\\x{00A0}-\\x{FFFF}]){1,255}$/u"
                    },
                    "value": {
                        "type": "string",
                        "pattern": "/^([\\t\\n\\v\\f\\r\\- 0-9a-zA-Z.,_\\x{00A0}-\\x{FFFF}]){1,255}$/u"
                    }
                },
                "required": [
                    "property"
                ]
            },
            "OPNsense.IDS.general": {
                "type": "object",
                "properties": {
                    "AlertLogrotate": {
                        "type": "string"
                    },
                    "AlertSaveLogs": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    "defaultPacketSize": {
                        "type": "integer",
                        "minimum": 82,
                        "maximum": 65535
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "homenet": {
                        "type": "string"
                    },
                    "interfaces": {
                        "type": "string"
                    },
                    "ips": {
                        "type": "boolean"
                    },
                    "LogPayload": {
                        "type": "boolean"
                    },
                    "MPMAlgo": {
                        "type": "string"
                    },
                    "promisc": {
                        "type": "boolean"
                    },
                    "syslog": {
                        "type": "boolean"
                    },
                    "UpdateCron": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "interfaces",
                    "ips",
                    "LogPayload",
                    "promisc",
                    "syslog"
                ],
                "default": [
                    {
                        "AlertSaveLogs": 4
                    },
                    {
                        "enabled": true
                    },
                    {
                        "ips": true
                    },
                    {
                        "LogPayload": true
                    },
                    {
                        "promisc": true
                    },
                    {
                        "syslog": true
                    }
                ]
            },
            "OPNsense.IDS.rules.rule": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "sid": {
                        "type": "integer"
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "sid"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.IDS.userDefinedRules.rule": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "fingerprint": {
                        "type": "string",
                        "pattern": "/^([0-9a-fA-F:]){59,59}$/u"
                    },
                    "geoip": {
                        "type": "string"
                    },
                    "geoip_direction": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    }
                },
                "required": [
                    "action",
                    "description",
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.Iperf3": {
                "type": "object",
                "properties": {
                    "Interface": {
                        "type": "string"
                    }
                },
                "required": [
                    "Interface"
                ]
            },
            "OPNsense.lldpd.general": {
                "type": "object",
                "properties": {
                    "cdp": {
                        "type": "boolean"
                    },
                    "edp": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "fdp": {
                        "type": "boolean"
                    },
                    "Interface": {
                        "type": "string"
                    },
                    "sonmp": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "cdp",
                    "edp",
                    "enabled",
                    "fdp",
                    "sonmp"
                ],
                "default": [
                    {
                        "cdp": true
                    },
                    {
                        "edp": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "fdp": true
                    },
                    {
                        "sonmp": true
                    }
                ]
            },
            "OPNsense.MDNSRepeater": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "interfaces": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "interfaces"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.Netflow.capture": {
                "type": "object",
                "properties": {
                    "egress_only": {
                        "type": "string"
                    },
                    "interfaces": {
                        "type": "string"
                    },
                    "targets": {
                        "type": "string",
                        "pattern": "/^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?):(6553[0-5]|655[0-2][0-9]|65[0-4](\\d){2}|6[0-4](\\d){3}|[1-5](\\d){4}|[1-9](\\d){0,3})([,]){0,1})*/u"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "version"
                ]
            },
            "OPNsense.Netflow.collect": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enable"
                ],
                "default": [
                    {
                        "enable": true
                    }
                ]
            },
            "OPNsense.netsnmp.general": {
                "type": "object",
                "properties": {
                    "community": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "listen": {
                        "type": "string"
                    },
                    "syscontact": {
                        "type": "string"
                    },
                    "syslocation": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.netsnmp.user.users.user": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "enckey": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-\\!\\$\\%\\/\\(\\)\\+\\#\\=]){8,64}$/u"
                    },
                    "password": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-\\!\\$\\%\\/\\(\\)\\+\\#\\=]){8,64}$/u"
                    },
                    "readwrite": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,64}$/u"
                    }
                },
                "required": [
                    "enabled",
                    "enckey",
                    "password",
                    "readwrite",
                    "username"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "readwrite": true
                    }
                ]
            },
            "OPNsense.Nginx.ban": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "time": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "required": [
                    "ip"
                ]
            },
            "OPNsense.Nginx.cache_path": {
                "type": "object",
                "properties": {
                    "inactive": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "max_size": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "path": {
                        "type": "string",
                        "pattern": "/\\/(srv|var|tmp|mnt)[a-z0-9\\-\\._\\:\\,\\/]+[a-z0-9\\-\\._\\:\\,]+/i"
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 10
                    },
                    "use_temp_path": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "path",
                    "use_temp_path"
                ],
                "default": [
                    {
                        "size": 10
                    },
                    {
                        "use_temp_path": true
                    }
                ]
            },
            "OPNsense.Nginx.credential": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "password",
                    "username"
                ]
            },
            "OPNsense.Nginx.custom_policy": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "naxsi_rules": {
                        "type": "string"
                    },
                    "Operator": {
                        "type": "string"
                    },
                    "value": {
                        "type": "integer"
                    }
                },
                "required": [
                    "action",
                    "name",
                    "naxsi_rules",
                    "Operator",
                    "value"
                ]
            },
            "OPNsense.Nginx.general": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.Nginx.http": {
                "type": "object",
                "properties": {
                    "default_type": {
                        "type": "string"
                    },
                    "keepalive_timeout": {
                        "type": "integer"
                    },
                    "sendfile": {
                        "type": "boolean"
                    }
                },
                "default": [
                    {
                        "keepalive_timeout": 60
                    },
                    {
                        "sendfile": true
                    }
                ]
            },
            "OPNsense.Nginx.http_rewrite": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "pattern": "/^[^\" \\t]+$/i"
                    },
                    "destination": {
                        "type": "string",
                        "pattern": "/^[^\" \\t]+$/i"
                    },
                    "flag": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "destination",
                    "source"
                ]
            },
            "OPNsense.Nginx.http_server": {
                "type": "object",
                "properties": {
                    "access_log_format": {
                        "type": "string"
                    },
                    "block_nonpublic_data": {
                        "type": "boolean"
                    },
                    "ca": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "charset": {
                        "type": "string"
                    },
                    "enable_acme_support": {
                        "type": "boolean"
                    },
                    "https_only": {
                        "type": "boolean"
                    },
                    "limit_request_connections": {
                        "type": "string"
                    },
                    "listen_https_port": {
                        "type": "integer"
                    },
                    "listen_http_port": {
                        "type": "integer"
                    },
                    "locations": {
                        "type": "string"
                    },
                    "naxsi_extensive_log": {
                        "type": "boolean"
                    },
                    "rewrites": {
                        "type": "string"
                    },
                    "root": {
                        "type": "string"
                    },
                    "security_header": {
                        "type": "string"
                    },
                    "sendfile": {
                        "type": "boolean"
                    },
                    "servername": {
                        "type": "string"
                    },
                    "verify_client": {
                        "type": "string"
                    }
                },
                "required": [
                    "access_log_format",
                    "block_nonpublic_data",
                    "enable_acme_support",
                    "https_only",
                    "naxsi_extensive_log",
                    "sendfile",
                    "servername",
                    "verify_client"
                ],
                "default": [
                    {
                        "block_nonpublic_data": true
                    },
                    {
                        "enable_acme_support": true
                    },
                    {
                        "https_only": true
                    },
                    {
                        "naxsi_extensive_log": true
                    },
                    {
                        "sendfile": true
                    }
                ]
            },
            "OPNsense.Nginx.limit_request_connection": {
                "type": "object",
                "properties": {
                    "burst": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "connection_count": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "description": {
                        "type": "string"
                    },
                    "limit_zone": {
                        "type": "string"
                    },
                    "nodelay": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "connection_count",
                    "description",
                    "limit_zone",
                    "nodelay"
                ],
                "default": [
                    {
                        "burst": 20
                    },
                    {
                        "connection_count": 5
                    },
                    {
                        "nodelay": true
                    }
                ]
            },
            "OPNsense.Nginx.limit_zone": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "rate_unit": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "description",
                    "key",
                    "rate",
                    "rate_unit",
                    "size"
                ],
                "default": [
                    {
                        "rate": 20
                    },
                    {
                        "size": 10
                    }
                ]
            },
            "OPNsense.Nginx.location": {
                "type": "object",
                "properties": {
                    "advanced_acl": {
                        "type": "boolean"
                    },
                    "authbasic": {
                        "type": "string"
                    },
                    "authbasicuserfile": {
                        "type": "string"
                    },
                    "autoindex": {
                        "type": "boolean"
                    },
                    "cache_background_update": {
                        "type": "boolean"
                    },
                    "cache_lock": {
                        "type": "boolean"
                    },
                    "cache_methods": {
                        "type": "string"
                    },
                    "cache_min_uses": {
                        "type": "integer"
                    },
                    "cache_path": {
                        "type": "string"
                    },
                    "cache_revalidate": {
                        "type": "boolean"
                    },
                    "cache_use_stale": {
                        "type": "string"
                    },
                    "custom_policy": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enable_learning_mode": {
                        "type": "boolean"
                    },
                    "enable_secrules": {
                        "type": "boolean"
                    },
                    "force_https": {
                        "type": "string"
                    },
                    "honeypot": {
                        "type": "boolean"
                    },
                    "http2_push_preload": {
                        "type": "boolean"
                    },
                    "index": {
                        "type": "string"
                    },
                    "limit_request_connections": {
                        "type": "string"
                    },
                    "matchtype": {
                        "type": "string"
                    },
                    "path_prefix": {
                        "type": "string",
                        "pattern": "/^[^\" \\t]+$/"
                    },
                    "php_enable": {
                        "type": "boolean"
                    },
                    "php_override_scriptname": {
                        "type": "string"
                    },
                    "rewrites": {
                        "type": "string"
                    },
                    "root": {
                        "type": "string"
                    },
                    "sqli_block_score": {
                        "type": "integer"
                    },
                    "upstream": {
                        "type": "string"
                    },
                    "urlpattern": {
                        "type": "string"
                    },
                    "websocket": {
                        "type": "boolean"
                    },
                    "xss_block_score": {
                        "type": "integer"
                    }
                },
                "required": [
                    "advanced_acl",
                    "cache_background_update",
                    "cache_lock",
                    "cache_min_uses",
                    "cache_revalidate",
                    "description",
                    "enable_learning_mode",
                    "enable_secrules",
                    "honeypot",
                    "http2_push_preload",
                    "php_enable",
                    "urlpattern",
                    "websocket"
                ],
                "default": [
                    {
                        "advanced_acl": true
                    },
                    {
                        "cache_background_update": true
                    },
                    {
                        "cache_lock": true
                    },
                    {
                        "cache_min_uses": 1
                    },
                    {
                        "cache_revalidate": true
                    },
                    {
                        "enable_learning_mode": true
                    },
                    {
                        "enable_secrules": true
                    },
                    {
                        "honeypot": true
                    },
                    {
                        "http2_push_preload": true
                    },
                    {
                        "php_enable": true
                    },
                    {
                        "websocket": true
                    }
                ]
            },
            "OPNsense.Nginx.naxsi_rule": {
                "type": "object",
                "properties": {
                    "args": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dollar_args_var": {
                        "type": "string"
                    },
                    "dollar_body_var": {
                        "type": "string"
                    },
                    "dollar_headers_var": {
                        "type": "string"
                    },
                    "dollar_url": {
                        "type": "string"
                    },
                    "file_extension": {
                        "type": "boolean"
                    },
                    "headers": {
                        "type": "boolean"
                    },
                    "identifier": {
                        "type": "integer"
                    },
                    "match_type": {
                        "type": "string"
                    },
                    "match_value": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "name": {
                        "type": "boolean"
                    },
                    "negate": {
                        "type": "boolean"
                    },
                    "raw_body": {
                        "type": "boolean"
                    },
                    "regex": {
                        "type": "boolean"
                    },
                    "ruletype": {
                        "type": "string"
                    },
                    "score": {
                        "type": "integer"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "args",
                    "description",
                    "file_extension",
                    "headers",
                    "identifier",
                    "match_type",
                    "match_value",
                    "message",
                    "name",
                    "negate",
                    "raw_body",
                    "regex",
                    "ruletype",
                    "score"
                ],
                "default": [
                    {
                        "score": 8
                    }
                ]
            },
            "OPNsense.Nginx.security_header": {
                "type": "object",
                "properties": {
                    "content_type_options": {
                        "type": "boolean"
                    },
                    "csp_default_src_blob": {
                        "type": "boolean"
                    },
                    "csp_default_src_data_urls": {
                        "type": "boolean"
                    },
                    "csp_default_src_enabled": {
                        "type": "boolean"
                    },
                    "csp_default_src_eval": {
                        "type": "boolean"
                    },
                    "csp_default_src_filesystem": {
                        "type": "boolean"
                    },
                    "csp_default_src_http_urls": {
                        "type": "string"
                    },
                    "csp_default_src_inline": {
                        "type": "boolean"
                    },
                    "csp_default_src_mediastream": {
                        "type": "boolean"
                    },
                    "csp_default_src_none": {
                        "type": "boolean"
                    },
                    "csp_default_src_self": {
                        "type": "boolean"
                    },
                    "csp_font_src_blob": {
                        "type": "boolean"
                    },
                    "csp_font_src_data_urls": {
                        "type": "boolean"
                    },
                    "csp_font_src_enabled": {
                        "type": "boolean"
                    },
                    "csp_font_src_eval": {
                        "type": "boolean"
                    },
                    "csp_font_src_filesystem": {
                        "type": "boolean"
                    },
                    "csp_font_src_http_urls": {
                        "type": "string"
                    },
                    "csp_font_src_inline": {
                        "type": "boolean"
                    },
                    "csp_font_src_mediastream": {
                        "type": "boolean"
                    },
                    "csp_font_src_none": {
                        "type": "boolean"
                    },
                    "csp_font_src_self": {
                        "type": "boolean"
                    },
                    "csp_form_action_blob": {
                        "type": "boolean"
                    },
                    "csp_form_action_data_urls": {
                        "type": "boolean"
                    },
                    "csp_form_action_enabled": {
                        "type": "boolean"
                    },
                    "csp_form_action_eval": {
                        "type": "boolean"
                    },
                    "csp_form_action_filesystem": {
                        "type": "boolean"
                    },
                    "csp_form_action_http_urls": {
                        "type": "string"
                    },
                    "csp_form_action_inline": {
                        "type": "boolean"
                    },
                    "csp_form_action_mediastream": {
                        "type": "boolean"
                    },
                    "csp_form_action_none": {
                        "type": "boolean"
                    },
                    "csp_form_action_self": {
                        "type": "boolean"
                    },
                    "csp_img_src_blob": {
                        "type": "boolean"
                    },
                    "csp_img_src_data_urls": {
                        "type": "boolean"
                    },
                    "csp_img_src_enabled": {
                        "type": "boolean"
                    },
                    "csp_img_src_eval": {
                        "type": "boolean"
                    },
                    "csp_img_src_filesystem": {
                        "type": "boolean"
                    },
                    "csp_img_src_http_urls": {
                        "type": "string"
                    },
                    "csp_img_src_inline": {
                        "type": "boolean"
                    },
                    "csp_img_src_mediastream": {
                        "type": "boolean"
                    },
                    "csp_img_src_none": {
                        "type": "boolean"
                    },
                    "csp_img_src_self": {
                        "type": "boolean"
                    },
                    "csp_media_src_blob": {
                        "type": "boolean"
                    },
                    "csp_media_src_data_urls": {
                        "type": "boolean"
                    },
                    "csp_media_src_enabled": {
                        "type": "boolean"
                    },
                    "csp_media_src_eval": {
                        "type": "boolean"
                    },
                    "csp_media_src_filesystem": {
                        "type": "boolean"
                    },
                    "csp_media_src_http_urls": {
                        "type": "string"
                    },
                    "csp_media_src_inline": {
                        "type": "boolean"
                    },
                    "csp_media_src_mediastream": {
                        "type": "boolean"
                    },
                    "csp_media_src_none": {
                        "type": "boolean"
                    },
                    "csp_media_src_self": {
                        "type": "boolean"
                    },
                    "csp_report_only": {
                        "type": "boolean"
                    },
                    "csp_script_src_blob": {
                        "type": "boolean"
                    },
                    "csp_script_src_data_urls": {
                        "type": "boolean"
                    },
                    "csp_script_src_enabled": {
                        "type": "boolean"
                    },
                    "csp_script_src_eval": {
                        "type": "boolean"
                    },
                    "csp_script_src_filesystem": {
                        "type": "boolean"
                    },
                    "csp_script_src_http_urls": {
                        "type": "string"
                    },
                    "csp_script_src_inline": {
                        "type": "boolean"
                    },
                    "csp_script_src_mediastream": {
                        "type": "boolean"
                    },
                    "csp_script_src_none": {
                        "type": "boolean"
                    },
                    "csp_script_src_self": {
                        "type": "boolean"
                    },
                    "csp_style_src_blob": {
                        "type": "boolean"
                    },
                    "csp_style_src_data_urls": {
                        "type": "boolean"
                    },
                    "csp_style_src_enabled": {
                        "type": "boolean"
                    },
                    "csp_style_src_eval": {
                        "type": "boolean"
                    },
                    "csp_style_src_filesystem": {
                        "type": "boolean"
                    },
                    "csp_style_src_http_urls": {
                        "type": "string"
                    },
                    "csp_style_src_inline": {
                        "type": "boolean"
                    },
                    "csp_style_src_mediastream": {
                        "type": "boolean"
                    },
                    "csp_style_src_none": {
                        "type": "boolean"
                    },
                    "csp_style_src_self": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enable_csp": {
                        "type": "boolean"
                    },
                    "hpkp_include_subdomains": {
                        "type": "boolean"
                    },
                    "hpkp_keys": {
                        "type": "string",
                        "pattern": "/[a-z0-9\\+\\/=]+(,[a-z0-9\\+\\/=]+)*/i"
                    },
                    "hpkp_report_only": {
                        "type": "boolean"
                    },
                    "hpkp_time": {
                        "type": "integer"
                    },
                    "referrer": {
                        "type": "string"
                    },
                    "strict_transport_security_include_subdomains": {
                        "type": "boolean"
                    },
                    "strict_transport_security_time": {
                        "type": "integer"
                    },
                    "xssprotection": {
                        "type": "string"
                    }
                },
                "required": [
                    "content_type_options",
                    "csp_default_src_blob",
                    "csp_default_src_data_urls",
                    "csp_default_src_enabled",
                    "csp_default_src_eval",
                    "csp_default_src_filesystem",
                    "csp_default_src_inline",
                    "csp_default_src_mediastream",
                    "csp_default_src_none",
                    "csp_default_src_self",
                    "csp_font_src_blob",
                    "csp_font_src_data_urls",
                    "csp_font_src_enabled",
                    "csp_font_src_eval",
                    "csp_font_src_filesystem",
                    "csp_font_src_inline",
                    "csp_font_src_mediastream",
                    "csp_font_src_none",
                    "csp_font_src_self",
                    "csp_form_action_blob",
                    "csp_form_action_data_urls",
                    "csp_form_action_enabled",
                    "csp_form_action_eval",
                    "csp_form_action_filesystem",
                    "csp_form_action_inline",
                    "csp_form_action_mediastream",
                    "csp_form_action_none",
                    "csp_form_action_self",
                    "csp_img_src_blob",
                    "csp_img_src_data_urls",
                    "csp_img_src_enabled",
                    "csp_img_src_eval",
                    "csp_img_src_filesystem",
                    "csp_img_src_inline",
                    "csp_img_src_mediastream",
                    "csp_img_src_none",
                    "csp_img_src_self",
                    "csp_media_src_blob",
                    "csp_media_src_data_urls",
                    "csp_media_src_enabled",
                    "csp_media_src_eval",
                    "csp_media_src_filesystem",
                    "csp_media_src_inline",
                    "csp_media_src_mediastream",
                    "csp_media_src_none",
                    "csp_media_src_self",
                    "csp_report_only",
                    "csp_script_src_blob",
                    "csp_script_src_data_urls",
                    "csp_script_src_enabled",
                    "csp_script_src_eval",
                    "csp_script_src_filesystem",
                    "csp_script_src_inline",
                    "csp_script_src_mediastream",
                    "csp_script_src_none",
                    "csp_script_src_self",
                    "csp_style_src_blob",
                    "csp_style_src_data_urls",
                    "csp_style_src_enabled",
                    "csp_style_src_eval",
                    "csp_style_src_filesystem",
                    "csp_style_src_inline",
                    "csp_style_src_mediastream",
                    "csp_style_src_none",
                    "csp_style_src_self",
                    "description",
                    "enable_csp",
                    "hpkp_include_subdomains",
                    "hpkp_report_only",
                    "strict_transport_security_include_subdomains"
                ],
                "default": [
                    {
                        "csp_default_src_blob": true
                    },
                    {
                        "csp_default_src_data_urls": true
                    },
                    {
                        "csp_default_src_enabled": true
                    },
                    {
                        "csp_default_src_eval": true
                    },
                    {
                        "csp_default_src_filesystem": true
                    },
                    {
                        "csp_default_src_inline": true
                    },
                    {
                        "csp_default_src_mediastream": true
                    },
                    {
                        "csp_default_src_none": true
                    },
                    {
                        "csp_default_src_self": true
                    },
                    {
                        "csp_font_src_blob": true
                    },
                    {
                        "csp_font_src_data_urls": true
                    },
                    {
                        "csp_font_src_enabled": true
                    },
                    {
                        "csp_font_src_eval": true
                    },
                    {
                        "csp_font_src_filesystem": true
                    },
                    {
                        "csp_font_src_inline": true
                    },
                    {
                        "csp_font_src_mediastream": true
                    },
                    {
                        "csp_font_src_none": true
                    },
                    {
                        "csp_font_src_self": true
                    },
                    {
                        "csp_form_action_blob": true
                    },
                    {
                        "csp_form_action_data_urls": true
                    },
                    {
                        "csp_form_action_enabled": true
                    },
                    {
                        "csp_form_action_eval": true
                    },
                    {
                        "csp_form_action_filesystem": true
                    },
                    {
                        "csp_form_action_inline": true
                    },
                    {
                        "csp_form_action_mediastream": true
                    },
                    {
                        "csp_form_action_none": true
                    },
                    {
                        "csp_form_action_self": true
                    },
                    {
                        "csp_img_src_blob": true
                    },
                    {
                        "csp_img_src_data_urls": true
                    },
                    {
                        "csp_img_src_enabled": true
                    },
                    {
                        "csp_img_src_eval": true
                    },
                    {
                        "csp_img_src_filesystem": true
                    },
                    {
                        "csp_img_src_inline": true
                    },
                    {
                        "csp_img_src_mediastream": true
                    },
                    {
                        "csp_img_src_none": true
                    },
                    {
                        "csp_img_src_self": true
                    },
                    {
                        "csp_media_src_blob": true
                    },
                    {
                        "csp_media_src_data_urls": true
                    },
                    {
                        "csp_media_src_enabled": true
                    },
                    {
                        "csp_media_src_eval": true
                    },
                    {
                        "csp_media_src_filesystem": true
                    },
                    {
                        "csp_media_src_inline": true
                    },
                    {
                        "csp_media_src_mediastream": true
                    },
                    {
                        "csp_media_src_none": true
                    },
                    {
                        "csp_media_src_self": true
                    },
                    {
                        "csp_report_only": true
                    },
                    {
                        "csp_script_src_blob": true
                    },
                    {
                        "csp_script_src_data_urls": true
                    },
                    {
                        "csp_script_src_enabled": true
                    },
                    {
                        "csp_script_src_eval": true
                    },
                    {
                        "csp_script_src_filesystem": true
                    },
                    {
                        "csp_script_src_inline": true
                    },
                    {
                        "csp_script_src_mediastream": true
                    },
                    {
                        "csp_script_src_none": true
                    },
                    {
                        "csp_script_src_self": true
                    },
                    {
                        "csp_style_src_blob": true
                    },
                    {
                        "csp_style_src_data_urls": true
                    },
                    {
                        "csp_style_src_enabled": true
                    },
                    {
                        "csp_style_src_eval": true
                    },
                    {
                        "csp_style_src_filesystem": true
                    },
                    {
                        "csp_style_src_inline": true
                    },
                    {
                        "csp_style_src_mediastream": true
                    },
                    {
                        "csp_style_src_none": true
                    },
                    {
                        "csp_style_src_self": true
                    },
                    {
                        "strict_transport_security_include_subdomains": true
                    }
                ]
            },
            "OPNsense.Nginx.upstream": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "serverentries": {
                        "type": "string"
                    },
                    "store": {
                        "type": "boolean"
                    },
                    "tls_client_certificate": {
                        "type": "string"
                    },
                    "tls_enable": {
                        "type": "boolean"
                    },
                    "tls_name_override": {
                        "type": "string"
                    },
                    "tls_protocol_versions": {
                        "type": "string"
                    },
                    "tls_session_reuse": {
                        "type": "boolean"
                    },
                    "tls_trusted_certificate": {
                        "type": "string"
                    },
                    "tls_verify": {
                        "type": "boolean"
                    },
                    "tls_verify_depth": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "description",
                    "serverentries",
                    "store",
                    "tls_enable",
                    "tls_session_reuse",
                    "tls_verify"
                ],
                "default": [
                    {
                        "store": true
                    },
                    {
                        "tls_enable": true
                    },
                    {
                        "tls_session_reuse": true
                    },
                    {
                        "tls_verify": true
                    },
                    {
                        "tls_verify_depth": 1
                    }
                ]
            },
            "OPNsense.Nginx.upstream_server": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "fail_timeout": {
                        "type": "integer"
                    },
                    "max_conns": {
                        "type": "integer"
                    },
                    "max_fails": {
                        "type": "integer"
                    },
                    "no_use": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "server": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "port",
                    "priority",
                    "server"
                ]
            },
            "OPNsense.Nginx.userlist": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "users": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "users"
                ]
            },
            "OPNsense.Nginx.webgui": {
                "type": "object",
                "properties": {
                    "limitnetworks": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "limitnetworks"
                ],
                "default": [
                    {
                        "limitnetworks": true
                    }
                ]
            },
            "OPNsense.NodeExporter": {
                "type": "object",
                "properties": {
                    "cpu": {
                        "type": "boolean"
                    },
                    "devstat": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "exec": {
                        "type": "boolean"
                    },
                    "filesystem": {
                        "type": "boolean"
                    },
                    "interrupts": {
                        "type": "boolean"
                    },
                    "listenaddress": {
                        "type": "string",
                        "pattern": "/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-4]|2[0-5][0-9]|[01]?[0-9][0-9]?)$/"
                    },
                    "listenport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "loadavg": {
                        "type": "boolean"
                    },
                    "meminfo": {
                        "type": "boolean"
                    },
                    "netdev": {
                        "type": "boolean"
                    },
                    "ntp": {
                        "type": "boolean"
                    },
                    "time": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enabled",
                    "listenaddress",
                    "listenport"
                ],
                "default": [
                    {
                        "cpu": true
                    },
                    {
                        "devstat": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "exec": true
                    },
                    {
                        "filesystem": true
                    },
                    {
                        "interrupts": true
                    },
                    {
                        "listenaddress": "0.0.0.0"
                    },
                    {
                        "listenport": 9100
                    },
                    {
                        "loadavg": true
                    },
                    {
                        "meminfo": true
                    },
                    {
                        "netdev": true
                    },
                    {
                        "ntp": true
                    },
                    {
                        "time": true
                    }
                ]
            },
            "OPNsense.ntopng.general": {
                "type": "object",
                "properties": {
                    "dnsmode": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "httpport": {
                        "type": "integer"
                    },
                    "Interface": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "httpport"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.Nut.account": {
                "type": "object",
                "properties": {
                    "admin_password": {
                        "type": "string"
                    },
                    "mon_password": {
                        "type": "string"
                    }
                },
                "required": [
                    "admin_password",
                    "mon_password"
                ],
                "default": [
                    {
                        "admin_password": "Password"
                    },
                    {
                        "mon_password": "Password"
                    }
                ]
            },
            "OPNsense.Nut.apcsmart": {
                "type": "object",
                "properties": {
                    "args": {
                        "type": "string"
                    },
                    "enable": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enable"
                ],
                "default": [
                    {
                        "args": "port=auto"
                    },
                    {
                        "enable": true
                    }
                ]
            },
            "OPNsense.Nut.general": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "enable",
                    "mode",
                    "name"
                ],
                "default": [
                    {
                        "enable": true
                    },
                    {
                        "name": "UPSName"
                    }
                ]
            },
            "OPNsense.Nut.netclient": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "enable": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "enable"
                ],
                "default": [
                    {
                        "enable": true
                    }
                ]
            },
            "OPNsense.Nut.usbhid": {
                "type": "object",
                "properties": {
                    "args": {
                        "type": "string"
                    },
                    "enable": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enable"
                ],
                "default": [
                    {
                        "args": "port=auto"
                    },
                    {
                        "enable": true
                    }
                ]
            },
            "OPNsense.openconnect.general": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "hash": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "server": {
                        "type": "string",
                        "pattern": "/\\S*/"
                    },
                    "servercert": {
                        "type": "string",
                        "pattern": "/^[a-z0-9]{40,64}$/"
                    },
                    "user": {
                        "type": "string",
                        "pattern": "/^[a-z0-9.\\@_-]{1,32}$/"
                    }
                },
                "required": [
                    "enabled",
                    "hash",
                    "password",
                    "server",
                    "user"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "password": "password"
                    },
                    {
                        "server": "server"
                    },
                    {
                        "user": "user"
                    }
                ]
            },
            "OPNsense.postfix.antispam": {
                "type": "object",
                "properties": {
                    "enable_rspamd": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enable_rspamd"
                ],
                "default": [
                    {
                        "enable_rspamd": true
                    }
                ]
            },
            "OPNsense.postfix.domain.domains.domain": {
                "type": "object",
                "properties": {
                    "destination": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z.:\\-\\[\\]]){1,64}$/u"
                    },
                    "domainname": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "domainname",
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.postfix.general": {
                "type": "object",
                "properties": {
                    "banner": {
                        "type": "string"
                    },
                    "bind_address": {
                        "type": "string"
                    },
                    "bind_address6": {
                        "type": "string"
                    },
                    "ca": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "disable_ssl": {
                        "type": "boolean"
                    },
                    "disable_weak_ciphers": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enforce_recipient_check": {
                        "type": "boolean"
                    },
                    "inet_interfaces": {
                        "type": "string"
                    },
                    "inet_port": {
                        "type": "integer"
                    },
                    "message_size_limit": {
                        "type": "integer"
                    },
                    "mydomain": {
                        "type": "string"
                    },
                    "myhostname": {
                        "type": "string"
                    },
                    "mynetworks": {
                        "type": "string"
                    },
                    "myorigin": {
                        "type": "string"
                    },
                    "permit_mynetworks": {
                        "type": "boolean"
                    },
                    "permit_sasl_authenticated": {
                        "type": "boolean"
                    },
                    "permit_tls_clientcerts": {
                        "type": "boolean"
                    },
                    "reject_non_fqdn_recipient": {
                        "type": "boolean"
                    },
                    "reject_non_fqdn_sender": {
                        "type": "boolean"
                    },
                    "reject_unauth_destination": {
                        "type": "boolean"
                    },
                    "reject_unauth_pipelining": {
                        "type": "boolean"
                    },
                    "reject_unknown_recipient_domain": {
                        "type": "boolean"
                    },
                    "reject_unknown_sender_domain": {
                        "type": "boolean"
                    },
                    "relayhost": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z.:\\-\\[\\]]){1,64}$/u"
                    },
                    "smtpauth_enabled": {
                        "type": "boolean"
                    },
                    "smtpauth_password": {
                        "type": "string"
                    },
                    "smtpauth_user": {
                        "type": "string"
                    },
                    "smtpclient_security": {
                        "type": "string"
                    }
                },
                "required": [
                    "disable_ssl",
                    "disable_weak_ciphers",
                    "enabled",
                    "enforce_recipient_check",
                    "inet_interfaces",
                    "inet_port",
                    "message_size_limit",
                    "mynetworks",
                    "permit_mynetworks",
                    "permit_sasl_authenticated",
                    "permit_tls_clientcerts",
                    "reject_non_fqdn_recipient",
                    "reject_non_fqdn_sender",
                    "reject_unauth_destination",
                    "reject_unauth_pipelining",
                    "reject_unknown_recipient_domain",
                    "reject_unknown_sender_domain",
                    "smtpauth_enabled",
                    "smtpclient_security"
                ],
                "default": [
                    {
                        "disable_ssl": true
                    },
                    {
                        "disable_weak_ciphers": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "enforce_recipient_check": true
                    },
                    {
                        "inet_interfaces": "all"
                    },
                    {
                        "message_size_limit": 51200000
                    },
                    {
                        "permit_mynetworks": true
                    },
                    {
                        "permit_sasl_authenticated": true
                    },
                    {
                        "permit_tls_clientcerts": true
                    },
                    {
                        "reject_non_fqdn_recipient": true
                    },
                    {
                        "reject_non_fqdn_sender": true
                    },
                    {
                        "reject_unauth_destination": true
                    },
                    {
                        "reject_unauth_pipelining": true
                    },
                    {
                        "reject_unknown_recipient_domain": true
                    },
                    {
                        "reject_unknown_sender_domain": true
                    },
                    {
                        "smtpauth_enabled": true
                    }
                ]
            },
            "OPNsense.postfix.recipient.recipients.recipient": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "action",
                    "address",
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.postfix.sender.senders.sender": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "action",
                    "address",
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.proxy.forward": {
                "type": "object",
                "properties": {
                    "addACLforInterfaceSubnets": {
                        "type": "boolean"
                    },
                    "ftpInterfaces": {
                        "type": "string"
                    },
                    "ftpPort": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "ftpTransparentMode": {
                        "type": "boolean"
                    },
                    "interfaces": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "snmp_enable": {
                        "type": "boolean"
                    },
                    "snmp_password": {
                        "type": "string"
                    },
                    "snmp_port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "sslbump": {
                        "type": "boolean"
                    },
                    "sslbumpport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "sslcertificate": {
                        "type": "string"
                    },
                    "sslcrtd_children": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 32
                    },
                    "sslnobumpsites": {
                        "type": "string",
                        "pattern": "/^([a-zA-Z0-9\\.:\\[\\]\\s\\-]*?,)*([a-zA-Z0-9\\.:\\[\\]\\s\\-]*)$/"
                    },
                    "sslurlonly": {
                        "type": "boolean"
                    },
                    "ssl_crtd_storage_max_size": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "transparentMode": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "addACLforInterfaceSubnets",
                    "ftpPort",
                    "ftpTransparentMode",
                    "port",
                    "snmp_enable",
                    "snmp_password",
                    "snmp_port",
                    "sslbump",
                    "sslbumpport",
                    "sslcrtd_children",
                    "sslurlonly",
                    "ssl_crtd_storage_max_size",
                    "transparentMode"
                ],
                "default": [
                    {
                        "addACLforInterfaceSubnets": true
                    },
                    {
                        "ftpPort": 2121
                    },
                    {
                        "ftpTransparentMode": true
                    },
                    {
                        "port": 3128
                    },
                    {
                        "snmp_enable": true
                    },
                    {
                        "snmp_password": "public"
                    },
                    {
                        "snmp_port": 3401
                    },
                    {
                        "sslbump": true
                    },
                    {
                        "sslbumpport": 3129
                    },
                    {
                        "sslcrtd_children": 5
                    },
                    {
                        "sslurlonly": true
                    },
                    {
                        "ssl_crtd_storage_max_size": 4
                    },
                    {
                        "transparentMode": true
                    }
                ]
            },
            "OPNsense.proxy.forward.acl": {
                "type": "object",
                "properties": {
                    "allowedSubnets": {
                        "type": "string",
                        "pattern": "/^([\\/0-9a-fA-F.:,])*/u"
                    },
                    "bannedHosts": {
                        "type": "string",
                        "pattern": "/^([\\/0-9a-fA-F.:,])*/u"
                    },
                    "blackList": {
                        "type": "string"
                    },
                    "browser": {
                        "type": "string"
                    },
                    "mimeType": {
                        "type": "string"
                    },
                    "safePorts": {
                        "type": "string",
                        "pattern": "/^([ \\-0-9a-zA-Z:,])*/u"
                    },
                    "sslPorts": {
                        "type": "string",
                        "pattern": "/^([ \\-0-9a-zA-Z:,])*/u"
                    },
                    "unrestricted": {
                        "type": "string",
                        "pattern": "/^([\\/0-9a-fA-F.:,])*/u"
                    },
                    "whiteList": {
                        "type": "string"
                    }
                }
            },
            "OPNsense.proxy.forward.acl.remoteACLs": {
                "type": "object",
                "properties": {
                    "UpdateCron": {
                        "type": "string"
                    }
                }
            },
            "OPNsense.proxy.forward.acl.remoteACLs.blacklists.blacklist": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "filename": {
                        "type": "string",
                        "pattern": "/^[a-zA-Z0-9]{1,245}\\.?[a-zA-z0-9]{1,10}$/"
                    },
                    "filter": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "sslNoVerify": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "enabled",
                    "filename",
                    "sslNoVerify",
                    "url"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "sslNoVerify": true
                    }
                ]
            },
            "OPNsense.proxy.forward.authentication": {
                "type": "object",
                "properties": {
                    "children": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "credentialsttl": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "method": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string",
                        "pattern": "/^([\\t\\n\\v\\f\\r 0-9a-zA-Z.,_\\x{00A0}-\\x{FFFF}]){0,255}$/u"
                    }
                },
                "default": [
                    {
                        "children": 5
                    },
                    {
                        "credentialsttl": 2
                    },
                    {
                        "realm": "OPNsense proxy authentication"
                    }
                ]
            },
            "OPNsense.proxy.forward.icap": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean"
                    },
                    "EnablePreview": {
                        "type": "boolean"
                    },
                    "EncodeUsername": {
                        "type": "boolean"
                    },
                    "exclude": {
                        "type": "string"
                    },
                    "OptionsTTL": {
                        "type": "integer"
                    },
                    "PreviewSize": {
                        "type": "integer"
                    },
                    "RequestURL": {
                        "type": "string"
                    },
                    "ResponseURL": {
                        "type": "string"
                    },
                    "SendClientIP": {
                        "type": "boolean"
                    },
                    "SendUsername": {
                        "type": "boolean"
                    },
                    "UsernameHeader": {
                        "type": "string",
                        "pattern": "/^([a-zA-Z-]+)$/"
                    }
                },
                "required": [
                    "enable",
                    "EnablePreview",
                    "EncodeUsername",
                    "OptionsTTL",
                    "PreviewSize",
                    "SendClientIP",
                    "SendUsername",
                    "UsernameHeader"
                ],
                "default": [
                    {
                        "enable": true
                    },
                    {
                        "EnablePreview": true
                    },
                    {
                        "EncodeUsername": true
                    },
                    {
                        "OptionsTTL": 60
                    },
                    {
                        "PreviewSize": 1024
                    },
                    {
                        "RequestURL": "icap://[::1]:1344/avscan"
                    },
                    {
                        "ResponseURL": "icap://[::1]:1344/avscan"
                    },
                    {
                        "SendClientIP": true
                    },
                    {
                        "SendUsername": true
                    },
                    {
                        "UsernameHeader": "X-Username"
                    }
                ]
            },
            "OPNsense.proxy.general": {
                "type": "object",
                "properties": {
                    "alternateDNSservers": {
                        "type": "string",
                        "pattern": "/^([\\/0-9a-fA-F.:,])*/u"
                    },
                    "dnsV4First": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "forwardedForHandling": {
                        "type": "string"
                    },
                    "icpPort": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "suppressVersion": {
                        "type": "boolean"
                    },
                    "uriWhitespaceHandling": {
                        "type": "string"
                    },
                    "useViaHeader": {
                        "type": "boolean"
                    },
                    "VisibleEmail": {
                        "type": "string"
                    },
                    "VisibleHostname": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){0,1024}$/u"
                    }
                },
                "required": [
                    "dnsV4First",
                    "enabled"
                ],
                "default": [
                    {
                        "dnsV4First": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "suppressVersion": true
                    },
                    {
                        "useViaHeader": true
                    },
                    {
                        "VisibleEmail": "admin@localhost.local"
                    }
                ]
            },
            "OPNsense.proxy.general.cache.local": {
                "type": "object",
                "properties": {
                    "cache_linux_packages": {
                        "type": "boolean"
                    },
                    "cache_mem": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "cache_windows_updates": {
                        "type": "boolean"
                    },
                    "directory": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "l1": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "l2": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "maximum_object_size": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 99999
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "cache_linux_packages",
                    "cache_mem",
                    "cache_windows_updates",
                    "directory",
                    "enabled",
                    "l1",
                    "l2",
                    "size"
                ],
                "default": [
                    {
                        "cache_linux_packages": true
                    },
                    {
                        "cache_mem": 256
                    },
                    {
                        "cache_windows_updates": true
                    },
                    {
                        "directory": "/var/squid/cache"
                    },
                    {
                        "enabled": true
                    },
                    {
                        "l1": 16
                    },
                    {
                        "l2": 256
                    },
                    {
                        "size": 100
                    }
                ]
            },
            "OPNsense.proxy.general.logging": {
                "type": "object",
                "properties": {
                    "ignoreLogACL": {
                        "type": "string",
                        "pattern": "/^([\\/0-9a-fA-F.:,])*/u"
                    },
                    "target": {
                        "type": "string"
                    }
                }
            },
            "OPNsense.proxy.general.logging.enable": {
                "type": "object",
                "properties": {
                    "accessLog": {
                        "type": "boolean"
                    },
                    "storeLog": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "accessLog",
                    "storeLog"
                ],
                "default": [
                    {
                        "accessLog": true
                    },
                    {
                        "storeLog": true
                    }
                ]
            },
            "OPNsense.proxy.general.traffic": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "maxDownloadSize": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "maxUploadSize": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "OverallBandwidthTrotteling": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "perHostTrotteling": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "maxDownloadSize": 2048
                    },
                    {
                        "maxUploadSize": 1024
                    },
                    {
                        "OverallBandwidthTrotteling": 1024
                    },
                    {
                        "perHostTrotteling": 256
                    }
                ]
            },
            "OPNsense.proxy.pac.match": {
                "type": "object",
                "properties": {
                    "date_from": {
                        "type": "string"
                    },
                    "date_to": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain_level_from": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "domain_level_to": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "match_type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "negate": {
                        "type": "boolean"
                    },
                    "network": {
                        "type": "string"
                    },
                    "time_from": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "time_to": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 23
                    },
                    "url": {
                        "type": "string",
                        "pattern": "/^[^\"]*$/"
                    },
                    "weekday_from": {
                        "type": "string"
                    },
                    "weekday_to": {
                        "type": "string"
                    }
                },
                "required": [
                    "date_from",
                    "date_to",
                    "match_type",
                    "name",
                    "negate",
                    "weekday_from",
                    "weekday_to"
                ],
                "default": [
                    {
                        "negate": true
                    }
                ]
            },
            "OPNsense.proxy.pac.proxy": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "proxy_type": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "proxy_type"
                ]
            },
            "OPNsense.proxy.pac.rule": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "join_type": {
                        "type": "string"
                    },
                    "matches": {
                        "type": "string"
                    },
                    "match_type": {
                        "type": "string"
                    },
                    "proxies": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "join_type",
                    "matches",
                    "match_type",
                    "proxies"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.ProxySSO": {
                "type": "object",
                "properties": {
                    "ADKerberosImplementation": {
                        "type": "string"
                    },
                    "EnableSSO": {
                        "type": "boolean"
                    },
                    "KerberosHostName": {
                        "type": "string"
                    }
                },
                "required": [
                    "ADKerberosImplementation",
                    "EnableSSO"
                ],
                "default": [
                    {
                        "EnableSSO": true
                    }
                ]
            },
            "OPNsense.ProxyUserACL.general.ACLs.ACL": {
                "type": "object",
                "properties": {
                    "Black": {
                        "type": "string"
                    },
                    "Domains": {
                        "type": "string"
                    },
                    "Group": {
                        "type": "string"
                    },
                    "Hex": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Priority": {
                        "type": "integer"
                    }
                },
                "required": [
                    "Black",
                    "Group",
                    "Hex",
                    "Name",
                    "Priority"
                ]
            },
            "OPNsense.quagga.bgp": {
                "type": "object",
                "properties": {
                    "asnumber": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4294967295
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "networks": {
                        "type": "string",
                        "pattern": "/^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2},)*(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2})$/"
                    },
                    "redistribute": {
                        "type": "string"
                    }
                },
                "required": [
                    "asnumber",
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.bgp.aspaths.aspath": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "AS": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 99
                    }
                },
                "required": [
                    "action",
                    "AS",
                    "enabled",
                    "number"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.bgp.neighbors.neighbor": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "defaultoriginate": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "linkedPrefixlistIn": {
                        "type": "string"
                    },
                    "linkedPrefixlistOut": {
                        "type": "string"
                    },
                    "linkedRoutemapIn": {
                        "type": "string"
                    },
                    "linkedRoutemapOut": {
                        "type": "string"
                    },
                    "nexthopself": {
                        "type": "boolean"
                    },
                    "remoteas": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4294967295
                    },
                    "updatesource": {
                        "type": "string"
                    }
                },
                "required": [
                    "address",
                    "enabled",
                    "remoteas"
                ],
                "default": [
                    {
                        "defaultoriginate": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "nexthopself": true
                    }
                ]
            },
            "OPNsense.quagga.bgp.prefixlists.prefixlist": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "seqnumber": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 99
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "name",
                    "network",
                    "seqnumber"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.bgp.routemaps.routemap": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 99
                    },
                    "match": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "set": {
                        "type": "string"
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "id",
                    "name",
                    "set"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.general": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "enablelogfile": {
                        "type": "boolean"
                    },
                    "enablesyslog": {
                        "type": "boolean"
                    },
                    "logfilelevel": {
                        "type": "string"
                    },
                    "sysloglevel": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "enablelogfile",
                    "enablesyslog",
                    "logfilelevel",
                    "sysloglevel"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "enablelogfile": true
                    },
                    {
                        "enablesyslog": true
                    }
                ]
            },
            "OPNsense.quagga.ospf": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "originate": {
                        "type": "boolean"
                    },
                    "originatealways": {
                        "type": "boolean"
                    },
                    "passiveinterfaces": {
                        "type": "string"
                    },
                    "redistribute": {
                        "type": "string"
                    },
                    "routerid": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    }
                },
                "required": [
                    "enabled",
                    "originate",
                    "originatealways"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "originate": true
                    },
                    {
                        "originatealways": true
                    }
                ]
            },
            "OPNsense.quagga.ospf.interfaces.interface": {
                "type": "object",
                "properties": {
                    "authkey": {
                        "type": "string",
                        "pattern": "/^\\S+$/"
                    },
                    "authtype": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "deadinterval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "hellointerval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "interfacename": {
                        "type": "string"
                    },
                    "networktype": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "retransmitinterval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "transmitdelay": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.ospf.networks.network": {
                "type": "object",
                "properties": {
                    "area": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "ipaddr": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "linkedPrefixlistIn": {
                        "type": "string"
                    },
                    "linkedPrefixlistOut": {
                        "type": "string"
                    },
                    "netmask": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 32
                    }
                },
                "required": [
                    "area",
                    "enabled",
                    "ipaddr",
                    "netmask"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "netmask": 24
                    }
                ]
            },
            "OPNsense.quagga.ospf.prefixlists.prefixlist": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "seqnumber": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 99
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "name",
                    "network",
                    "seqnumber"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.ospf6": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "redistribute": {
                        "type": "string"
                    },
                    "routerid": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    }
                },
                "required": [
                    "enabled",
                    "routerid"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.ospf6.interfaces.interface": {
                "type": "object",
                "properties": {
                    "area": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "cost": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "deadinterval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "hellointerval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "interfacename": {
                        "type": "string"
                    },
                    "networktype": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "retransmitinterval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "transmitdelay": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                },
                "required": [
                    "area",
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.rip": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "networks": {
                        "type": "string",
                        "pattern": "/^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2},)*(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2})$/"
                    },
                    "passiveinterfaces": {
                        "type": "string"
                    },
                    "redistribute": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 2
                    }
                },
                "required": [
                    "enabled",
                    "networks",
                    "version"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "version": 2
                    }
                ]
            },
            "OPNsense.redis.general": {
                "type": "object",
                "properties": {
                    "databases": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "listen": {
                        "type": "string"
                    },
                    "log_level": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65536
                    },
                    "protected_mode": {
                        "type": "boolean"
                    },
                    "syslog_enabled": {
                        "type": "boolean"
                    },
                    "syslog_facility": {
                        "type": "string"
                    }
                },
                "required": [
                    "databases",
                    "enabled",
                    "log_level",
                    "protected_mode",
                    "syslog_enabled",
                    "syslog_facility"
                ],
                "default": [
                    {
                        "databases": 16
                    },
                    {
                        "enabled": true
                    },
                    {
                        "port": 6379
                    },
                    {
                        "protected_mode": true
                    },
                    {
                        "syslog_enabled": true
                    }
                ]
            },
            "OPNsense.redis.limits": {
                "type": "object",
                "properties": {
                    "maxclients": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "maxmemory": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "maxmemory_policy": {
                        "type": "string"
                    },
                    "maxmemory_samples": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "required": [
                    "maxmemory_policy"
                ],
                "default": [
                    {
                        "maxclients": 10000
                    },
                    {
                        "maxmemory_samples": 5
                    }
                ]
            },
            "OPNsense.redis.security": {
                "type": "object",
                "properties": {
                    "disable_commands": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "OPNsense.redis.slowlog": {
                "type": "object",
                "properties": {
                    "max_len": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "slower_than": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "default": [
                    {
                        "max_len": 128
                    },
                    {
                        "slower_than": 10000
                    }
                ]
            },
            "OPNsense.relayd.general": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "interval": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "log": {
                        "type": "string"
                    },
                    "prefork": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "timeout": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "interval": 10
                    },
                    {
                        "prefork": 3
                    },
                    {
                        "timeout": 200
                    }
                ]
            },
            "OPNsense.relayd.host": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){0,1024}$/u"
                    },
                    "ipTTL": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\._\\- ]){1,255}$/u"
                    },
                    "priority": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "retry": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "address",
                    "name"
                ]
            },
            "OPNsense.relayd.protocol": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\._\\- ]){1,255}$/u"
                    },
                    "options": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "OPNsense.relayd.table": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "hosts": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\._\\- ]){1,255}$/u"
                    }
                },
                "required": [
                    "enabled",
                    "hosts",
                    "name"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.relayd.tablecheck": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "string"
                    },
                    "digest": {
                        "type": "string"
                    },
                    "expect": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){0,1024}$/u"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\._\\- ]){1,255}$/u"
                    },
                    "path": {
                        "type": "string"
                    },
                    "ssl": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "OPNsense.relayd.virtualserver": {
                "type": "object",
                "properties": {
                    "backuptransport_interval": {
                        "type": "integer",
                        "minimum": 2
                    },
                    "backuptransport_table": {
                        "type": "string"
                    },
                    "backuptransport_tablecheck": {
                        "type": "string"
                    },
                    "backuptransport_tablemode": {
                        "type": "string"
                    },
                    "backuptransport_timeout": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "listen_address": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){0,1024}$/u"
                    },
                    "listen_endport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "listen_interface": {
                        "type": "string"
                    },
                    "listen_startport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\._\\- ]){1,255}$/u"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "routing_interface": {
                        "type": "string"
                    },
                    "sessiontimeout": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 2147483647
                    },
                    "stickyaddress": {
                        "type": "boolean"
                    },
                    "transport_interval": {
                        "type": "integer",
                        "minimum": 2
                    },
                    "transport_port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "transport_table": {
                        "type": "string"
                    },
                    "transport_tablecheck": {
                        "type": "string"
                    },
                    "transport_tablemode": {
                        "type": "string"
                    },
                    "transport_timeout": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "transport_type": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "listen_address",
                    "listen_startport",
                    "name",
                    "transport_table",
                    "transport_tablecheck",
                    "transport_type",
                    "type"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "sessiontimeout": 600
                    },
                    {
                        "stickyaddress": true
                    }
                ]
            },
            "OPNsense.Rspamd.av": {
                "type": "object",
                "properties": {
                    "attachments-only": {
                        "type": "boolean"
                    },
                    "force-reject": {
                        "type": "boolean"
                    },
                    "max-size": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "whitelist": {
                        "type": "string"
                    }
                },
                "required": [
                    "attachments-only",
                    "force-reject"
                ],
                "default": [
                    {
                        "attachments-only": true
                    },
                    {
                        "force-reject": true
                    },
                    {
                        "max-size": 20000000
                    }
                ]
            },
            "OPNsense.Rspamd.dkim": {
                "type": "object",
                "properties": {
                    "allow_envfrom_empty": {
                        "type": "boolean"
                    },
                    "allow_hdrfrom_mismatch": {
                        "type": "boolean"
                    },
                    "allow_hdrfrom_multiple": {
                        "type": "boolean"
                    },
                    "allow_username_mismatch": {
                        "type": "boolean"
                    },
                    "auth_only": {
                        "type": "boolean"
                    },
                    "cache_expire": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "cache_size": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "sign_local": {
                        "type": "boolean"
                    },
                    "skip_multi": {
                        "type": "boolean"
                    },
                    "time_jitter": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "trusted_only": {
                        "type": "boolean"
                    },
                    "try_fallback": {
                        "type": "boolean"
                    },
                    "use_domain": {
                        "type": "string"
                    },
                    "use_esld": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "allow_envfrom_empty",
                    "allow_hdrfrom_mismatch",
                    "allow_hdrfrom_multiple",
                    "allow_username_mismatch",
                    "auth_only",
                    "sign_local",
                    "skip_multi",
                    "trusted_only",
                    "try_fallback",
                    "use_domain",
                    "use_esld"
                ],
                "default": [
                    {
                        "allow_envfrom_empty": true
                    },
                    {
                        "allow_hdrfrom_mismatch": true
                    },
                    {
                        "allow_hdrfrom_multiple": true
                    },
                    {
                        "allow_username_mismatch": true
                    },
                    {
                        "auth_only": true
                    },
                    {
                        "sign_local": true
                    },
                    {
                        "skip_multi": true
                    },
                    {
                        "trusted_only": true
                    },
                    {
                        "try_fallback": true
                    },
                    {
                        "use_esld": true
                    }
                ]
            },
            "OPNsense.Rspamd.general": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "enable_redis_plugin": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enabled",
                    "enable_redis_plugin"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "enable_redis_plugin": true
                    }
                ]
            },
            "OPNsense.Rspamd.graylist": {
                "type": "object",
                "properties": {
                    "expire": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "ipv4mask": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 32
                    },
                    "ipv6mask": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 128
                    },
                    "max_data_len": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "default": [
                    {
                        "ipv4mask": 19
                    },
                    {
                        "ipv6mask": 64
                    }
                ]
            },
            "OPNsense.Rspamd.milter_headers": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "enable_authentication_results": {
                        "type": "boolean"
                    },
                    "enable_extended_spam_headers": {
                        "type": "boolean"
                    },
                    "enable_spamd_bar": {
                        "type": "boolean"
                    },
                    "extended_headers_rcpt": {
                        "type": "string",
                        "pattern": "/[a-z0-9\\.\\-_@,]+/i"
                    },
                    "skip_authenticated": {
                        "type": "boolean"
                    },
                    "skip_local": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enabled",
                    "enable_authentication_results",
                    "enable_extended_spam_headers",
                    "enable_spamd_bar",
                    "skip_authenticated",
                    "skip_local"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "enable_authentication_results": true
                    },
                    {
                        "enable_extended_spam_headers": true
                    },
                    {
                        "enable_spamd_bar": true
                    },
                    {
                        "skip_authenticated": true
                    },
                    {
                        "skip_local": true
                    }
                ]
            },
            "OPNsense.Rspamd.multimap": {
                "type": "object",
                "properties": {
                    "badfileextension": {
                        "type": "string"
                    }
                }
            },
            "OPNsense.Rspamd.mx-check": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "expire": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "expire": 86400
                    }
                ]
            },
            "OPNsense.Rspamd.phishing": {
                "type": "object",
                "properties": {
                    "openphish_enabled": {
                        "type": "boolean"
                    },
                    "openphish_map": {
                        "type": "string"
                    },
                    "openphish_premium_enabled": {
                        "type": "boolean"
                    },
                    "phishtank_enabled": {
                        "type": "boolean"
                    },
                    "phishtank_map": {
                        "type": "string"
                    }
                },
                "required": [
                    "openphish_enabled",
                    "openphish_premium_enabled",
                    "phishtank_enabled"
                ],
                "default": [
                    {
                        "openphish_enabled": true
                    },
                    {
                        "openphish_premium_enabled": true
                    },
                    {
                        "phishtank_enabled": true
                    }
                ]
            },
            "OPNsense.Rspamd.rate_limit": {
                "type": "object",
                "properties": {
                    "max_rcpt": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "whitelisted_rcpts": {
                        "type": "string"
                    }
                },
                "required": [
                    "max_rcpt"
                ],
                "default": [
                    {
                        "max_rcpt": 20
                    }
                ]
            },
            "OPNsense.Rspamd.rate_limit.bounce": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time_unit": {
                        "type": "string"
                    }
                },
                "required": [
                    "time_unit"
                ]
            },
            "OPNsense.Rspamd.rate_limit.bounce_ip": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time_unit": {
                        "type": "string"
                    }
                },
                "required": [
                    "time_unit"
                ]
            },
            "OPNsense.Rspamd.rate_limit.per_ip": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time_unit": {
                        "type": "string"
                    }
                },
                "required": [
                    "time_unit"
                ]
            },
            "OPNsense.Rspamd.rate_limit.per_ip_from": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time_unit": {
                        "type": "string"
                    }
                },
                "required": [
                    "time_unit"
                ]
            },
            "OPNsense.Rspamd.rate_limit.per_recipient": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time_unit": {
                        "type": "string"
                    }
                },
                "required": [
                    "time_unit"
                ]
            },
            "OPNsense.Rspamd.rate_limit.user": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "time_unit": {
                        "type": "string"
                    }
                },
                "required": [
                    "time_unit"
                ]
            },
            "OPNsense.Rspamd.spamtrap": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "fuzzy_learning": {
                        "type": "boolean"
                    },
                    "spam_learning": {
                        "type": "boolean"
                    },
                    "spam_recipients": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "fuzzy_learning",
                    "spam_learning"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "fuzzy_learning": true
                    },
                    {
                        "spam_learning": true
                    }
                ]
            },
            "OPNsense.Rspamd.spf": {
                "type": "object",
                "properties": {
                    "spf_cache_expire": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "spf_cache_size": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "default": [
                    {
                        "spf_cache_size": 2
                    }
                ]
            },
            "OPNsense.Rspamd.surbl": {
                "type": "object",
                "properties": {
                    "exceptions": {
                        "type": "string"
                    },
                    "whitelist": {
                        "type": "string"
                    }
                }
            },
            "OPNsense.shadowsocks.general": {
                "type": "object",
                "properties": {
                    "cipher": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "localport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "password": {
                        "type": "string"
                    },
                    "serveraddress": {
                        "type": "string"
                    },
                    "serverport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    }
                },
                "required": [
                    "cipher",
                    "enabled",
                    "localport",
                    "serveraddress",
                    "serverport"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "localport": 1080
                    },
                    {
                        "password": "password"
                    },
                    {
                        "serveraddress": "127.0.0.1"
                    },
                    {
                        "serverport": 8388
                    }
                ]
            },
            "OPNsense.shadowsocks.local": {
                "type": "object",
                "properties": {
                    "cipher": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "localaddress": {
                        "type": "string"
                    },
                    "localport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "password": {
                        "type": "string"
                    },
                    "serveraddress": {
                        "type": "string"
                    },
                    "serverport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    }
                },
                "required": [
                    "cipher",
                    "enabled",
                    "localaddress",
                    "localport",
                    "serveraddress",
                    "serverport"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "localaddress": "127.0.0.1"
                    },
                    {
                        "localport": 1080
                    },
                    {
                        "password": "password"
                    },
                    {
                        "serveraddress": "127.0.0.1"
                    },
                    {
                        "serverport": 8388
                    }
                ]
            },
            "OPNsense.siproxd.domain.domains.domain": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "host": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    }
                },
                "required": [
                    "enabled",
                    "host",
                    "name",
                    "port"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "port": 5060
                    }
                ]
            },
            "OPNsense.siproxd.general": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "hosts_allow_reg": {
                        "type": "string"
                    },
                    "hosts_allow_sip": {
                        "type": "string"
                    },
                    "hosts_deny_sip": {
                        "type": "string"
                    },
                    "host_outbound": {
                        "type": "string"
                    },
                    "if_inbound": {
                        "type": "string"
                    },
                    "if_outbound": {
                        "type": "string"
                    },
                    "plugin_defaulttarget_enable": {
                        "type": "boolean"
                    },
                    "plugin_defaulttarget_log": {
                        "type": "boolean"
                    },
                    "plugin_defaulttarget_target": {
                        "type": "string"
                    },
                    "plugin_fbox_anoncall_enable": {
                        "type": "boolean"
                    },
                    "plugin_fbox_anoncall_networks": {
                        "type": "string"
                    },
                    "plugin_fix_bogus_via_enable": {
                        "type": "boolean"
                    },
                    "plugin_fix_bogus_via_networks": {
                        "type": "string"
                    },
                    "plugin_fix_DTAG_enable": {
                        "type": "boolean"
                    },
                    "plugin_fix_DTAG_networks": {
                        "type": "string"
                    },
                    "plugin_stun_server_enable": {
                        "type": "boolean"
                    },
                    "plugin_stun_server_host": {
                        "type": "string"
                    },
                    "plugin_stun_server_period": {
                        "type": "integer"
                    },
                    "plugin_stun_server_port": {
                        "type": "integer"
                    },
                    "proxy_auth_enable": {
                        "type": "boolean"
                    },
                    "rtp_dscp": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64
                    },
                    "rtp_input_dejitter": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    "rtp_output_dejitter": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    "rtp_port_high": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "rtp_port_low": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "rtp_timeout": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "sip_dscp": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64
                    },
                    "sip_listen_port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "tcp_connect_timeout": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "tcp_keepalive": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 10000
                    },
                    "tcp_timeout": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "ua_string": {
                        "type": "string"
                    },
                    "use_rport": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "if_inbound",
                    "if_outbound",
                    "rtp_dscp",
                    "rtp_input_dejitter",
                    "rtp_output_dejitter",
                    "rtp_port_high",
                    "rtp_port_low",
                    "rtp_timeout",
                    "sip_dscp",
                    "sip_listen_port",
                    "tcp_connect_timeout",
                    "tcp_keepalive",
                    "tcp_timeout",
                    "use_rport"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "plugin_defaulttarget_enable": true
                    },
                    {
                        "plugin_defaulttarget_log": true
                    },
                    {
                        "plugin_fbox_anoncall_enable": true
                    },
                    {
                        "plugin_fix_bogus_via_enable": true
                    },
                    {
                        "plugin_fix_DTAG_enable": true
                    },
                    {
                        "plugin_stun_server_enable": true
                    },
                    {
                        "proxy_auth_enable": true
                    },
                    {
                        "rtp_dscp": 46
                    },
                    {
                        "rtp_port_high": 7089
                    },
                    {
                        "rtp_port_low": 7070
                    },
                    {
                        "rtp_timeout": 300
                    },
                    {
                        "sip_listen_port": 5060
                    },
                    {
                        "tcp_connect_timeout": 500
                    },
                    {
                        "tcp_keepalive": 20
                    },
                    {
                        "tcp_timeout": 600
                    }
                ]
            },
            "OPNsense.siproxd.user.users.user": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-\\!\\$\\%\\/\\(\\)\\+\\#\\=]){1,128}$/u"
                    },
                    "username": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,128}$/u"
                    }
                },
                "required": [
                    "enabled",
                    "password",
                    "username"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.telegraf.general": {
                "type": "object",
                "properties": {
                    "collection_jitter": {
                        "type": "integer"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "flush_interval": {
                        "type": "integer"
                    },
                    "flush_jitter": {
                        "type": "integer"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "interval": {
                        "type": "integer"
                    },
                    "metric_batch_size": {
                        "type": "integer"
                    },
                    "metric_buffer_limit": {
                        "type": "integer"
                    },
                    "omit_hostname": {
                        "type": "boolean"
                    },
                    "roundinterval": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "collection_jitter",
                    "enabled",
                    "flush_interval",
                    "flush_jitter",
                    "interval",
                    "metric_batch_size",
                    "metric_buffer_limit",
                    "omit_hostname",
                    "roundinterval"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "flush_interval": 10
                    },
                    {
                        "interval": 10
                    },
                    {
                        "metric_batch_size": 1000
                    },
                    {
                        "metric_buffer_limit": 10000
                    },
                    {
                        "omit_hostname": true
                    },
                    {
                        "roundinterval": true
                    }
                ]
            },
            "OPNsense.telegraf.input": {
                "type": "object",
                "properties": {
                    "collect_cpu_time": {
                        "type": "boolean"
                    },
                    "cpu": {
                        "type": "boolean"
                    },
                    "cpu_percpu": {
                        "type": "boolean"
                    },
                    "cpu_totalcpu": {
                        "type": "boolean"
                    },
                    "disk": {
                        "type": "boolean"
                    },
                    "diskio": {
                        "type": "boolean"
                    },
                    "disk_ignore_fs": {
                        "type": "string"
                    },
                    "disk_mount_points": {
                        "type": "string"
                    },
                    "haproxy": {
                        "type": "boolean"
                    },
                    "mem": {
                        "type": "boolean"
                    },
                    "network": {
                        "type": "boolean"
                    },
                    "pf": {
                        "type": "boolean"
                    },
                    "ping": {
                        "type": "boolean"
                    },
                    "ping_hosts": {
                        "type": "string"
                    },
                    "processes": {
                        "type": "boolean"
                    },
                    "swap": {
                        "type": "boolean"
                    },
                    "system": {
                        "type": "boolean"
                    }
                },
                "default": [
                    {
                        "collect_cpu_time": true
                    },
                    {
                        "cpu": true
                    },
                    {
                        "cpu_percpu": true
                    },
                    {
                        "cpu_totalcpu": true
                    },
                    {
                        "disk": true
                    },
                    {
                        "diskio": true
                    },
                    {
                        "haproxy": true
                    },
                    {
                        "mem": true
                    },
                    {
                        "network": true
                    },
                    {
                        "pf": true
                    },
                    {
                        "ping": true
                    },
                    {
                        "processes": true
                    },
                    {
                        "swap": true
                    },
                    {
                        "system": true
                    }
                ]
            },
            "OPNsense.telegraf.key.keys.key": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,128}$/u"
                    },
                    "value": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,128}$/u"
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.telegraf.output": {
                "type": "object",
                "properties": {
                    "elastic_enable": {
                        "type": "boolean"
                    },
                    "elastic_indexname": {
                        "type": "string"
                    },
                    "elastic_timeout": {
                        "type": "integer"
                    },
                    "elastic_url": {
                        "type": "string"
                    },
                    "graphite_enable": {
                        "type": "boolean"
                    },
                    "graphite_prefix": {
                        "type": "string"
                    },
                    "graphite_server": {
                        "type": "string"
                    },
                    "graphite_template": {
                        "type": "string"
                    },
                    "graphite_verify": {
                        "type": "boolean"
                    },
                    "graylog_enable": {
                        "type": "boolean"
                    },
                    "graylog_server": {
                        "type": "string"
                    },
                    "influx_database": {
                        "type": "string"
                    },
                    "influx_enable": {
                        "type": "boolean"
                    },
                    "influx_password": {
                        "type": "string"
                    },
                    "influx_timeout": {
                        "type": "integer"
                    },
                    "influx_url": {
                        "type": "string"
                    },
                    "influx_username": {
                        "type": "string"
                    },
                    "prometheus_enable": {
                        "type": "boolean"
                    },
                    "prometheus_exclude": {
                        "type": "string"
                    },
                    "prometheus_listen": {
                        "type": "integer"
                    },
                    "prometheus_stringaslabel": {
                        "type": "boolean"
                    }
                },
                "default": [
                    {
                        "elastic_enable": true
                    },
                    {
                        "elastic_indexname": "telegraf-%Y.%m.%d"
                    },
                    {
                        "elastic_timeout": 5
                    },
                    {
                        "graphite_enable": true
                    },
                    {
                        "graphite_verify": true
                    },
                    {
                        "graylog_enable": true
                    },
                    {
                        "influx_enable": true
                    },
                    {
                        "influx_timeout": 5
                    },
                    {
                        "prometheus_enable": true
                    },
                    {
                        "prometheus_stringaslabel": true
                    }
                ]
            },
            "OPNsense.Tinc.hosts.host": {
                "type": "object",
                "properties": {
                    "cipher": {
                        "type": "string"
                    },
                    "connectTo": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "extaddress": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){0,1024}$/u"
                    },
                    "extport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "hostname": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\_]){1,1024}$/u"
                    },
                    "network": {
                        "type": "string"
                    },
                    "pubkey": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    }
                },
                "required": [
                    "cipher",
                    "connectTo",
                    "enabled",
                    "extaddress",
                    "extport",
                    "hostname",
                    "network",
                    "pubkey",
                    "subnet"
                ],
                "default": [
                    {
                        "connectTo": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "extport": 655
                    }
                ]
            },
            "OPNsense.Tinc.networks.network": {
                "type": "object",
                "properties": {
                    "cipher": {
                        "type": "string"
                    },
                    "debuglevel": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "extaddress": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){0,1024}$/u"
                    },
                    "extport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "hostname": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\_]){1,1024}$/u"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "intaddress": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z]){1,50}$/u"
                    },
                    "pingtimeout": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "PMTUDiscovery": {
                        "type": "boolean"
                    },
                    "privkey": {
                        "type": "string"
                    },
                    "pubkey": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    }
                },
                "required": [
                    "cipher",
                    "debuglevel",
                    "enabled",
                    "extaddress",
                    "extport",
                    "hostname",
                    "id",
                    "intaddress",
                    "mode",
                    "name",
                    "pingtimeout",
                    "PMTUDiscovery",
                    "privkey",
                    "pubkey",
                    "subnet"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "extport": 655
                    },
                    {
                        "pingtimeout": 5
                    },
                    {
                        "PMTUDiscovery": true
                    }
                ]
            },
            "OPNsense.tor.aclsockspolicy.policy": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "network": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "network",
                    "type"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.tor.exitpolicy.policy": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "endport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "network": {
                        "type": "string"
                    },
                    "startport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "network",
                    "type"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.tor.general": {
                "type": "object",
                "properties": {
                    "control_port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "control_port_password": {
                        "type": "string",
                        "pattern": "/^.+$/"
                    },
                    "control_port_password_hashed": {
                        "type": "string",
                        "pattern": "/^.+$/"
                    },
                    "dns_map_hosts": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enablelogfile": {
                        "type": "boolean"
                    },
                    "enablesyslog": {
                        "type": "boolean"
                    },
                    "enable_transparent": {
                        "type": "boolean"
                    },
                    "fascist_firewall": {
                        "type": "boolean"
                    },
                    "fascist_firewall_ports": {
                        "type": "string",
                        "pattern": "/^(\\d+,)*\\d+$/"
                    },
                    "logfilelevel": {
                        "type": "string"
                    },
                    "max_memory_in_queues": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "scheduler": {
                        "type": "string"
                    },
                    "socks_listen_ip": {
                        "type": "string"
                    },
                    "socks_listen_port": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 65535
                    },
                    "sysloglevel": {
                        "type": "string"
                    },
                    "transparent_dns": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 65535
                    },
                    "transparent_ip_pool": {
                        "type": "string"
                    },
                    "transparent_port": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 65535
                    }
                },
                "required": [
                    "dns_map_hosts",
                    "enabled",
                    "enablelogfile",
                    "enablesyslog",
                    "enable_transparent",
                    "fascist_firewall",
                    "fascist_firewall_ports",
                    "logfilelevel",
                    "scheduler",
                    "socks_listen_port",
                    "sysloglevel",
                    "transparent_dns",
                    "transparent_ip_pool",
                    "transparent_port"
                ],
                "default": [
                    {
                        "control_port": 9051
                    },
                    {
                        "dns_map_hosts": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "enablelogfile": true
                    },
                    {
                        "enablesyslog": true
                    },
                    {
                        "enable_transparent": true
                    },
                    {
                        "fascist_firewall": true
                    },
                    {
                        "socks_listen_port": 9050
                    },
                    {
                        "transparent_dns": 9053
                    },
                    {
                        "transparent_port": 9040
                    }
                ]
            },
            "OPNsense.tor.general.client_authentications.client_auth": {
                "type": "object",
                "properties": {
                    "auth_cookie": {
                        "type": "string",
                        "pattern": "/^[a-z0-9\\+\\/]{22}$/i"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "onion_service": {
                        "type": "string",
                        "pattern": "/^[a-z2-7]{16}\\.onion$/i"
                    }
                },
                "required": [
                    "auth_cookie",
                    "enabled",
                    "onion_service"
                ],
                "default": [
                    {
                        "auth_cookie": "0000000000000000000000"
                    },
                    {
                        "enabled": true
                    },
                    {
                        "onion_service": "exampleexample23.onion"
                    }
                ]
            },
            "OPNsense.tor.hiddenservice.service": {
                "type": "object",
                "properties": {
                    "clients": {
                        "type": "string",
                        "pattern": "/^([a-z0-9_+-]+,)*([a-z0-9_+-]*)$/i"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[a-z0-9_-]+$/i"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "name",
                    "type"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.tor.hiddenserviceacl.hiddenserviceacl": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "hiddenservice": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "target_host": {
                        "type": "string"
                    },
                    "target_port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    }
                },
                "required": [
                    "enabled",
                    "hiddenservice",
                    "port",
                    "target_host",
                    "target_port"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "port": 80
                    },
                    {
                        "target_port": 80
                    }
                ]
            },
            "OPNsense.tor.relay": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "pattern": "/^[a-z0-9.-]+$/i"
                    },
                    "bandwithburst": {
                        "type": "integer"
                    },
                    "bandwithrate": {
                        "type": "integer"
                    },
                    "contact_info": {
                        "type": "string",
                        "pattern": [
                            []
                        ]
                    },
                    "directory_port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "dir_frontpage": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "exitenabled": {
                        "type": "boolean"
                    },
                    "exitipv6": {
                        "type": "boolean"
                    },
                    "exitrejectlocalif": {
                        "type": "boolean"
                    },
                    "exitrejectprivateip": {
                        "type": "boolean"
                    },
                    "host": {
                        "type": "string",
                        "pattern": "/^([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])$/"
                    },
                    "hostv6": {
                        "type": "string",
                        "pattern": "/^[a-f0-9:]{2,}$/i"
                    },
                    "nick": {
                        "type": "string",
                        "pattern": "/^[a-zA-Z0-9]+$/"
                    },
                    "outboundbind": {
                        "type": "string",
                        "pattern": "/^([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])$/"
                    },
                    "outboundbindv6": {
                        "type": "string",
                        "pattern": "/^[a-f0-9:]{2,}$/i"
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 65535
                    },
                    "publish": {
                        "type": "boolean"
                    },
                    "relay": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "dir_frontpage",
                    "enabled",
                    "exitenabled",
                    "exitrejectlocalif",
                    "exitrejectprivateip",
                    "port",
                    "publish",
                    "relay"
                ],
                "default": [
                    {
                        "dir_frontpage": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "exitenabled": true
                    },
                    {
                        "exitipv6": true
                    },
                    {
                        "exitrejectlocalif": true
                    },
                    {
                        "exitrejectprivateip": true
                    },
                    {
                        "port": 9001
                    },
                    {
                        "publish": true
                    },
                    {
                        "relay": true
                    }
                ]
            },
            "OPNsense.TrafficShaper.pipes.pipe": {
                "type": "object",
                "properties": {
                    "bandwidth": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 899795
                    },
                    "bandwidthMetric": {
                        "type": "string"
                    },
                    "buckets": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "codel_ecn_enable": {
                        "type": "boolean"
                    },
                    "codel_enable": {
                        "type": "boolean"
                    },
                    "codel_interval": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "codel_target": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "delay": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 3000
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "fqcodel_flows": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "fqcodel_limit": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "fqcodel_quantum": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "mask": {
                        "type": "string"
                    },
                    "number": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "origin": {
                        "type": "string",
                        "pattern": "/^([a-z,A-Z,1-9]){0,30}$/"
                    },
                    "queue": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 100
                    },
                    "scheduler": {
                        "type": "string"
                    }
                },
                "required": [
                    "bandwidth",
                    "bandwidthMetric",
                    "codel_ecn_enable",
                    "codel_enable",
                    "description",
                    "enabled",
                    "mask",
                    "number"
                ],
                "default": [
                    {
                        "codel_ecn_enable": true
                    },
                    {
                        "codel_enable": true
                    },
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.TrafficShaper.queues.queue": {
                "type": "object",
                "properties": {
                    "buckets": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "codel_ecn_enable": {
                        "type": "boolean"
                    },
                    "codel_enable": {
                        "type": "boolean"
                    },
                    "codel_interval": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "codel_target": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "mask": {
                        "type": "string"
                    },
                    "number": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "origin": {
                        "type": "string",
                        "pattern": "/^([a-z,A-Z,1-9]){0,30}$/"
                    },
                    "pipe": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100
                    }
                },
                "required": [
                    "codel_ecn_enable",
                    "codel_enable",
                    "description",
                    "enabled",
                    "mask",
                    "number",
                    "pipe",
                    "weight"
                ],
                "default": [
                    {
                        "codel_ecn_enable": true
                    },
                    {
                        "codel_enable": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "weight": 100
                    }
                ]
            },
            "OPNsense.TrafficShaper.rules.rule": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "destination_not": {
                        "type": "boolean"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "dst_port": {
                        "type": "integer"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "Interface": {
                        "type": "string"
                    },
                    "interface2": {
                        "type": "string"
                    },
                    "origin": {
                        "type": "string",
                        "pattern": "/^([a-z,A-Z,1-9]){0,30}$/"
                    },
                    "proto": {
                        "type": "string"
                    },
                    "sequence": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1000000
                    },
                    "source": {
                        "type": "string"
                    },
                    "source_not": {
                        "type": "boolean"
                    },
                    "src_port": {
                        "type": "integer"
                    },
                    "target": {
                        "type": "string"
                    }
                },
                "required": [
                    "destination",
                    "destination_not",
                    "dst_port",
                    "enabled",
                    "Interface",
                    "proto",
                    "sequence",
                    "source",
                    "source_not",
                    "src_port",
                    "target"
                ],
                "default": [
                    {
                        "destination_not": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "sequence": 1
                    },
                    {
                        "source_not": true
                    }
                ]
            },
            "OPNsense.vnstat.general": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "Interface": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.wireguard.client.clients.client": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z]){1,32}$/u"
                    },
                    "psk": {
                        "type": "string",
                        "pattern": "/^[a-zA-Z0-9+\\/]{43}=$/"
                    },
                    "pubkey": {
                        "type": "string"
                    },
                    "serveraddress": {
                        "type": "string"
                    },
                    "serverport": {
                        "type": "integer"
                    },
                    "tunneladdress": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "name",
                    "tunneladdress"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.wireguard.general": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.wireguard.server.servers.server": {
                "type": "object",
                "properties": {
                    "disableroutes": {
                        "type": "boolean"
                    },
                    "dns": {
                        "type": "string",
                        "pattern": "/^([a-fA-F0-9\\.:\\[\\]]*?,)*([a-fA-F0-9\\.:\\[\\]]*)$/"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "instance": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 19
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z]){1,32}$/u"
                    },
                    "peers": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "privkey": {
                        "type": "string"
                    },
                    "pubkey": {
                        "type": "string"
                    },
                    "tunneladdress": {
                        "type": "string"
                    }
                },
                "required": [
                    "disableroutes",
                    "enabled",
                    "instance",
                    "name",
                    "port",
                    "tunneladdress"
                ],
                "default": [
                    {
                        "disableroutes": true
                    },
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.ZabbixAgent.local": {
                "type": "object",
                "properties": {
                    "hostname": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    }
                },
                "required": [
                    "hostname"
                ],
                "default": [
                    {
                        "hostname": "Zabbix agent"
                    }
                ]
            },
            "OPNsense.ZabbixAgent.settings.features": {
                "type": "object",
                "properties": {
                    "activeCheckServers": {
                        "type": "string",
                        "pattern": "/^([a-zA-Z0-9\\.:\\[\\]\\-]*?,)*([a-zA-Z0-9\\.:\\[\\]\\-]*)$/"
                    },
                    "enableActiveChecks": {
                        "type": "boolean"
                    },
                    "enableRemoteCommands": {
                        "type": "boolean"
                    },
                    "logRemoteCommands": {
                        "type": "boolean"
                    },
                    "refreshActiveChecks": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 3600
                    }
                },
                "required": [
                    "enableActiveChecks",
                    "enableRemoteCommands",
                    "logRemoteCommands",
                    "refreshActiveChecks"
                ],
                "default": [
                    {
                        "enableActiveChecks": true
                    },
                    {
                        "enableRemoteCommands": true
                    },
                    {
                        "logRemoteCommands": true
                    },
                    {
                        "refreshActiveChecks": 120
                    }
                ]
            },
            "OPNsense.ZabbixAgent.settings.main": {
                "type": "object",
                "properties": {
                    "debugLevel": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "listenIP": {
                        "type": "string",
                        "pattern": "/^((([0-9a-zA-Z._\\-\\*:]+)([,]){0,1}))*/u"
                    },
                    "listenPort": {
                        "type": "integer",
                        "minimum": 1024,
                        "maximum": 65535
                    },
                    "logFileSize": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    "serverList": {
                        "type": "string",
                        "pattern": "/^([a-zA-Z0-9\\.:\\[\\]\\-]*?,)*([a-zA-Z0-9\\.:\\[\\]\\-]*)$/"
                    },
                    "sourceIP": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    }
                },
                "required": [
                    "debugLevel",
                    "enabled",
                    "listenIP",
                    "listenPort",
                    "logFileSize",
                    "serverList"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "listenPort": 10050
                    },
                    {
                        "logFileSize": 100
                    }
                ]
            },
            "OPNsense.ZabbixAgent.settings.tuning": {
                "type": "object",
                "properties": {
                    "bufferSend": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 3600
                    },
                    "bufferSize": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "maxLinesPerSecond": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "startAgents": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 20
                    },
                    "timeout": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 30
                    }
                },
                "required": [
                    "bufferSend",
                    "bufferSize",
                    "maxLinesPerSecond",
                    "startAgents",
                    "timeout"
                ],
                "default": [
                    {
                        "bufferSend": 5
                    },
                    {
                        "bufferSize": 100
                    },
                    {
                        "maxLinesPerSecond": 100
                    },
                    {
                        "startAgents": 3
                    },
                    {
                        "timeout": 3
                    }
                ]
            },
            "OPNsense.zabbixproxy.general": {
                "type": "object",
                "properties": {
                    "cachesize": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "encryption": {
                        "type": "boolean"
                    },
                    "encryptionidentity": {
                        "type": "string",
                        "pattern": "/^.{1,128}$/"
                    },
                    "encryptionpsk": {
                        "type": "string",
                        "pattern": "/^[A-Fa-f0-9]{32,512}$/"
                    },
                    "historycachesize": {
                        "type": "string"
                    },
                    "historyindexcachesize": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "listenip": {
                        "type": "string"
                    },
                    "listenport": {
                        "type": "string"
                    },
                    "proxymode": {
                        "type": "boolean"
                    },
                    "server": {
                        "type": "string"
                    },
                    "serverport": {
                        "type": "string"
                    },
                    "sourceip": {
                        "type": "string"
                    },
                    "startdiscoverers": {
                        "type": "integer"
                    },
                    "starthttppollers": {
                        "type": "integer"
                    },
                    "startipmipollers": {
                        "type": "integer"
                    },
                    "startpingers": {
                        "type": "integer"
                    },
                    "startpollers": {
                        "type": "string"
                    },
                    "startpollersunreachable": {
                        "type": "integer"
                    },
                    "starttrappers": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer"
                    }
                },
                "required": [
                    "enabled",
                    "encryption",
                    "hostname",
                    "proxymode"
                ],
                "default": [
                    {
                        "cachesize": "8M"
                    },
                    {
                        "enabled": true
                    },
                    {
                        "encryption": true
                    },
                    {
                        "historycachesize": "16M"
                    },
                    {
                        "historyindexcachesize": "4M"
                    },
                    {
                        "hostname": "Zabbix proxy"
                    },
                    {
                        "listenport": "10051"
                    },
                    {
                        "proxymode": true
                    },
                    {
                        "serverport": "10051"
                    },
                    {
                        "startdiscoverers": 1
                    },
                    {
                        "starthttppollers": 1
                    },
                    {
                        "startpingers": 1
                    },
                    {
                        "startpollers": "5"
                    },
                    {
                        "startpollersunreachable": 1
                    },
                    {
                        "starttrappers": 5
                    },
                    {
                        "timeout": 4
                    }
                ]
            },
            "OPNsense.zerotier": {
                "type": "object",
                "properties": {
                    "apiAccessToken": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "localconf": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.zerotier.networks.network": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "networkId": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "networkId"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "staticroutes.route": {
                "type": "object",
                "properties": {
                    "descr": {
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "gateway": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    }
                },
                "required": [
                    "disabled",
                    "gateway",
                    "network"
                ],
                "default": [
                    {
                        "disabled": true
                    }
                ]
            },
            "system.backup.nextcloud": {
                "type": "object",
                "properties": {
                    "backupdir": {
                        "type": "string",
                        "pattern": "/[a-z0-9\\-]+/i"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string"
                    },
                    "password_encryption": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "backupdir",
                    "enabled"
                ],
                "default": [
                    {
                        "backupdir": "OPNsense-Backup"
                    },
                    {
                        "enabled": true
                    }
                ]
            },
            "system.backup.scp": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "hostname": {
                        "type": "string",
                        "pattern": "/\\S*/"
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "remotedirectory": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string",
                        "pattern": "/\\S*/"
                    }
                },
                "required": [
                    "enabled",
                    "port",
                    "remotedirectory"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "port": 22
                    },
                    {
                        "remotedirectory": "OPNsense-Backup"
                    }
                ]
            },
            "wol.wolentry": {
                "type": "object",
                "properties": {
                    "descr": {
                        "type": "string"
                    },
                    "Interface": {
                        "type": "string"
                    },
                    "mac": {
                        "type": "string",
                        "pattern": "/^((?:[a-f0-9]{2}:){5}(?:[a-f0-9]{2}))$/"
                    }
                },
                "required": [
                    "Interface",
                    "mac"
                ],
                "default": [
                    {
                        "mac": "00:00:00:00:00:00"
                    }
                ]
            }
        },
        "securitySchemes": {
            "basicauth": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "basicauth": []
        }
    ],
    "tags": [
        {
            "name": "AcmeClient"
        },
        {
            "name": "ARPScanner"
        },
        {
            "name": "Bind"
        },
        {
            "name": "CaptivePortal"
        },
        {
            "name": "C-ICAP"
        },
        {
            "name": "ClamAV"
        },
        {
            "name": "Collectd"
        },
        {
            "name": "Cron"
        },
        {
            "name": "Firewall"
        },
        {
            "name": "Firmware"
        },
        {
            "name": "FreeRadius"
        },
        {
            "name": "FTPProxy"
        },
        {
            "name": "HAProxy"
        },
        {
            "name": "HelloWorld"
        },
        {
            "name": "IDS"
        },
        {
            "name": "IPerf"
        },
        {
            "name": "LLDPd"
        },
        {
            "name": "MdnsRepeater"
        },
        {
            "name": "Monit"
        },
        {
            "name": "NetSNMP"
        },
        {
            "name": "Nginx"
        },
        {
            "name": "NodeExporter"
        },
        {
            "name": "Nut"
        },
        {
            "name": "OpenConnect"
        },
        {
            "name": "Postfix"
        },
        {
            "name": "Proxy"
        },
        {
            "name": "ProxyUserACL"
        },
        {
            "name": "Quagga"
        },
        {
            "name": "Redis"
        },
        {
            "name": "Relayd"
        },
        {
            "name": "Routes"
        },
        {
            "name": "Rspamd"
        },
        {
            "name": "Shadowsocks"
        },
        {
            "name": "Siproxd"
        },
        {
            "name": "Telegraf"
        },
        {
            "name": "Tinc"
        },
        {
            "name": "Tor"
        },
        {
            "name": "TrafficShaper"
        },
        {
            "name": "Wireguard"
        },
        {
            "name": "Wol"
        },
        {
            "name": "ZabbixAgent"
        },
        {
            "name": "ZabbixProxy"
        },
        {
            "name": "Zerotier"
        }
    ]
}